<?xml version="1.0"  encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask
    TaskName="RealmBuildTasks.WeaveRealmAssembly"
    AssemblyFile="$(MSBuildThisFileDirectory)../tools/Realm.BuildTasks.dll" />
  <Target
    Name="WeaveRealmAssemblyTarget" 
    BeforeTargets="_CompileToNative"
    Condition="'$(TargetFrameworkIdentifier)' == 'Xamarin.iOS'">
    <ItemGroup>
      <FilteredReferences Include="@(ReferencePath)" Condition="('%(Filename)%(Extension)' == 'Realm.dll') Or ('%(Filename)%(Extension)' == 'Realm.Sync.dll')" />
      <ReferencePath Include="$(OutputPath)Realm.dll" Condition="Exists('$(OutputPath)Realm.dll')"/>
      <ReferencePath Include="$(OutputPath)Realm.Sync.dll" Condition="Exists('$(OutputPath)Realm.Sync.dll')"/>
      <ReferencePath Remove="@(FilteredReferences)" />
      <ReferenceCopyLocalPaths Remove="@(FilteredReferences)" />
    </ItemGroup>
    <RealmBuildTasks.WeaveRealmAssembly 
      OutputDirectory="$(ProjectDir)$(OutputPath)"
      AssemblyName="$(AssemblyName)"
      IntermediateDirectory="$(ProjectDir)$(IntermediateOutputPath)" />
  </Target>
  <!-- Puts a copy of RealmWeaver.Fody.dll where it will be found by Fody -->
  <Target Name="CopyRealmWeaver" BeforeTargets="FodyTarget">
    <Message Text="CopyRealmWeaver" />
    <Error 
      Text="Solution directory was not set. If you are building via xbuild, specify by adding a /p:SolutionDir=/path/to/solution/folder argument. See github.com/realm/realm-dotnet/issues/656"
      Condition="'$(SolutionDir)' == ''" />
    <Copy SourceFiles="$(MSBuildThisFileDirectory)..\tools\RealmWeaver.Fody.dll" DestinationFolder="$(SolutionDir)Tools" />
  </Target>
  <ItemGroup>
    <None Include="FodyWeavers.xml" />
  </ItemGroup>
  <PropertyGroup>
    <_RealmNugetNativePath Condition="'$(_RealmNugetNativePath)' == ''">$(MSBuildThisFileDirectory)..\native\</_RealmNugetNativePath>
  </PropertyGroup>
  <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == 'Xamarin.iOS'">
    <NativeReference Include="$(_RealmNugetNativePath)ios\universal\librealm-wrappers.a">
      <Kind>Static</Kind>
      <SmartLink>True</SmartLink>
      <IsCxx>True</IsCxx>
      <LinkerFlags>-lz -framework Security</LinkerFlags>
    </NativeReference>
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == 'Xamarin.Mac'">
    <NativeReference Include="$(_RealmNugetNativePath)..\runtimes\osx.10.10-x64\native\librealm-wrappers.dylib">
      <Kind>Dynamic</Kind>
    </NativeReference>
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == 'MonoAndroid'">
    <AndroidNativeLibrary Include="$(_RealmNugetNativePath)android\armeabi-v7a\librealm-wrappers.so">
      <Link>$(_RealmNugetNativePath)android\armeabi-v7a\librealm-wrappers.so</Link>
    </AndroidNativeLibrary>
    <AndroidNativeLibrary Include="$(_RealmNugetNativePath)android\x86\librealm-wrappers.so">
      <Link>$(_RealmNugetNativePath)android\x86\librealm-wrappers.so</Link>
    </AndroidNativeLibrary>
    <!-- 64bit -->
    <AndroidNativeLibrary Include="$(_RealmNugetNativePath)android\arm64-v8a\librealm-wrappers.so">
      <Link>$(_RealmNugetNativePath)android\arm64-v8a\librealm-wrappers.so</Link>
    </AndroidNativeLibrary>
    <AndroidNativeLibrary Include="$(_RealmNugetNativePath)android\x86_64\librealm-wrappers.so">
      <Link>$(_RealmNugetNativePath)android\x86_64\librealm-wrappers.so</Link>
    </AndroidNativeLibrary>
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">
    <None Include="$(_RealmNugetNativePath)..\runtimes\win81-x86\native\realm-wrappers.dll">
      <Link>lib\win32\x86\realm-wrappers.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="$(_RealmNugetNativePath)..\runtimes\win81-x64\native\realm-wrappers.dll">
      <Link>lib\win32\x64\realm-wrappers.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
</Project>
