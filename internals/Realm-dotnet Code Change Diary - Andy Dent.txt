-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#17 Add Mock CoreProvider

MockCoreProvider.cs
- added to RealmNet project so is universal

RealmWinOnly.sln
- clone of solution with just the minimal targets for testing platform-agnostic code

RealmNet.Tests/CoreProviderTests.cs
- uncommented entire body
- changed generic CoreProvider to MockCoreProvider
- swapped order of propertyName and rowIndex in SetValue calls


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#53 Splitting out the solutions to be platform-specific

Realm.sln refactored into
- RealmFoundation.sln
- RealmWin.sln
- RealmXamarinAndroid.sln
- RealmXamarinIOS.sln
- RealmXamarinMac.sln

RealmNetWeaver.Tests.csproj
- added

RealmNet.Tests.csproj
- removed

IntegrationTests.csproj
- comment out body of SimpleTest until merge in more of the Mock Provider stuff after this


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#50 Mocking merge on refactored

RealmQuery.cs 
- refactored out all the classes and types
- QueryProviders.cs
- RealmQueryProvider.cs
- RealmQueryVisitor.cs
- TypeSystem.cs


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#50 LINQ on one table - weaving in the sample

RealmNet.Tests
- packages.config
  removed bogus old line   <package id="FodyCecil" version="1.28.3" targetFramework="net45" developmentDependency="true" />
- used NuGet PM Install-Package Fody -Version 1.28.3 to get same version as other projects

FodyWeavers.xml
- edited the generated file adding   <RealmNetWeaver />


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#50 LINQ on one table - update Mock for new ICoreProvider interfaces

MockCoreProvider
- MockSharedGroupHandle added as nested class
- CreateSharedGroup

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#50 LINQ on one table - single query operators mocked
	
QueryTests.cs
- removed old tests

MockQueryTestsBase.cs
- added with common test data setup
- removed PrepareForQueries - not needed for mocking tests

MockQuerySingleTableTests.cs
- added (copying some logic from previous QueryTests.cs editing)
- TestWhereQueryWithEqualToString refactored to combinatorial TestWhereQueryWithEqual
- SetupCreatedFourRows removed as no longer loading data

MockSharedGroupHandle
- added

RealmPureNetLINQ.sln
- added to only build AnyCPU with just RealmNet tests


ICoreProvider.cs
- QueryEqual renamed AddQueryEqual
- added declarations for 
	AddQueryNotEqual
	AddQueryLessThan
	AddQueryLessOrEqual
	AddQueryGreaterThan
	AddQueryGreaterOrEqual


MockCoreProvider.cs
- QueryEqual renamed AddQueryEqual
- added declarations for 
	AddQueryNotEqual
	AddQueryLessThan
	AddQueryLessOrEqual
	AddQueryGreaterThan
	AddQueryGreaterOrEqual


RealmQueryVisitor.cs
- VisitBinary 
  - refactored a bit
  - checks arguments
  - added rest of binary clauses
  

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#50 LINQ on one table - simple tests of results with LINQ to Objects

QueryTestsBase.cs
- added

QuerySingleTableTests.cs
- added

RealmNet.Tests
- added configs for x64, x86, ARM and iOS defining USING_REALM_BACKEND

Realm.sln
- set Debug config mappings to build new RealmNet.Tests configs as per solution platform


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#66 LINQ through to the core - string, bool equals and int searches

wrappers.cpp
added
- query_string_not_equal
- query_bool_not_equal
- query_int_equal, query_int_not_equal, query_int_less, query_int_less_equal, query_int_greater, query_int_greater_equal


UnsafeNativeMethods.shared.cs
added
- query_string_not_equal
- query_bool_not_equal
- query_int_equal, query_int_not_equal, query_int_less, query_int_less_equal, query_int_greater, query_int_greater_equal

added stubs
- query_float_equal, query_float_not_equal


CoreProviderShared.cs
- AddQueryEqual Added int, float and double cases
- AddQueryNotEqual filled out with string, bool, int, float & double cases


QueryTestsBase.cs
- Setup 
  - GetTempFileName
  - commented out float and double fields after realising not yet imp

Interop.Win32.csproj
- set back target platform from .Net 4.6 to 4.5 for compatibility with others


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#66 LINQ through to the core - refactoring platforms


Interop.Win32.csproj
- added REALM_32 and REALM_64 

Interop.Win32/InteropConfig.cs
- Is64Bit added cases to use hardcoding depending on REALM_32 and REALM_64
- added DLL_NAME

CoreProvider.shared.cs
- RealmColType added conversion function
- AddColumnToTable refactored to one-liner

UnsafeNativeMethods.shared.cs
- AddColumnToTable stripped back to just declaration using DLL_NAME

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#70 propagating refactoring pattern from #66

UnsafeNativeMethods.shared.cs
- ALL wrapper functions (except table_get_string) selecting between 32 and 64bit variations 
  cleaned up to single extern
- table_get_string removed 

CoreProvider.shared.cs
- added BoolToIntPtr and IntPtrToBool copied from UnsafeNativeMethods.shared.cs
- added StrBufferOverflow, StrBufToStr and StrAllocateBuffer from UnsafeNativeMethods.shared.cs

Cleaned up functions to use externs rather than wrappers from UnsafeNativeMethods:
- AddEmptyRow
- SetValue<T>
- GetValue<T> 
- GetColumnIndex also changed return type to IntPtr
- AddQueryEqual
- AddQueryNotEqual
- CreateSharedGroup
- HasTable
- AddQueryNotEqual

RealmNet.Tests.csproj
- added references to interop Win32, IOS and Android with platform condition

Interop.XamarinAndroid/InteropConfig.cs
- Is64Bit added cases to use hardcoding depending on REALM_32 and REALM_64
- added DLL_NAME

Interop.XamarinIOS/InteropConfig.cs
- Is64Bit added cases to use hardcoding depending on REALM_32 and REALM_64
- added DLL_NAME


Interop.XamarinMac/InteropConfig.cs
- added DLL_NAME

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#72 LINQ Combinatorial Expressions plus int support

MockQuerySingleTableComboTests.cs added

QuerySingleTableComboTests.cs added

ICoreProvider.cs
- AddQueryGroupBegin/End added
- AddQueryAnd/Or added


MockCoreProvider.cs
- AddQueryGroupBegin/End added
- AddQueryAnd/Or added


CoreProvider.shared.cs
- AddQueryGroupBegin/End added
- AddQueryAnd added (does nothing)
- AddQueryOr added
- AddQueryNotEqual and AddQueryEqual -  comment out unimplemented float/double
- AddQueryLessThan, AddQueryLessThanorEqual, AddQueryGreaterThan and AddQueryGreaterThanOrEqual added


RealmQueryVisitor
- VisitBinary
  - use correct types - AndAlso and OrElse instead of And and Or
  - restructure to use groups and and/or
- VisitCombination added to help VisitCombination

wrappers.cpp
- table_set_int64, table_get_int64 added  
  
UnsafeNativeMethods.shared.cs
- added query_begin_group/ query_end_group
- added table_set_int64, get_int64
- removed stubs table_set_long, table_set_int, table_get_long


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#72 LINQ Combinatorial Expressions response to code review

Rename USING_REALM_BACKEND to USING_REALM_CORE
- QuerySingleTableComboTests.cs
- QuerySingleTableTests.cs
- QueryTestsBase.cs
- RealmNet.Tests.csproj

wrappers.cpp
- fix tabs to 4 spaces
- query_group_begin, query_group_end and query_or added

UnsafeNativeMethods.shared.cs
- call new wrapper query_group_begin, query_group_end and query_or instead of mistakenly 
  binding to names of core methods on Query
  
QuerySingleTableTests.cs  
QuerySingleTableComboTests.cs  
- remove redundant Assert.That(res != null);

CoreProviderShared.cs
- throw new Exception("Unsupported type " + valueType.Name) for string & bool in
	AddQueryLessThan
	AddQueryLessThanOrEqual 
	AddQueryGreaterThan
    AddQueryGreaterThanOrEqual
    

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#63 Standalone Objects and better Add syntax

StandaloneCoreProvider.cs
- created as stripped copy of MockCoreProvider

QueryProvider.cs
- use T instead of S in generics, to prevent compiler warning

Realm.cs
- Add added to adopt objects and create one-off write transactions
- ActiveWriteTransaction added
- CreateObject factored mostly out to AdoptNewObject two versions
- CreateTableFor made static


Transaction.cs
- changed _realm to internal so Realm can access

RealmObject.cs
- added inRealm and isStandalone boolean tests    
- constructor check if is active write trans and make standalone otherwise
- SetValue remove code checking if coreProvider null

QueryTestsBase.cs
- TestEntity now descend from RealmObject even when USING_REALM_CORE not defined


UnsafeNativeMethods.shared.cs
CoreProvider.shared.cs
- fix wrapper calls and rename for consistency
  query_begin_group => query_group_begin
  query_end_group => query_group_end

ViewController.cs
- IntegrationTest - change one addition to show the new Add syntax working


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#63 Standalone Objects - Minor fixes to transactions

Transaction.cs
- Dispose 
  - now do a Commit instead of Rollback
  - call ForgetActiveTransactionThisTread


Realm.cs
- ActiveWriteTransaction renamed ActiveTransaction
- RealmWritingThisThread renamed RealmWithActiveTransactionThisTread
- ForgetActiveTransactionThisTread added

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#63 new Add Syntax - demo file

HomePageTests.cs added

IntegrationTests.csproj
- added HomePageTests

Realm.cs
- constructor, cope with null ActiveProvider and path 

RealmObject.cs
- RealmObject InRealm and IsStandalone made properties

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#91 Link and LinkedList samples

ListTests.cs
- added

ICoreProvider.cs
 - added List<T> GetListValue<T>(IGroupHandle groupHandle, string tableName, string propertyName, long rowIndex);

MockCoreProvider.cs
- MockQuery make queryTable internal 
- added GetListValue, SetListValue

StandaloneCoreProvider.cs
- added GetListValue, SetListValue

RealmObject.cs
- added GetListValue, SetListValue forwarding to the provider

ModuleWeaver.cs
- Execute
  - added commented-out, with explanation, break to be able to debug weaving
  - factord out MethodNamed
  - factored out AddGetter and AddSetter
  - added detection of lists to call AddListGetter and AddListSetter
  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#91 Link and LinkedList - cleanup

RealmRelatedList temp class 
- renamed RealmList.cs discarding the old RealmList


MockCoreProvider.cs
StandaloneCoreProvider.cs
- fix minor repeated lookup in GetValue, SetValue, GetListValue, SetListValue

RealmObject.cs
- GetListValue, SetListValue now take and return RealmList<T>

ListTests.cs
- explicitly assign RealmList<Dog> rather than using simple braced init


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#82 splitting unsafe native methods

UnsafeNativeMethods.shared.cs refactored into
- NativeQuery.shared.cs
- NativeTable.shared.cs
- NativeGroup.shared.cs
- Plus a bunch of unimplemented and commented-out decls copied to
  - Unimplemented_NativeMethods_Arguable.txt
  - Unimplemented_NativeMethods_MixedFields.txt
  - Unimplemented_NativeMethods_TableView.txt
- BoolToIntPtr and IntPtrToBool copied back to CoreProvider.shared.cs as that's the only place left they are used

IN projects
  interop.Win32.csproj
  Interop.XamarinAndroid.csproj
  Interop.XamarinIOS.csproj
  Interop.XamarinMac.csproj
- Replace link to UnsafeNativeMethods.shared.cs with three links to  
  - NativeQuery.shared.cs
  - NativeTable.shared.cs
  - NativeGroup.shared.cs
  - NativeSharedGroup.shared.cs
- drop TableViewHandle.shared.cs for now

General change, UnsafeNativeMethods class changed to NativeQuery/Group/Table as required

RowHandle.cs
- IsAttached lambda removed the call to UnsafeNativeMethods.IntPtrToBool and just compare ==1
  allowed moving that function out of UnsafeNativeMethods and don't think simple, time-critical
  stuff should be calling across assemblies for trivia.
  
QueryHandle.shared.cs

Group.cs
- comment out calls to Group methods that previously just threw NotImplemented exceptions
  
Renames after refactoring, to simplify:
NativeGroup.group_ =?> NativeGroup.
NativeQuery.query_ => NativeQuery.
NativeTable.table_ => NativeTable.
NativeGroup.shared_group_ => NativeSharedGroup.


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Fix Integration Tests copying Wrappers DLL

Wrappers.vcxproj
- Linker / Input / Additional Dependencies
  changed libs to point to core Realm32d.lib and Realm64d.lib

IntegrationTests.Win32.csproj
- added afterbuild target to copy DLL and PDB to output area (doesn't show in VS - edit csproj)


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#118 Adding IntegrationTests.IOS

Interop.XamarionIOS/AssemblyInfo.cs
- added [assembly: InternalsVisibleTo("IntegrationTestsIOS")]

IntegrationTests.IOS
- created as "Unified API" iOS Unit tests project (which is a full-blown app!)

Copy and rename Win32 => IOS
- Win32IntegrationTests.csproj
- Win32IntegrationTests.cs 
- Win32PerformanceTests.cs

CoreProvider.shared.cs
- added using UIKit and Foundation in order to be able to build on IOS

AbstractPerformanceTests.cs
- changed _databasePath to protected so can set in the subclass Setup

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Merging IntegrationTests.IOS with the new shared project arch

IntegrationTests.Win32
- added reference to RealmNet.Win32

IntegrationTests.IOS
- renamed IntegrationTests.XamarinIOS
- removed reference to IntegrationTests project
- removed reference to RealmNet Project
- removed reference to InteropShared Project
- added reference to RealmNet.XamarinIOS project
- added direct links to files
  AbstractIntegrationTests.cs
  AbstractPerformanceTests.cs
  Person.cs
  TestHelpers.cs

Realm.sln
- added IntegrationTests.XamarinIOS  


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Fix renaming of IntegrationTests.IOS to IntegrationTests.XamarinIOS

IntegrationTests.XamarinIOS.csproj
- change assembly name from IntegrationTestsIOS to IntegrationTestsXamarinIOS

RealmNet.XamarinIOS/Properties/AssemblyInfo.cs
- change InternalsVisibleTo target to IntegrationTestsXamarinIOS

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#139 Fix project configs

Realm.sln - replaced by RealmNet.sln
- changed Configuration Manager
Debug + Release
AnyCPU
  - RealmNetWeaver

x86 and x64
- IntegrationTests.Win32  
- RealmNetWeaver
- RealmNet.Win32
- wrappers

iPhone and iPhoneSimulator
- IntegrationTests.XamarinIOS
- Playground.XamarinIOS
- RealmNet.XamarinIOS
- RealmNetWeaver

ARM
- Playground.XamarinAndroid
- RealmNet.XamarinAndroid
- RealmNetWeaver

RealmNet.XamarinIOS.csproj
- manually edited file to replace AnyCPU platforms with iPhone and iPhoneSimulator
  copying settings from IntegrationTests.XamarionIOS.csproj  
  - changed OutputPath from bin\Debug or bin\Release to bin\$(Platform)\$(Configuration)
- iPhoneSimulator configs
  - added <MtouchArch>i386
  - added <MtouchLink>None
  - added MtouchDebug for debug
  
Cleaning up old solutions - delete all but Realm.sln and RealmWin.sln
- RealmFoundation.sln
- RealmFoundation.sln
- RealmPureNetLINQ.sln
- RealmXamarinAndroid.sln
- RealmXamarinIOS.sln
- RealmXamarinMac.sln

RealmNet.win32.csproj
- added reference to wrappers.vcxproj
- changed default platform from AnyCPU to x86
- removed AnyCPU platforms

IntegrationTests.Win32.csproj
- changed default platform from AnyCPU to x86
- removed AnyCPU platforms

wrappers.vcxproj
- Debug|Win32 and Debug|x64 platform toolset changed from v140_xp to v140

RealmNet.XamarinAndroid.csproj
Playground.XamarinAndroid.csproj
- replace AnyCPU with ARM

RealmNet.XamarinIOS.csproj
- changed default AnyCPU platform to iPhoneSimulator

RealmNet.XamarinMac.csproj
- replace AnyCPU with x64Mac


Playground.XamarinAndroid/MainActivity.cs 
IntegrationTests.XamarinIOS/IOSIntegrationTests.cs
IntegrationTests.XamarinIOS/IOSPerformanceTests.cs
  - removed using RealmNet.Interop 

IntegrationTests.XamarinIOS/IOSPerformanceTests.cs
  
IntegrationTests.Shared/AbstractIntegrationTests.cs  
IntegrationTests.Shared/AbstractPerformanceTests.cs  
- change protection on _databasePath so could update in subclass (NUnitLite issue)  

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#148 Add Android Integration Tests and Refactor Testing

IntegrationTests.XamarinAndroid.csproj
- created as "Android Unit test" project
- changed Target Framework from 5.1 down to 4.4
- added reference to RealmNet.XamarinAndroid
- added reference to IntegrationTests.Shared

Interop.XamarionAndroid/AssemblyInfo.cs
- added [assembly: InternalsVisibleTo("IntegrationTests.XamarinAndroid")]

In IntegrationTests.shared project
- AbstractIntegrationTests.cs 
  - renamed IntegrationTests.cs 
  - made non-abstract
  - BaseSetup renaned Setup
  - removed empty virtual Setup
  - removed GetTempDatabasePath
  - set CoreProvider
  
- AbstractPerformanceTests 
  - renamed PerformanceTests.cs
  - made non-abstract
  - BaseSetup renaned Setup
  - removed empty virtual Setup
  - removed GetTempDatabasePath
  - set CoreProvider
  - moved  RawPerformanceTest over from Win32PerformanceTest
 
- Win32PerformanceTest - gutted so just there to run tests
- Win32IntegrationTest - gutted


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#104 splitting wrappers.cpp

NativeTable.cs
- split some methods off to new NativeRow.cs

RowHandle.cs
- use new NativeRow instead

WindowsDLLWrapperDecls.h
- added as requested in PR to have central


exception_catcher.h/cpp
- added

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#155 EXCEPTION HANDLING IN WRAPPERS - CSHARP SIDE AND COMMS WITHOUT THROWING

wrappers.cpp
- added ManagedExceptionThrowerT, ManagedExceptionThrower and set_exception_thrower

RealmNet.Shared.csproj
- added copies of Java exceptions
	RealmEncryptionNotSupportedException
	RealmException
	RealmIOException
	RealmMigrationNeededException
- added more exceptions to support the codes in RealmExceptionCodes.cs
	RealmRowInvalidException
	RealmRuntimeErrorException
	RealmFatalErrorException
	RealmOutOfMemoryException
	RealmUnsupportedOperationException
	RealmTableInvalidException
	RealmIndexOutOfBoundsException	
	RealmFileAccessErrorException
	RealmFileNotFoundException
	RealmIOFailedException
	RealmIllegalArgumentException
	RealmNoSuchMethodException
	RealmNoSuchFieldException
	RealmClassNotFoundException

RealmExceptionCodes.cs 
- added enum to RealmNet.shared

CoreProvider.cs
- added CoreProvider ctor to set common inc calling SetupExceptionThrower
- added static field sDoneCommonSetup


Added "unsafe" compilation option to enable the callback
- RealmNet.XamarionIOS
- RealmNet.XamarionAndroid


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#155 Intercepting exceptions in wrappers - Reconcile exceptions with spreadsheet

ExceptionsToManaged.cpp/.h 
- added
- ThrowManaged overloaded function added

Wrappers.cpp
- moved exception throwing code to ExceptionsToManaged.cpp
- all catch statements replaced by CATCH_STD macro

Removed exception classes added to support codes as we are NOT forwarding them
	RealmClassNotFoundException
	RealmEncryptionNotSupportedException
	RealmFatalErrorException
	RealmIllegalArgumentException
	RealmIndexOutOfBoundsException	
	RealmIOException
	RealmIOFailedException
	RealmMigrationNeededException
	RealmNoSuchFieldException
	RealmNoSuchMethodException
	RealmRowInvalidException
	RealmTableInvalidException
	RealmUnsupportedOperationException


Added new subclasses of RealmFileAccessException
	RealmFileExistsException
	RealmPermissionDeniedException
	RealmDecryptionFailedException
	RealmInvalidDatabaseException


RealmExceptionCodes.cs
ExceptionsToManaged.h
- rewrote codes to match new exceptions hierarchy from spreadsheet


ExceptionsToManaged.cpp
- change "if" checks to asserts as per PR review
- realm::ThrowManaged don't take exception parameter any more

NativeCommon.cs
- ExceptionThrower updated to new codes and exception types


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#155 Intercepting exceptions in wrappers - responses to PR
WindowsDLLWrapperDecls.h
- renamed realm_export_decls.h
- REALM_CORE_WRAPPER_API renamed REALM_EXPORT

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Fixed integration tests to actually test if stored and fix IOS test

IntegrationTests.cs
- SetAndGetPropertyTest get object back from the store


IntegrationTests.XamarinIOS.csproj
- added packages.config
- added FodyWeavers.xml


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#67 Adding float and double support

IntegrationTests.shared/Person.cs
- added Score, Latitude and Longitude

IntegrationTests.cs
- SimpleTest - added setters for Score, Latitude and Longitude
- SetAndGetPropertyTest added Score and Latitude tests


RealmObject.cs
- SetValue<T>, GetValue<T> - added cases for single and double

NativeTable.cs
- replaced dummy set/get_float/double with DLL Import calls

table_cs.cpp
- added table_set_float/double table_get_float/double


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#68 Adding float and double search support

IntegrationTests.cs
- SimpleTest refactored data creation out to MakeThreePeople
- SearchComparingFloat added
- SearchComparingDouble added

query_cs.cpp - added wrapper functions
	query_float_equal
	query_float_not_equal
	query_float_less
	query_float_less_equal
	query_float_greater
	query_float_greater_equal
	query_double_equal
	query_double_not_equal
	query_double_less
	query_double_less_equal
	query_double_greater
	query_double_greater_equal


NativeQuery.cs 
- removed unused int_between
- added DLLImports for 
	"query_float_equal"
	"query_float_not_equal"
	"query_float_less"
	"query_float_less_equal"
	"query_float_greater"
	"query_float_greater_equal"
	"query_double_equal"
	"query_double_not_equal"
	"query_double_less"
	"query_double_less_equal"
	"query_double_greater"
	"query_double_greater_equal"

RealmQueryVisitor.cs - add float and double cases to
	AddQueryEqual
	AddQueryNotEqual
	AddQueryLessThan
	AddQueryLessThanOrEqual
	AddQueryGreaterThan
	AddQueryGreaterThanOrEqual


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Making wrappers build for IOS with debug to aid debugging from XCode

Makefile
- add multiple targets including iosdbg

RealmNet.XamarinIOS.csproj
- change the path to libwrappers to include the $(Configuration)

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#198 Fix Exception Throwing

error_handling.cpp
- realm::convert_exception cleaned up to directly use e.what() instead of lambda
  which was originally composing message with file and line but had been
  cut back to just call what() but was on base class so not hitting override.

IntegrationTests.cs
- added  GetInstanceShouldThrowWithBadPath

  		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#110 implementing relationships

MarshalHelpers.cs
- RealmColType added cases for RealmObject and RealmList	

RelationshipTests.cs
- added (based on old ListTests.cs in RealmNet)

Realm.cs
- Realm.GenerateObjectSchema 
  - exclude lists from being nullable
  - set the objectType for links
- CreateRowHandle made internal so can use when creating linked objects

ModuleWeaver.cs
- added genericGet/SetListValueReference
- added genericGet/SetObjectValueReference
- Execute
  - use new method references for RealmList and RealmObject properties
  - (side fix) change check to "IgnoredAttribute" from "IgnoreAttribute"
  - check for strings before related types (optimisation)
  - add test weaving in RealmObjects
- IsRealmObject added 

RealmObject.cs  
- Set/GetObjectValue added
- set/GetListValue added (stubbed)

   
table_cs.cpp
Added methods:
- table_set_link
- table_get_link  
- table_clear_link

NativeTable.cs
added decls for 
- set_link
- clear_link
- get_link

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#110 implementing relationships - finishing lists 
(toMany relationships basics and Add)

RealmList.cs
- made ctor internal instead of public
- uncomment field _parent
- added field _listHandle
- ctor renamed CompleteInit for 2-stage init
- Count method stub implemented
- Add method stub implemented

table_cs.cpp
Added methods:
- table_get_linklist (now returning a SharedLinkViewRef)

linklist_cs.cpp
- added with methods
  linklist_add
  linklist_size
  linklist_destroy

wrappers.xcodeproj
- added linklist_cs.cpp

LinkListHandle
- added with method Unbind

NativeTable.cs
added decls for
- get_linklist

NativeLinkList.cs
- added with mappings to
  linklist_add
  linklist_size
  linklist_destroy

RealmNet.shared.csproj
- added NativeLinkList.cs

RealmObject.cs
- SetListValue now just throws
- GetListValue


TableHandle.cs
- added RootedLinkListHandle
- added TableLinkList

RowHandle.cs
- made RowHandle internal because users should not be using

wrappers/shared_linklist.hpp
- added to declare the SharedLinkViewRef

RelationsihpTests.cs
- TimAcquiresASecondDog added to test Add


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#110 implementing relationships - finishing lists (toMany relationships)

RelationsihpTests.cs
Added tests
  TimLosesHisDogsByOrder
  TimAddsADogLater 
  TimAddsADogByInsert
  TimLosesHisDogsInOneClear
  TimHasTwoIterableDogs

RealmList.cs
- const ITEM_NOT_FOUND added
- IsFixedSize added
- implemented previously stubbed methods
  Contains
  Clear
  IndexOf
  RemoveAt
  Remove
  GetEnumerator
- RealmListEnumerator<T> filled out all methods  

NativeLinkList.cs
added declarations for
  linklist_erase 
  linklist_get 
  linklist_find
  linklist_insert
  linklist_clear

wrappers/linklist_cs.cpp
added
  linklist_erase 
  linklist_get 
  linklist_find
  linklist_insert
  linklist_clear

RealmObject.cs
- refactroed out MakeObject from GetObjectValue


shared_realm.hpp
- added IndexOutOfRangeException

wrappers/error_handling.cpp
- added case for IndexOutOfRangeException

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Migrating to Core 0.95.0

Merged current ObjectStore subtree

Makefile
- bumped Core version number to 0.95.0
- corrected names of debug libwrappers.a 

wrappers/object-store/transact_log_handler.*pp
- removed our old copies so we use those in object-store/impl

wrappers/realm-csharp.cpp
- replaced include of realm_delegate.hpp with object-store/binding_context.hpp
- CSharpRealmDelegate parent changed from RealmDelegate to BindingContext

wrappers.xcodeproj
- replaced librealm-ios with librealm-ios-no-bitcode
- set Enable Bitcode to No (was Yes)

Realm	.sln
- replaced old RealmNetWeaver.csproj with RealmNetWeaver.Fody.csproj

Added definition of REALM_HAVE_CONFIG in
- Wrappers/Application.mk
- Wrappers/Android.mk
- Wrappers.xcodeproj

IntegrationTests.XamarinAndroid.csproj
- add wrappers folder so it has linked wrappers+core
- added Fody package
- added RealmNetWeaver into generated FodyWeavers.xml

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Ensuring Relationships work on Win32

RealmNet.Win32.csproj
- changed to target .Net 4.5 (see issue #222)

Win32RelationshipTests.cs
- added so could do relationship testing under current release

RelationshipTests.cs
- corrected namespace to IntegrationTests.Shared


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Adding unit tests to finalise the IList addition

RelationshipTests.cs
- TestListRelationship 
  - renamed TestAttachingStandaloneTwoLevelRelationship
  - fixed asserts to be compatible with NUnitLite, for IOS testing
- TestAttachingStandaloneThreeLevelRelationship added
- TestCircularRelationshipsFromStandaloneTwoStage added

ModuleWeaver.cs
- reordered the test for RealmList so shortcircuit kicks out other RealmNet classes quicker
- rewrote test for IList so is faster and more precise


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#232 Make things internal

change public to internal
	ExpressionVisitor
	Handled
	InteropConfig (3 platform-specific copies)
	QueryHandle
	QueryProvider
	RealmHandle
	RealmQuery
	RealmQueryProvider
	RealmQueryVisitor
	TableHandle
	WovenAttribute
	WovenPropertyAttribute


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Better error for DateTime

ModuleWeaver.cs
- Execute - added test for System.DateTime with separate error message

Added reference to the RealmNetWeaver.Fody.csproj to trigger it rebulding:
- RealmNet.Win32.cspsproj
- RealmNet.XamarinAndroid.csproj
- RealmNet.XamarinIOS.csproj
- RealmNet.XamarinMAC.csproj


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Fixing projects to be non IOS Binding

RealmNet.XamarinIOS.csproj
- changed  <ProjectTypeGuids> from
   {8FFB629D-F513-41CE-95D2-7ECE97B6EEEC};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}
  to
    {FEACFBD2-3405-455C-9665-78FE426C6842};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}
- removed   <Import Project="$(MSBuildExtensionsPath)\Xamarin\iOS\Xamarin.iOS.ObjCBinding.CSharp.targets" />


Properties/AssemblyInfo.cs
- removed using Foundation


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Big rename

RealmNet.sln renamed Realm.sln

General refactor rename of namespace RealmNet to Realms

All projects with RealmNet in them renamed Realmblah including Fody

README.md
- changed repo name back from realm-.net to realm-dotnet



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#238 Removing objects should throw RealmOutsideTransactionExcepton

IntegrationTests.cs
- RemoveTest renamed RemoveSucceedsTest
- RemoveOutsideTransactionShouldFail added

Realm.cs
- Remove change to throw RealmOutsideTransactionException

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#236 Put icons on demo apps

Playground.XamarinIOS
- Launchscreen.xib replaced "Kristian" with "Realm" in copyright
- AppIcons.appiconset - added two icons for 2x and 3x iPhone size


IntegrationTests.XamarinIOS
- AppIcons.appiconset - added two icons for 2x and 3x iPhone size
- info.plist changed to use Asset Catalog for icon

IntegrationTests.XamarinAndroid
- replaced all the icon.png files with matching new icons of same name

Playground.XamarinAndroid
- added set of icons copied from IntegrationTests.XamarinAndroid
- replaced single icon.png in project with all new icons in different sizes
- manually set the added icons as Android Asset (IDE bug fails to set on adding)

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#223 Better Default Database Path

Realm.cs
- DefaultDatabaseName added
- GetInstance
  - use DefaultDatabaseName
  - use InteropConfig.GetDefaultDatabasePath for path to combine with filename


*/InteropConfig.cs
- changed InteropConfig from internal to public
- GetDefaultDatabasePath 
  - only return document path on all platforms, no filename inclusion
  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#100 Cope with Simple Filename

IntegrationTests.cs
- GetInstanceTest - use default filename
- GetInstanceWithJustFilenameTest added  

Realm.cs
- GetInstance
  - check if full path and combine partial with InteropConfig.GetDefaultDatabasePath 


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#258 Closing Files

IntegrationTests
- InstanceIsCLosedByDispose added

Realm.cs
- IsClosed added to report handle status
- Close added
- Dispose filled out to invoke Close

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#286 Fix Makefile
Makefile
- revert changes that built using the core-debug target as that doesn't work
  this means the iosdbg works but is not using a debug version of core
  
RelationshipTests.cs
- delete a couple of commented out lines in sample that no longer apply

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#282 Minor cleanups whilst improving API docs
GroupOpenMode.cs
- removed unused enum

Realm.Shared.csproj
- removed GroupOpenMode.cs

InteropConfig.cs (all)
- made class internal (again)
- removed GetDefaultDatabasePath as it returns same thing in all.

Realm.cs
- GetInstance just use the standard Xamarin call to get SpecialFolder instead of GetDefaultDatabasePath

TransactionState.cs
- removed

RealmList.GetEnumerator
- remove cast

Realm.IsClosed
- changed to property

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#291 Minor doc edits and rename Attach to Manage

Realm.Attach
- renamed Realm.Manage

IntegrationTests.cs
RelationshipTests.cs
StandaloneObjectTests.cs
- renamed all tests with Attach to Manage

RealmList.cs
- AttachObjectIfNeeded renamed ManageObjectIfNeeded

RealmObjectAlreadyOwnedByRealmException renamed RealmObjectAlreadyManagedByRealmException

RealmObjectOwnedByAnotherRealmException renamed RealmObjectManagedByAnotherRealmException


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#328 Update to Core 0.95.6
Merged in ObjectStore commit as at 324818f

Makefile
- bump CORE_APPLE_VER and CORE_ANDROID_VER from 0.95.1 to 0.95.6

wrappers/src/wrapper_exceptions.hpp
- added to move exceptions to which are part of wrappers, not ObjectStore

wrappers/src/object-store/shared_realm.hpp
- moved IndexOutOfRangeException to wrapper_exceptions.hpp

wrappers/src/linklist_cs.cpp
- replace #include object-store/shared_realm.hp with wrapper_exceptions.hpp

wrappers/src/object-store/shared_realm.cpp
- get_shared_realm fix use of member m_config replaced with realm->m_config

wrappers/src/object-store/impl/transact_log_handler.cpp
- added set_int_unique and set_string_unique just as copies of set_int and set_string

IndexOutOfRangeException
- makeMessage renamed make_message to conform to coding standards

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#313 Adding Configurations

RealmConfiguration.cs
- added class

IntegrationTests.cs
- added RealmConfigurationTests

Realm.cs
- _config field added to Realm
- moved _DefaultDatabaseName to RealmConfiguration.DEFAULT_REALM_NAME
- GetInstance 
  - get RealmConfiguration.DefaultConfiguration if not specified
  - get path for database from config
- Realm ctor take an RealmConfiguration param

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#314 Delete Files for Configurations

Realm.cs
- added static DeleteFiles

IntegrationTests.cs
- renamed RealmIntegrationTests to RealmInstanceTests to accurately reflect role
- RealmInstanceTests
  - DeleteRealmFailsIfOpenSameThread added but commented out
  - DeleteRealmWorksIfClosed added
- RealmConfigurationTests.PathIsCanonicalised added

RealmConfiguration.cs
- ConfigWithPath now uses GetFullPath to get a canonical version
  
  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#313 Adding Configurations - refactor from code review

RealmConfiguration.cs
- DEFAULT_REALM_NAME renamed DefaultRealmName


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#320 adding Realm Equality

IntegrationTests.cs
- RealmInstanceTests
  - added GetCachedInstancesSameThread 
  - added GetUniqueInstancesDifferentThreads
  - DeleteRealmWorksIfClosed added test to see if file exists
  - added InstancesHaveDifferentHashes
- RealmConfigurationTests
  - added ConfigurationsAreSame and ConfigurationsAredDifferent
  - added ConfigurationsHaveDifferentHashes
  
Realm.cs
- added Equals(object), Equals(Realm), GetHashCode and IsSameInstance 
    
RealmConfiguration.cs
- added Equals(object), Equals(Realm) and GetHashCode
  
NativeSharedRealm.cs
- added is_same_instance

shared_realm_cs.cpp
- shared_realm_is_same_instance added

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Refactoring Tests

IntegrationTests.cs
- refactored out RealmInstanceTests as InstanceTests.cs
- refactored out RealmConfigurationTests as ConfigurationTests.cs
- renamed RealmObjectIntegrationTests ObjectIntegrationTests
- renamed file ObjectIntegrationTests.cs

Win32IntegrationTests.cs
- renamed Win32ObjectIntegrationTests.cs
- refactored Win32RealmIntegrationTests as Win32RealmIntegrationTests.cs

Win32ConfigurationTests.cs added

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#297 Adding Count to All

ObjectIntegrationTests.cs
- CanSimplyCountAll added
- CreateObjectTest use Count directly instead of using ToList

NativeTable.cs
- add table_count_all as count_all

wrappers/table_cs.cpp
- add table_count_all

Realm.cs
- All pass true into RealmQuery ctor

RealmQuery.cs
- _AllObjects flag added
- Expression - added protected set to property
- _provider changed readonly to internal so can lazily set in subclass RealmAll
- Count added 
- ctor(Realm) added bool param to set _allRecords

RealmQueryProvider
- _realm changed from private to internal so can pull back out in RealmQuery


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#300 Better Migration Message

IntegrationTests.cs
- RealmMigrationTests added

RealmConfiguration.cs
- NotVersioned added
- SchemaVersion property added
- PathToRealm added

Realm.cs
- in Realm ctor, update config SchemaVersion
- Realm.GetInstance 
  - pass in SchemaVersion to NativeSharedRealm.Open
  - add wrappers around open 
- _config field made into public readable property Config

NativeSharedRealm.cs
- get_schema_version added
- open added schemaVersion param

shared_realm_cs.cpp
- shared_realm_get_schema_version added
- shared_realm_open added schemaVersion param and assign to the temp Config created

wrappers/error_handling.cpp
- realm::convert_exception 
  - added case for FormatUpgradeRequired
  - added case for SchemaValidationException treating the same
  
realm_error_type.hpp
- RealmFormatUpgradeRequired added
  
RealmExceptionCodes.cs
- RealmFormatUpgradeRequired added

NativeCommon.cs
- ExceptionThrower - added case for RealmFormatUpgradeRequired

RealmFormatUpgradeRequiredException.cs
- added
- renamed RealmMigrationNeededException
  
  
ForMigrationsToCopyAndMigrate.realm
- added file to copy  

TestHelpers.cs
- CopyBundledDatabaseToDocuments helper added

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#298 Adding Count, Single, First to standard LINQ results

SimpleLINQtests.cs
- added
- AnyFails and AnySucceeds tests added
- CreateList test added

PeopleTestsBase.cs
- added 

Win32SimpleLINQtests.cs added

ObjectIntegrationTests.cs
- SearchComparingDouble, SearchComparingFloat all moved to SimpleLINQtests
- refactored _realm and _databasePath, plus methods Setup, TearDown and
  MakeThreePeople to PeopleTestsBase
- made subclass of PeopleTestsBase

RealmQueryVisitor.cs
- VisitMethodCall
  - refactored to handle Count and Any
- added ctor to directly pass in Realm

RealmQueryProvider.cs
- added MakeVisitor

RealmQuery.cs
- IEnumerable.GetEnumerator() rewrote to just invoke GetEnumerator<T>
- GetEnumerator<T>() return RealmQueryEnumerator

PeopleTestsBase.cs
- TearDown now delete the temp realm

RealmQueryEnumerator.cs
- added


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#298 LINQ Refactoring - combine QueryProvider classes

RealmQueryProvider.cs
- changed base from QueryProvider to IQueryProvider

RealmQuery.cs
- _provider type changed to RealmQueryProvider
- ctor take RealmQueryProvider param

QueryProvider.cs
- removed
  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#298 Adding Count and Any to standard LINQ results

SimpleLINQtests.cs
- CountFoundItems added

RealmQueryVisitor.cs
- VisitMethodCall
  - implemented Count and Any as returning a ConstantExpression

RealmQueryProvider.cs
- invoke a RealmQueryVisitor.Visit and 
  extract a ConstantExpression from Visit's result, to get an unboxed return value
  
NativeQuery.Count
- changed stub to DLLImport call with no limiting params
  
wrappers/query_cs.cpp
- query_count added

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#351 Add LINQ Single and First

SimpleLINQtests.cs
- SingleFailsToFind, SingleFindsTooMany, SingleWorks added  
- FirstFailsToFind and FirstWorks added

RealmQueryProvider
- MakeVisitor added Type param RealmQueryVisitor

RealmQueryVisitor.cs
- added _retType
- ctor now takes Type param
- FindNextRowHandle 
  - renamed FindNextObject
  - now includes making object, returns null when fails
- VisitMethodCall - handle First and Single
- MakeObject added

RealmQueryEnumerator.cs
- MoveNext simplified, moved object creation to RealmQueryVisitor

NativeQuery.cs
- find renamed 2nd param from lastMatch to beginAtRow so name is same as core


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#368 Require IList

RealmList.cs
- changed from public to internal

Realm.cs
- reordered evaluations to check IList ahead of RealmList

RealmObject
- GetListValue had to become internal, was protected, to match RealmList access level


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
BACKING OUT IList

RealmList.cs
- changed back to public from internal

Realm.cs
- CreateObject - don't call _TurnListsIntoRealmLists
- GenerateObjectSchema 
  - don't allow IList

RealmObject
- GetListValue set back to protected access
- _TurnListsIntoRealmLists removed mainly because unusable in IOS
- MakeObject not invoke _TurnListsIntoRealmLists
-_CopyDataFromBackingFieldsToRow removed code to copy from IList


ModuleWeaver.cs
- Execute 
  - look for RealmList instead of IList
  - generate error if has setter as well (new behaviour, was only console message)
  - removed all trace of handling IList for now
- genericGetListValueReference member restored


Use RealmList instead of IList in sample code:
- WeaverTests/AssemblyToProcess/Person.cs
- IntegrationTests.Shared/Person.cs
- RelationshipTests.cs


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
INVESTIGATING/FIXING WINDOWS CRASHES

eror_handling.cpp
- fake_a_native_exception added

NativeCommon.cs
- fake_a_native_exception added

InstanceTests.cs
- FakeExceptionThrowTest added
- FakeExceptionThrowLoopingTest added


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#335 ADDING PCL LIBRARY IN RELEASE V0.72.0

Realm.PCL created

ThreeLayerRealmXF solution created

ModuleWeaver.cs
- comment out (unused) listType var as the getting of type   
  System.Collections.Generic.List`1 returned null
  

wrappers/Makefile
- bumped versions from 0.95.6 TO 0.96.0

Realm.targets
- set version number in paths as 0.72.0

Realm.nuspec
- added the PCL build of the DLL

RealmWeaverFody.nuspec
- set version number as 0.72.0


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#394 BUILD FOR ARM64, x86_64  with some Android cleanup

wrappers/Makefile
- incremented NDK command min API from 9 to 10 to match Xamarin

Realm.targets
- set version number in paths as 0.72.1
- added arm64-v8a and x86_64 lib build instructions and dependencies

Realm.nuspec
- added arm64-v8a and x86_64 <file> elements
  (skipping mips for now until clarify if shipping)

wrappers/jni/Application.mk
- added x86_64 arm64-v8a to APP_ABI
  (so they are built into the libs dir)

IntegrationTests.XamarinAndroid
- Project Options - Build - General
  set Target Framework to API 22
- Project Options - Build - Android Application
  set Minimum Android Version to 2.3 (API 10)

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Renaming RealmQuery

RealmQuery.cs
- rename RealmQuery to RealmResults

RealmQueryPCL.cs
- rename RealmQuery to RealmResults

RealmQueryEnumerator.cs
- rename RealmQueryEnumerator to RealmResultsEnumerator

RealmQueryVisitor.cs
- rename RealmQueryVisitor to RealmResultsVisitor

RealmQueryProvider.cs
- rename RealmQueryProvider to RealmResultsProvider


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#404 Add way to specify encryption key

RealmConfiguration.cs
- add EncryptionKey property
- Equals(RealmConfiguration rhs) enhanced to check EncryptionKey


wrappers/shared_realm_cs.cpp
shared_realm_open
- change signature to take just byte array of fixed length, dropping the 
  encryption_key_len param

Realm.GetInstance
- pass EncryptionKey to NaiveSharedRealm.open

ConfigurationTests.cs
- EncryptionKeyMustBe64Bytes added
- ValidEncryptionKeyAcceoted added
- UnableToOpenWithNoKey added
- UnableToOpenWithKeyIfNotEncrypted added
- UnableToOpenWithDifferentKey added
- AbleToReopenEncryptedWithSameKey added


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#393 Update to Core 0.96.1 breaking changes

Makefile
- bumped core version to 0.96.2

Merged Object Store master up to 2016-02-25
"merge pull request #47 from realm/tg/core-0.96.2"
SHA 565e39a287bc625fd27e724c28e999e891ca8df6


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#299 Fix crash on related RealmList using ToList 

RelationshipTests.cs
- TimHasTwoIterableDogsListed added
- TimsIterableDogsThrowExceptions added

RealmList.cs
- CopyTo implemented stubbed method
 
 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#401 Fix Nuget Android relative lib paths

realm.targets
- instead of ../packages use $(SolutionDir)packages
  because need it to be solution-relative in MSBuild terms (not at NuGet time)


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#362 Simple Bool queries

SimpleLINQtests.cs
- CountFoundItems change isInteresting == true to just test isInteresting

RealmResultsVisitor.cs
- VisitMemberAccess add check for Booleans by themselfs and treat as == true
 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#77 Boolean ! operator

SimpleLINQtests.cs
- CountWithNot added

RealmResultsVisitor.cs
- VisitUnary add call to query_not before recursing into nested expression

NativeQuery.cs
- query_not interface added

query_cs.cpp
- query_not added

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#369 Cleanup ToList in tests
#361 Add LINQ Count(Expression)

remove ToList and use straight All<...>()>Count()
- ObjectIntegrationTests.cs
  - SimpleTest 
  - CreateObjectTest
  
remove ToList and use All<...>.Where(...).Count()
SimpelLINQtests.cs
- CreateList

replace  All<...>.Where(...).Count() with All<...>.Count(...)
SimpleLINQtests.cs
- CountFoundItems
- CountWithNot

replace realm.All<...>().Where( ...).ToList().First() with .All<...>().First(...)
- RelationshipTests.cs
  - TimHasATopDog
  - TimHasTwoIterableDogs
  - TimHasTwoIterableDogsListed
  - TimsIterableDogsThrowExceptions
  - TimRetiredHisTopDog
  - TimAddsADogLater
  - DaniHasNoTopDog

replace realm.All<...>().Where( ...).ToList().First() with .All<...>().Single(...)
- RelationshipTests.cs
  - TimAddsADogByInsert  
  - TimLosesHisDogsByOrder
  - TimLosesHisDogsInOneClear
  - TimLosesBilbo
  - TestExceptionsFromTimsDogsOutOfRange

replace realm.All<...>().Where( ...).ToList()[0] with .All<...>().First(...)
- ObjectIntegrationTests.cs
  - ReadAndWriteEqualityTest

replace realm.All<...>().Where( ...).ToList().First() with .All<...>().Where(...).First()
- RelationshipTests.cs
  - DaniHasNoTopDog
  - TestExceptionsFromEmptyListOutOfRange
  
replace realm.All<...>().Where( ...).ToList().First() with .All<...>().Where(...).First()
- RelationshipTests.cs
  - DaniHasNoDogs  
  - TestExceptionsFromIteratingEmptyList


replace realm.All<...>().Where( ...).ToList().Count with .All<...>().Count(...)
- TestManagingStandaloneThreeLevelRelationship
- TestCircularRelationshipsFromStandaloneTwoStage


RealmResultsVisitor.cs
- RecurseToWhereOrRunLambda added
- VisitMethodCall
  - handle Count, Single and First with no lambda argument, using RecurseToWhereOrRunLambda
  

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#183 BindingPerformanceTest crashes

RealmHandle.cs
- removed ALL the debug code as testing in HandleDebugging showed it was a source
  of crashes on disposal (as well as other crashes in core)
  
PerformanceTests.cs
- remove commented-out tests
- all tests do commits
- BindingCreateObjectPeformanceTest and BindingPerformanceTest
  - add inner loops with N operations per transaction, parameterised

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#352 Using Results in LINQ

ObjectIntegrationTests.cs
ObjectIntegrationTests.IteratePeople
- added

Realm.cs
- added static ObjectSchemaCache
- Realm static ctor - init ObjectSchemaCache
- GenerateObjectSchema
  - use and update ObjectSchemaCache
- MakeResultsForTable added
- MakeResultsForQuery added
- CreateResultsHandle added
- MakeObjectForRow added (moved from RealmResultsVisitor.MakeObject)

NativeQuery.cs
- renamed "find" to findDirect to trigger compiler errors, discourage use and make it clear being used for (rare) specifics

RealmResults.cs
- FindNextObject 
  - param renamed nextOrdinalIndex because not based on row indexes any more
- VisitMethodCall 
  - use renamed findDirect for "Any" and "Single"
- GetEnumerator  
  - use _resultsHandle (cached)
  - update _resultsHandle for All using MakeResultsForTable
  - update _resultsHandle using MakeResultsForQuery  

RealmResultsEnumerator.cs
- _rowIndex renamed _ordinalIndex because it's not just rows
- _enumerating removed
- ResultsHandle _enumeratingResults added

RealmResultsVisitor.cs
- FindNextObject removed (was used only by RealmResultsEnumerator)
- MakeObject moved to Realm.MakeObjectForRow  
- _coreQueryHandle made internal so it can be grabbed 
- made methods static that just build the query parameter
  
ResultsHandle.cs
- added

NativeResults.cs
- added

results_cs.cpp
- added

wrappers/jni/Android.mk
- added entry LOCAL_SRC_FILES += src/results_cs.cpp

Wrappers.xcodeproj
- added results_cs.cpp

Realm.Shared.csproj
- added NativeResults.cs, ResultsHandle.cs

SimpleLINQTests.cs
Changed tests to also include using Where(...).Blah() not just Blah(....)
- SingleFindsTooMany
- SingleFailsToFind
- SingleWorks
- FirstFailsToFind
- FirstWorks

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
private#47 Fix Tests to use default.realm and cleanup

PerformanceTests.cs
PeopleTestsBase.cs
DateTimeTests.cs
RelationshipTests.cs
AccessTests.cs
- _databasePath removed
- Setup 
  - use standard config instead of GetTempFilename
  - delete prior GetInstance


StandaloneObjectTests.cs
- Setup just delete standard Realm
- AddToRealm use default realm not temp


ObjectIntegrationTests.cs
- ManageAnObjectFromAnotherRealmShouldFail
  - use fixed realm name for secondary realm
  - delete secondary realm


InstanceTests.cs
- added const specialRealmName 
- general search and replace "EnterTheMagic.realm" with specialRealmName
- use default configuration in most tests

- Setup
  - delete standard realm
  - delete   
  

ConfigurationTests.cs
- use unique strings for paths all tests

wrappers/debug.cpp
- added check to ensure doesn't invoke invalid callback


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#346 Limit Classes by Realm

RealmConfiguration.cs
- added ObjectClasses member (named to match Cocoa)
    
    
InstanceTests.cs
- RealmWithOneClassThrowsIfUseOther added
- RealmWithOneClassWritesDesiredClass added
- RealmObjectClassesOnlyAllowRealmObjects added

Realm.cs
- CreateObject(Type)
  - check for ObjectClasses on the config and throw an exception if class doesn't match.
- GetInstance 
  - check for ObjectClasses on the config and limit schema init to that list 
  - check that objectClasses are all RealmObject types


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Private #50 - Fix Failure to Close

shared_realm_cs.cpp
- shared_realm_destroy - close the Realm as well as deleting shared handle


InstanceTests.cs
- GetUniqueInstancesDifferentThreads made explicit until fixed
  to separate effect of its failure from running other tests.



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#444 Fix Analytics to match Cocoa

RealmWeaver/Analytics.cs
- TargetOS changed case and content to match 
- Analytics.JsonTemplate
  - Binding changed to "dotnet"
  - "Langauge" : "c#" added
- ComputeHostOSNameAndVersion 
  - report standard lowercase ids
  - report windows instead of Generic .net
- TargetOS      
  - report standard lowercase ids


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#353 Specifying Sort

SortingTests.cs 
- added

SortOrderHandle.cs
- added
  
RealmResults.cs
- RealmResults changed from IQueryable<T> to IOrderedQueryable<T>
- CreateResultsHandle get sort handle and pass to MakeResultsForQuery

Realm.cs
- MakeResultsForQuery add optionalSortOrder param
- MakeSortOrderForTable added
- CreateSortOrderHandle added

RealmResultsVisitor.cs
- VisitMethodCall - added:
  - OrderBy   
  - OrderByDescending
  - ThenBy
  - ThenByDescending  
 
NativeSortOrder.cs
- added

NativeResults.cs
- added create_for_query_sorted decl
- added create_for_table_sorted decl
  
results_cs.cpp
- SortOrderWrapper added
- added create_for_query_sorted 
- added results_create_for_table_sorted 
- added sortorder_create_for_table, sortorder_destroy & sortorder_add_clause

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#360 First with Sort

SortingTests.cs 
- added FirstIsDifferentSorted

RealmResultsVisitor.cs
- VisitMethodCall - add logic to get First from Results if sorted

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Private #49 Fix Android Debug Libs + #46 Cleanup Android targets

IntegrationTests.XamarinAndroid.csproj
- uncomment the Debug conditional section
- put the Release condition back on the Release ItemGroup
- Add the 64bit libs back into BOTH groups.

NuGet/NuGet.Library/Realm.targets
- removed armeabi entry for libwrappers.so

wrappers/jni/Application.mk
- conditionally add REALM_DEBUG to APP_CPPFLAGS

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Fix Windows wrappers builds for other than x86 Debug and improve reuse

Wrappers.vcxproj
- android\weak_realm_notifier.cpp excluded from all configs and platforms
- apple\weak_realm_notifier.cpp excluded from all configs and platforms
- directory path to adjacent core libs changed from
  $(SolutionDir)..\realm-core
  to
  $(ProjectDir)..\..\realm-core
  
  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Refactoring String Getter to share buffer and avoid reallocations and more native trips

RealmObject.cs
- GetStringValue rewritten pulling in the logic previously in the MarshalHelpers
  and simply doing two passes rather than looking like it loops longer  
 
Realm.cs
- stringGetBuffer, stringGetBufferLen added
- Dispose - cleanup stringGetBuffer

MarshalHelpers.cs
- removed unused StrAllocateBuffer, StrBufToStr and StrBufferOverflow

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
ADDING UNIT TESTS VIA PCL

NuGetReleaseTests.sln
- added with two projects


ObjectIntegrationTests.cs
- added #if ENABLE_INTERNAL_NON_PCL_TESTS around NonAutomaticPropertiesShouldNotBeWoven  

InstanceTests.cs
- added #if ENABLE_INTERNAL_NON_PCL_TESTS around FakeExceptionThrowTest  
  and FakeExceptionThrowLoopingTest

IntegrationTests.XamarinAndroid.csproj
IntegrationTests.XamarinIOS.csproj
- define ENABLE_INTERNAL_NON_PCL_TESTS


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#462 Ensuring Count uses direct code

SimpleLINQtests.cs
- CountFoundItems rearranged slightly
- CountFoundWithCasting added

RealmResults.Count
- added case for not all records, using Results to get query count

NativeResults.cs
- count added

results_cs.cpp
- results_count added

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#464 Query with Variables

LINQvariableTests.cs
- added

RealmResultsVisitor.cs
- VisitMethodCall handle other string args


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Chained Queries

SimpleLINQtests.cs
- ChainedSearch added to confirm syntax

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Combining Packages with 0.74.1 Release

Realm.sln
- removed Nuget.Weaver

Nuget.Weaver
- deleted and rolled into Realm.targets and Realm.nuspec

NuGet.Weaver files moved to NuGet.Library
- readme.txt
- FodyWeavers.xml

Realm.nuspec
- dependency changed from RealmWeaver to Fody
- file entries added for 
    RealmWeaver.Fody.dll
    FodyWeavers.xml.install.xdt
    FodyWeavers.xml.uninstall.xdt
- Realm.targets now targeting build, was previously build/MonoAndroid44, so get CopyRealmWeaver target in all projects    

Realm.targets
- added FodyWeavers.xml
- added the target CopyRealmWeaver 

FodyWeavers.xml.install.xdt
FodyWeavers.xml.uninstall.xdt
- added

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#499 Add Readonly

RealmConfiguration.cs
- ReadOnly added

Realm.cs
- GetInstance - pass in readOnly flag from RealmConfifuraion

RealmExceptionCodes.cs
- RealmExceptionCodes - added RealmInvalidTransaction

RealmException.cs
- Create add case for RealmInvalidTransaction

RealmInvalidTransactionException.cs
- added

Realm.Shared.csproj
- added RealmInvalidTransactionException

Realm.PCL.csproj
- added link to RealmInvalidTransactionException
ConfigurationTests.cs
- ReadOnlyRealmsArentWritable added
- ReadOnlyFilesMustExist added
- ReadOnlyRealmsWillNotAutoMigrate added

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#541 Android crash in GetInstance

Realm.cs
- Realm static ctor
  - remove Debug.Writeline check loop as it does nothing. Throwing an exception here ended up buried as inner exception so no good for user reporting.
  - CreateRealmObjectMetadata
    - added check for no woven attributes throw exception
    

  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#461 New DateTime With Core 1.0

wrappers/Makefile
- use core 1.0.1

RealmResultsVisitor.cs
- replace all datetime_seconds with timestamp_milliseconds
- replace all ToUnixTimeMSeconds with ToUnixTimeMilliseconds  


RealmObject.cs
- SetNullableDateTimeOffsetValue 
  SetDateTimeOffsetValue
  - use ToUnixTimeMilliseconds and set_timestamp_milliseconds
- GetDateTimeOffsetValue
  - use DateTimeOffset.FromUnixTimeMilliseconds and get_timestamp_milliseconds
- GetNullableDateTimeOffsetValue  
  - use DateTimeOffset.FromUnixTimeMilliseconds and get_nullable_timestamp_milliseconds


NativeTable.cs
- set_datetime_seconds renamed set_timestamp_milliseconds
- get_datetime_seconds renamed get_timestamp_milliseconds
- get_nullable_datetime_seconds renamed get_nullable_timestamp_milliseconds


NativeQuery.cs
- replace all datetime_seconds with timestamp_milliseconds

DateTimeOffsetExtensions.cs
- ToUnixTimeSeconds replaced by ToRealmUnixTimeMilliseconds
- FromUnixTimeSeconds replaced by FromRealmUnixTimeMilliseconds

wrappers/timestamp_helpers.hpp  
- added with to_milliseconds and from_milliseconds

wrappers/table_cs.cpp
table_set_datetime_seconds
- renamed table_set_timestamp_milliseconds
- use from_milliseconds
- table_get_datetime_seconds 
  - renamed table_get_timestamp_milliseconds
  - use to_milliseconds
- table_get_nullable_datetime_seconds 
  - renamed table_get_nullable_timestamp_milliseconds
  - use to_milliseconds
  
  
wrappers/query_cs.cpp
- replace all datetime_seconds with timestamp_milliseconds
- replace all DateTime(value) with from_milliseconds(value)


wrappers/.../object_store.cpp
- ObjectStore::table_for_object_type
  ObjectStore::table_for_object_type
  ObjectStore::table_for_object_type_create_if_needed
  use wrapper code with temp std::string


wrappers/.../transact_log_handler.cpp
- MarkDirtyMixin::set_date_time replaced by set_timestamp and set_olddatetime


wrappers/.../results.cpp
- Results::aggregate take Timestamp instead of DateTime
MarshalHelpers.cs
- RealmColType - map DateTimeOffset to 8 (type_Timestamp) instead of 7


  
DateTimeTests.cs
- SetAndGetPropertyTest parameterised to test a range
- SortingFinelyDifferentDateTimes added
- FindingByMilliseconds added
  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#461 New DateTime With Core 1.0 .2

wrappers/Makefile
- use core 1.0.2
- migrate to new realm-core-dotnet-cocoa builds with just no-bitcode libs

IntegrationTests.XamarinIOS.csproj
- make sure builds include Armv7s as now using that also after user support request

wrappers.xcodeproj
- revert to no bitcode


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#562 Move to core 1.1.2

Makefile
- bump CORE_APPLE_VER and CORE_ANDROID_VER    

SortingTests.cs
- added SortsAccentedAndSpecialCorrectly (will fail on previous builds)


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#639 Sample code to verify approach for cascading delete workaround

RelationshipTests.cs
- TestDeleteChildren added with Product and Report class definitions

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#287 IList Declarations

RealmObjectPCL.cs
- GetListValue return IList
- _CopyDataFromBackingFieldsToRow - also skip over IList<>

RealmList.cs
- RealmListEnumerator 
  - enumerating changed from RealmList to IList
  - ctor param changed to IList

Realm.cs
- GenerateObjectSchema
  - allow IList types in nullability checks
  
RealmObject.cs
- GetListValue return type IList but still create RealmList
- SetListValue added

Use IList instead of RealmList in tests:
- IntegrationTests.Shared
  - Person.cs
  - RelationshipTests.cs

- WeaverTests
  - AssemblyToProcess
    - Person.cs
    - FaultyClasses.cs
  - Realm.FakeForWeaverTests/RealmObject.cs
    - GetListValue return IList
    - SetListValue take IList
        
ModuleWeaver.cs
- _genericSetListValueReference added
- Execute  - init _genericSetListValueReference to ref RealmObject.SetListValue
- WeaveProperty
  - allow Ilist<RealmObject subclass> as well as RealmList
  - remove test banning setters on lists and RealmList
  - generate setter for lists
  
NativeTable.cs
- linklist_is_empty added

wrappers/table_cs.cpp  
- table_linklist_is_empty added


RelationshipTests.cs
- class Owner added set to Dogs property
- TimLosesHisDogsByAssigningNull added
- TestManagingStandaloneTwoLevelRelationship enabled & added check for full list added
- TestManagingStandaloneThreeLevelRelationship enabled & added check for full list added
- TestCircularRelationshipsFromStandaloneTwoStage enabled & added check for full list added
- TestAddingRelationshipsToExistingViaAssignment added


IntegrationTests.Shared/Person.cs
- Friends added automatic set to property


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#287 IList Declarations - cope with adding hierarchies

RealmObject.cs
- _CopyDataFromBackingFieldsToRow remove continue for lists - they just work

RelationshipTests.cs
- TestManagingStandaloneTwoLevelRelationship - fix bad test values now it is being run


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#287 IList Declarations - remove setter and combine with Yavor's ICopyValuesFrom

ModuleWeaver.cs
- WeaveProperty
  - put back test banning setters on lists and RealmList

RelationshipTests.cs
- class Owner removed set to Dogs property
- TimLosesHisDogsByAssigningNull removed

- TestAddingRelationshipsToExistingViaAssignment removd

IntegrationTests.Shared/Person.cs
- Friends removed automatic set to property

RealmObject.cs
- SetListValue removed
- _CopyDataFromBackingFieldsToRow use ICopyValuesFrom to get method to invoke to copy into RealmList generic instance.


RealmList
- added internal interace ICopyValuesFrom (thanks Yavor)

ICopyValuesFrom.cs
- factored out internal interface so can reuse in PCL copy of RealmList

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#287 IList Declarations - weaving in default declarations for standalones

Person.cs
- remove init clause on Friends

ModuleWeaver.cs
- add System_IList field
- Execute - init System_IList
- WeaveProperty
  - error if no backingField (temp double-check)
  - IList set backing field to cope with new getter
  - restore warning on IList disallowing setter
- PrependListFieldInitializerToConstructor removed unused method
- ReplaceListGetter added
 
 #287 IList integration - add tests to help debug
WeaverTests.cs - added SetManyRelationship to trigger 


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#694 Use Core 1.4.0

Makefile 
- bump versions

linklist_cs.cpp
- had to add #include <sstream> for ostringstream

marshalling.cpp
- had to add #include <iostream> for cerr


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#719 - Improve error messages for LINQ Member Expressions

SimpleLINQTests.cs
- IntegerConversionTriggersError added to see the message


RealmResultsVisitor.cs
- VisitBinary added Left and Right expression dumps into exception message.

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#715 Fix Weaving error

PurePCLBuildableTest.csproj
- added to Realm.sln to make it easier to build and tests PCL errors

ModuleWeaver.csproj
- Execute - import System_IList directly from _realmAssembly.MainModule if fails to get type from _corLib


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Fix signature mismatch in PCL ToNotifyCollectionChanged

RealmResultsPCL.cs
- changed RealmResults to implement IOrderedQueryable<T> instead of IQueryable<T>

RealmResultsCollectionChanged.cs
- replace RealmResults with IOrderedQueryable in ToNotifyCollectionChanged signatures

QuickJournalLocal.sln
- cloned entire QuickJournal example and built local copy using relative links to it and 
  main Realm projects so can build and diagnose PCL errors without building nuget
  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Add PCL built schemas into unit tests

ObjectIntegrationTests.cs
- CreateObjectFromPCLTest added

InstanceTests.cs
- GetInstanceFromPCLTest added

IntegrationTests.XamarinAndroid
IntegrationTests.XamarinIOS  
- added reference to PurePCLBuildableTest

PurePCLBuildableTest/Class1.cs
- renamed to ObjectInPCL
- added properties of each type

PurePCLBuildableTest
- TestBuildingRealmFromPCL.MakeARealmWithPCL added

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#739 Better empty schema exception messages

ObjectSchema.cs
- Builder.Build - throw message identifying bad schema name with URL for docs

RealmSchema.cs
- Builder.Build - throw message saying no RealmObjects, with URL for docs


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#518 Start Schema Version at zero

RealmConfiguration.cs
- NotVersioned removed
- SchemaVersion now initialised to zero

RealmConfigurationPCL.cs
- NotVersioned removed

ObjectIntegrationTests.cs
- TriggerMigrationBySchemaVersion expect zero initial version

ForMigrationsToCopyAndMigrate.realm
- updated standard database with initial (zero) schema version

RealmMigrationTests.cs
- refactored out from ObjectIntegrationTests.cs
- MigrationTriggersDelete - disabled as it is not triggered due issue 507

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#507 RealmMigrationSchemaNeededException not thrown

wrappers/error_handling.hpp
- RealmErrorType added RealmSchemaMismatch=14

wrappers/error_handling.cpp
- convert_exception - add case for SchemaMismatchException passed back as RealmSchemaMismatch

RealmExceptionCodes.cs
- RealmExceptionCodes  added RealmSchemaMismatch=14

RealmException.cs
- RealmException.Create  
  - added case for RealmSchemaMismatch
  - RealmFormatUpgradeRequired handled mapping to plain RealmException
  
RealmMigrationTests.cs
- TriggerMigrationBySchemaEditing re-enabled


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Refactoring MakeObject logic to assist ObjectID work and reduce lookups

Realm.cs
- MakeObjectForRow overload added to take a RealmObject.Metadata instead of doing lookup, and simple rowPtr
- MakeObjectForRow original taking string, changed to take rowPtr for second arg and forward to new overload
- MakeResultsForTable take metadata instead of class name

RealmList.cs
- added field _targetMetadata
- this[int index]
  - init _targetMetadata if null
  - use new MakeObjectForRow

RealmResults.cs
- added field _targetMetadata
- this[int index]
  - init _targetMetadata if null
  - use new MakeObjectForRow
- CreateResultsHandle
  - init _targetMetadata if null
- MakeResultsForTable take metadata instead of name
- RemoveAll - lookup metadata for MakeResultsForTable

RealmObjectOps.cs
-  GetObjectValue<T>(string propertyName) pass only rowPtr to MakeObjectForRow

RealmObject.cs
-  GetObjectValue<T>(string propertyName) pass only rowPtr to MakeObjectForRow

RealmResultsEnumerator.cs
- MoveNext
  - quicker check for failure knowing a null rowPtr returned

RealmResultsVisitor.cs
- VisitMethodCall    
  - quicker check for failure knowing a null rowPtr returned


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Refactoring MakeObject logic to assist ObjectID work and reduce lookups

Realm.cs
- MakeObjectForRow overload added to take a RealmObject.Metadata instead of doing lookup, and simple rowPtr
- MakeObjectForRow original taking string, changed to take rowPtr for second arg and forward to new overload
- MakeResultsForTable take metadata instead of class name
- MakeSortOrderForTable take metadata instead of class name
- All(both overloads) - lookup metadata for RealmResults
- RemoveAll optimise loop by foreach on Metadata instead of Schema

RealmList.cs
- RealmList
  - added field _targetMetadata
  - use new MakeObjectForRow
  - IRealmList.SchemaClassName removed
  - _schemaClassName removed
  - ctor take a metadata param instead of className and set _targetMetadata
- IRealmList - removed SchemaClassName

RealmResults.cs
- added field _targetMetadata
- this[int index]
  - init _targetMetadata if null
  - use new MakeObjectForRow
- CreateResultsHandle
  - init _targetMetadata if null
- MakeResultsForTable take metadata instead of name
- RemoveAll - lookup metadata for MakeResultsForTable
- ctor take Metadata instead of schema

RealmResultsProvider.cs
- _schema replaced by _metadata
- ctor take Metadatata instead of schema


RealmObjectOps.cs
-  GetObjectValue<T>(string propertyName) pass only rowPtr to MakeObjectForRow
- GetList lookup metadata for RealmList ctor

RealmObject.cs
-  GetObjectValue<T>(string propertyName) pass only rowPtr to MakeObjectForRow
- GetListValue<T>(string propertyName) lookup metadata for RealmList ctor

RealmResultsEnumerator.cs
- MoveNext
  - quicker check for failure knowing a null rowPtr returned

RealmResultsVisitor.cs
- _schema removed
- _metadata added
- VisitMethodCall    
  - quicker check for failure knowing a null rowPtr returned


RealmListPCL.cs
- removed IRealmList.SchemaClassName


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Renaming ObjectId to PrimaryKey

General search and replace ObjectId with PrimaryKey

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#402 Retrieve Optimally by ObjectId

ObjectIdTests.cs
- added

Realm.cs
- ObjectById added (with overloads by types)
- CreateRealmObjectMetadata work out index of objectId col

wrappers/query_cs.cpp
- row_for_string_id added
- row_for_int_id added, both using find_first instead of Query


RealmObject.Metadata
- ObjectIdColIndex added

RealmClassLacksObjectIdException
- added

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#402 Retrieve Optimally by ObjectId - rewrite to move more to c++

RealmObject.cs
- Metadata - removed ObjectIdColIndex

Realm.cs
- ObjectById rewritten to pass schema, renamed ObjectForPrimaryKey to match other SDKs
- CreateRealmObjectMetadata don't work out index of objectId col
- MetadataCheckingHasObjectId - removed helper method

wrappers/realm_error_type.hpp
- RealmErrorType - RealmTableHasNoPrimaryKey=22 added

wrappers/error_handling.cpp
- convert_exception - map MissingPrimaryKeyException to RealmTableHasNoPrimaryKey

RealmExceptionCodes.cs
- RealmTableHasNoPrimaryKey=22 added

RealmException.cs
- Create - added mapping RealmTableHasNoPrimaryKey to RealmClassLacksObjectIdException

RealmPCL.cs
- added proxy methods for all four ObjectForPrimaryKey variants

AsyncTests.cs
- AsyncWrite_UpdateViaPrimaryKey use ObjectForPrimaryKey instead of a search
 
 
ObjectSchema.cs
- FromType - also mark as indexed if IsPrimaryKey
 
wrappers/schema_cs.cpp
- schema_create now set the primary_key string to name of property specified as [PrimaryKey]

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#655 Protect primary key so detects attempt to set twice

RealmDuplicatePrimaryKeyValueException.cs
- added

RealmExceptionCodes.cs
- RealmDuplicatePrimaryKeyValue added

RealmExceptions.cs
- Create - map RealmDuplicatePrimaryKeyValue to RealmDuplicatePrimaryKeyValueException
    
wrappers/realm_error_type.hpp
- RealmDuplicatePrimaryKeyValue added


wrappers/error_handling.hpp
- add decl of SetDuplicatePrimaryKeyValueException

wrappers/error_handling.cpp
- map the existing objectstore DuplicatePrimaryKeyValueException and  SetDuplicatePrimaryKeyValueException to RealmDuplicatePrimaryKeyValue

wrappers/table_cs.cpp
- table_set_int64_unique and  table_set_string_unique
  change return type to bool and check if key already exists
- table_set_null throw std::invalid_argument object not a new std::invalid_argument

PrimaryKeyTests.cs
- PrimaryKeyIntObjectIsUnique added
- PrimaryKeyStringObjectIsUnique added


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#802 More Elements

SimpleLINQtests.cs
- LastWorks, LastFailsToFind added
- ElementAtOutOfRange, ElementAtInRange added
- FirstOrDefaultReturnsDefault added
- SingleOrDefaultReturnsDefault added
- LastOrDefaultReturnsDefault added
- ElementAtOrDefaultReturnsDefault added
- DefaultIfEmptyReturnsDefault added
- SingleOrDefaultorks, FirstOrDefaultWorks, 
  LastOrDefaultWorks and ElementAtOrDefaultInRange added

SortingTests.cs
- LastIsDifferentSorted added

RealmResultsVisitor.cs
- VisitElementAt added
- VisitMethodCall 
  - added case for Last
  - added case for LastOrDefault
  - added case for FirstOrDefault
  - added case for SingleOrDefault
  - added case for ElementAtOrDefault

Global search and replace IndexOutOfRangeException with ArgumentOutOfRangeException


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#708 Support queries on char types

SimpleLinqTests.cs
- SearchComparingChar added

RealmResultsVisitor.cs
- add a case for char to
  AddQueryEqual
  AddQueryNotEqual
  AddQueryLessThan
  AddQueryLessThanOrEqual
  AddQueryGreaterThan
  AddQueryGreaterThanOrEqual
- VisitBinary added detection of Convert on lhs
  

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#833 ObjectForPrimaryKey possible failure with interfaces

PrimaryKeyTests.cs
- PrimaryKeyFailsIfClassNotinRealm added
- DontFindByStringPrimaryKey added
- DontFindByInt64PrimaryKey added
- DontFindDynamicByInt64PrimaryKey added
- DontFindDynamicByStringPrimaryKey added

Realm.cs
- ObjectForPrimaryKey - all variations
  - check for rowPtr returned as zero and return null to indicate not found
  
