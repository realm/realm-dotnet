name: test-unity
"on":
  workflow_call:
    inputs:
      version:
        type: string
        required: true
env:
  REALM_DISABLE_ANALYTICS: true
  DOTNET_NOLOGO: true
jobs:
  build-tests:
    runs-on:
    - unity
    - ${{ matrix.os }}
    name: Build Unity ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: windows
          testPlatform: Windows64
    steps:
    - name: Fetch Unity Package
      uses: actions/download-artifact@v2
      with:
        name: io.realm.unity-${{ inputs.version }}.tgz
        path: Realm/Realm.Unity
    - name: Fetch Unity Tests
      uses: actions/download-artifact@v2
      with:
        name: UnityTests
        path: Tests/Tests.Unity
    - name: Build Unity Tests
      run: |
        unity-editor -runTests -batchmode -projectPath ${{ github.workspace }}/Tests/Tests.Unity -testPlatform Standalone${{ matrix.testPlatform }} -testSettingsFile ${{ github.workspace }}/Tests/Tests.Unity/.TestConfigs/Mono-Net4.json -logFile ${{ matrix.os == 'windows' && 'build.log' || '-'}}
        ${{ matrix.os == 'windows' && 'cat build.log' || ''}}
    - name: Store artifacts for UnityTestsRunner.${{ matrix.os }}
      uses: actions/upload-artifact@v2
      with:
        name: UnityTestsRunner.${{ matrix.os }}
        path: ${{ github.workspace }}/Tests/Tests.Unity/Player**/*
        retention-days: ${{ github.event_name != 'pull_request' && 30 || 1 }}
  run-tests-windows:
    runs-on: windows-latest
    name: Unity Windows
    timeout-minutes: 30
    needs:
    - build-tests
    steps:
    - name: Download Test Runner
      uses: actions/download-artifact@v2
      with:
        name: UnityTestsRunner.windows
        path: TestRunner
    - name: Run Tests
      run: |
        tree
        ${{ github.workspace }}\TestRunner\PlayerWithTests.exe -logFile test.log
        cat test.log
      shell: powershell
