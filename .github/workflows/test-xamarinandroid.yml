name: test-xamarinandroid
"on":
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      clusterName:
        required: false
        type: string
    secrets:
      AtlasProjectId:
        required: false
      BaseUrl:
        required: false
      AtlasPublicKey:
        required: false
      AtlasPrivateKey:
        required: false
      AWS_DEVICEFARM_ACCESS_KEY_ID:
        required: true
      AWS_DEVICEFARM_SECRET_ACCESS_KEY:
        required: true
      DEVICEFARM_PROJECT_ARN:
        required: true
      DEVICEFARM_ANDROID_POOL_ARN:
        required: true
env:
  REALM_DISABLE_ANALYTICS: true
  DOTNET_NOLOGO: true
jobs:
  run-tests:
    runs-on: windows-latest
    name: Xamarin.Android
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: false
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Register csc problem matcher
      run: echo "::add-matcher::.github/problem-matchers/csc.json"
    - name: Register msvc problem matcher
      run: echo "::add-matcher::.github/problem-matchers/msvc.json"
    - name: Fetch Realm
      uses: actions/download-artifact@v2
      with:
        name: Realm.${{ inputs.version }}
        path: ${{ github.workspace }}/Realm/packages/
    - name: Fetch Realm.Fody
      uses: actions/download-artifact@v2
      with:
        name: Realm.Fody.${{ inputs.version }}
        path: ${{ github.workspace }}/Realm/packages/
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      if: ${{ runner.os == 'Windows' }}
    - uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('Tests/Tests.Android/*.csproj') }}
    - name: Build Tests/Tests.Android
      run: msbuild Tests/Tests.Android -t:SignAndroidPackage -p:Configuration=Release -restore -p:RestoreConfigFile=Tests/Test.NuGet.Config -p:UseRealmNupkgsWithVersion=${{ inputs.version }} -p:AndroidSupportedAbis=armeabi-v7a -p:AndroidUseSharedRuntime=False -p:EmbedAssembliesIntoApk=True
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_DEVICEFARM_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_DEVICEFARM_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    - name: Run the tests
      uses: realm/aws-devicefarm/test-application@d94e739490340474f8464f74289a0f48706dd3a3
      id: run_tests
      with:
        project_arn: ${{ secrets.DEVICEFARM_PROJECT_ARN }}
        device_pool_arn: ${{ secrets.DEVICEFARM_ANDROID_POOL_ARN }}
        app_file: ${{ github.workspace }}/Tests/Tests.Android/bin/Release/io.realm.xamarintests-Signed.apk
        app_type: ANDROID_APP
        test_type: APPIUM_PYTHON
        test_package_file: https://github.com/realm/aws-devicefarm-sample-data/releases/download/0.3/sample_env_python3.zip
        test_package_type: APPIUM_PYTHON_TEST_PACKAGE
        test_spec_file: test_spec.yaml
        test_spec_type: APPIUM_PYTHON_TEST_SPEC
        remote_src: true
        test_spec: |
          version: 0.1
          phases:
            install:
              commands:
                - export PYTHON_VERSION=3
            pre_test:
              commands:
                - adb -s $DEVICEFARM_DEVICE_UDID shell pm grant io.realm.xamarintests android.permission.READ_EXTERNAL_STORAGE
                - adb -s $DEVICEFARM_DEVICE_UDID shell pm grant io.realm.xamarintests android.permission.WRITE_EXTERNAL_STORAGE
            test:
              commands:
                - echo " --baasurl=${{ secrets.BaseUrl }} --baascluster=${{ inputs.clusterName }} --baasapikey=${{ secrets.AtlasPublicKey}} --baasprivateapikey=${{ secrets.AtlasPrivateKey}} --baasprojectid=${{ secrets.AtlasProjectId }} --baasdifferentiator=xamarinandroid" > testargs.txt
                - adb -s $DEVICEFARM_DEVICE_UDID push testargs.txt /storage/emulated/0/RealmTests/testargs.txt
                - adb -s $DEVICEFARM_DEVICE_UDID shell am instrument -w -r io.realm.xamarintests/.TestRunner
            post_test:
              commands:
                - adb -s $DEVICEFARM_DEVICE_UDID pull /storage/emulated/0/RealmTests/TestResults.Android.xml $DEVICEFARM_LOG_DIR/TestResults.Android.xml
          artifacts:
            - $DEVICEFARM_LOG_DIR
        file_artifacts: |
          Customer Artifacts.zip
    - run: |
        Expand-Archive 'Customer Artifacts.zip' -DestinationPath artifacts
        Import-Module AWSPowerShell
        $jobs = Get-DFJobList -Arn ${{ steps.run_tests.outputs.arn }}
        $suites = Get-DFSuiteList -Arn $jobs[0].Arn
        $artifacts = Get-DFArtifactList -Arn $suites[1].Arn -Type File | Where-Object { $_.Name -EQ "Logcat" }
        echo "::group::Logcat"
        Invoke-WebRequest -Uri $artifacts[0].Url | Select-Object -Expand RawContent
        echo "::endgroup::"
      name: Fetch test artifacts
    - run: |
        echo "::group::Data"
        echo (ConvertFrom-Json '${{ steps.run_tests.outputs.data }}' | ConvertTo-Json)
        echo "::endgroup::"
      if: always()
      name: Device Farm Raw JSON Output
    - name: Publish Unit Test Results
      uses: LaPeste/test-reporter@b8a650f4490e7472b930f56bbb92c7b42dc5db15
      if: always()
      with:
        name: Results Xamarin.Android
        path: artifacts/Host_Machine_Files/$DEVICEFARM_LOG_DIR/TestResults.Android.xml
        reporter: java-junit
        list-suites: failed
        list-tests: failed
        path-replace-backslashes: true
        fail-on-error: false
