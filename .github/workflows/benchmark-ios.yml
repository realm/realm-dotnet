name: benchmark-ios
on:
  # To enable running it manually, possibility of adding parameters. It can be run manually only if this file is in master.
  workflow_dispatch:
  push:
env:
  # Branch for Github Pages
  gh-pages-branch: gh-pages
jobs:
  build-wrappers:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Check if cache contains wrappers already
        id: wrapper-cache
        uses: actions/cache@v2
        with:
          path: ./wrappers/build/
          key: wrapper-ios-${{hashfiles('./wrappers/**')}}
      - name: Build wrappers Release
        if: steps.wrapper-cache.outputs.cache-hit != 'true'
        run: ./wrappers/build-macos.sh --configuration=Release
  execute-benchmarks:
    needs: [build-wrappers]
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Download previously built wrappers
        id: wrapper-cache
        uses: actions/cache@v2
        with:
          path: ./wrappers/build/
          key: wrapper-ios-${{hashfiles('./wrappers/**')}}
      - name: Check cache hit
        # If there is no cache hit, just fail
        if: steps.wrapper-cache.outputs.cache-hit != 'true'
        run: exit 1
      - name: Run benchmarks
      # We need to use the quotes on Linux, otherwise it substitutes the wildcard with all the files in the folder
        run:  |
          msbuild -p:Platform=iPhoneSimulator
        working-directory: ./Tests/Benchmarks/Benchmarks.iOS
      - name: Save artifacts
        # Not mandatory, but maybe it's good to do it?
        uses: actions/upload-artifact@v2
        with:
          name: benchmark-results
          # Could be put in an environmental variable
          path: ./BenchmarkDotNet.Artifacts/results
