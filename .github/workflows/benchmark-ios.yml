name: benchmark-ios
on:
  # To enable running it manually, possibility of adding parameters. It can be run manually only if this file is in master.
  workflow_dispatch:
  push:
env:
  # Branch for Github Pages
  gh-pages-branch: gh-pages
jobs:
  build-wrappers:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Check if cache contains wrappers already
        id: wrapper-cache
        uses: actions/cache@v2
        with:
          path: ./wrappers/build/
          key: wrapper-ios-${{hashfiles('./wrappers/**')}}
      - name: Setting defaults to use old Xcode build system
        run: defaults write com.apple.dt.Xcode UseModernBuildSystem -bool NO
      - name: Build wrappers Release
        if: steps.wrapper-cache.outputs.cache-hit != 'true'
        run: ./build-ios.sh --configuration=Release
        working-directory: ./wrappers
  execute-benchmarks:
    needs: [build-wrappers]
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Download previously built wrappers
        id: wrapper-cache
        uses: actions/cache@v2
        with:
          path: ./wrappers/build/
          key: wrapper-ios-${{hashfiles('./wrappers/**')}}
      - name: Check cache hit
        # If there is no cache hit, just fail
        if: steps.wrapper-cache.outputs.cache-hit != 'true'
        run: exit 1
      - name: Build Realm
        run: dotnet build
        working-directory: ./Realm/Realm
      - name: Build Realm.Fody
        run: dotnet build
        working-directory: ./Realm/Realm.Fody
      - name: Build Benchmark project
        run:  |
          msbuild -p:Platform=iPhoneSimulator -p:Configuration=Release -p:RestoreConfigFile:="../../Test.NuGet.config" /restore
        working-directory: ./Tests/Benchmarks/Benchmarks.iOS
