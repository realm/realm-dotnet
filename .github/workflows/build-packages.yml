name: build-packages
"on":
  workflow_call:
    inputs:
      build-docs:
        type: boolean
        required: false
        default: false
    outputs:
      package_version:
        value: ${{ jobs.build-packages.outputs.package_version }}
env:
  REALM_DISABLE_ANALYTICS: true
  DOTNET_NOLOGO: true
jobs:
  build-packages:
    runs-on: windows-latest
    name: NuGet
    outputs:
      package_version: ${{ steps.get-version.outputs.version }}
    timeout-minutes: 30
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: false
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Register csc problem matcher
      run: echo "::add-matcher::.github/problem-matchers/csc.json"
    - name: Register msvc problem matcher
      run: echo "::add-matcher::.github/problem-matchers/msvc.json"
    - name: Set version suffix
      id: set-version-suffix
      run: |
        $suffix = ""
        if ($env:GITHUB_EVENT_NAME -eq "pull_request")
        {
          if (-Not "${{ github.head_ref }}".Contains("release"))
          {
            $suffix = "pr-${{ github.event.number }}.$env:GITHUB_RUN_NUMBER"
          }
        }
        else
        {
          $suffix = "alpha.$env:GITHUB_RUN_NUMBER"
        }
        echo "build_suffix=$suffix" >> $Env:GITHUB_OUTPUT
    - name: Fetch artifacts for macos
      uses: actions/download-artifact@v3
      with:
        name: wrappers-macos
        path: wrappers/build
    - name: Fetch artifacts for catalyst
      uses: actions/download-artifact@v3
      with:
        name: wrappers-catalyst
        path: wrappers/build
    - name: Fetch artifacts for linux-x86_64
      uses: actions/download-artifact@v3
      with:
        name: wrappers-linux-x86_64
        path: wrappers/build
    - name: Fetch artifacts for linux-armhf
      uses: actions/download-artifact@v3
      with:
        name: wrappers-linux-armhf
        path: wrappers/build
    - name: Fetch artifacts for linux-aarch64
      uses: actions/download-artifact@v3
      with:
        name: wrappers-linux-aarch64
        path: wrappers/build
    - name: Fetch artifacts for iOS-Device
      uses: actions/download-artifact@v3
      with:
        name: wrappers-iOS-Device
        path: wrappers/build
    - name: Fetch artifacts for iOS-Simulator
      uses: actions/download-artifact@v3
      with:
        name: wrappers-iOS-Simulator
        path: wrappers/build
    - name: Fetch artifacts for tvOS-Device
      uses: actions/download-artifact@v3
      with:
        name: wrappers-tvOS-Device
        path: wrappers/build
    - name: Fetch artifacts for tvOS-Simulator
      uses: actions/download-artifact@v3
      with:
        name: wrappers-tvOS-Simulator
        path: wrappers/build
    - name: Fetch artifacts for android-armeabi-v7a
      uses: actions/download-artifact@v3
      with:
        name: wrappers-android-armeabi-v7a
        path: wrappers/build
    - name: Fetch artifacts for android-arm64-v8a
      uses: actions/download-artifact@v3
      with:
        name: wrappers-android-arm64-v8a
        path: wrappers/build
    - name: Fetch artifacts for android-x86
      uses: actions/download-artifact@v3
      with:
        name: wrappers-android-x86
        path: wrappers/build
    - name: Fetch artifacts for android-x86_64
      uses: actions/download-artifact@v3
      with:
        name: wrappers-android-x86_64
        path: wrappers/build
    - name: Fetch artifacts for windows-Win32
      uses: actions/download-artifact@v3
      with:
        name: wrappers-windows-Win32
        path: wrappers/build
    - name: Fetch artifacts for windows-x64
      uses: actions/download-artifact@v3
      with:
        name: wrappers-windows-x64
        path: wrappers/build
    - name: Fetch artifacts for windows-ARM64
      uses: actions/download-artifact@v3
      with:
        name: wrappers-windows-ARM64
        path: wrappers/build
    - name: Fetch artifacts for windows-uwp-Win32
      uses: actions/download-artifact@v3
      with:
        name: wrappers-windows-uwp-Win32
        path: wrappers/build
    - name: Fetch artifacts for windows-uwp-x64
      uses: actions/download-artifact@v3
      with:
        name: wrappers-windows-uwp-x64
        path: wrappers/build
    - name: Fetch artifacts for windows-uwp-ARM
      uses: actions/download-artifact@v3
      with:
        name: wrappers-windows-uwp-ARM
        path: wrappers/build
    - name: Fetch artifacts for windows-uwp-ARM64
      uses: actions/download-artifact@v3
      with:
        name: wrappers-windows-uwp-ARM64
        path: wrappers/build
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@0b44c6745b7e81956596964100aadb92d667c497
      if: ${{ runner.os == 'Windows' }}
    - name: Build Realm/Realm.Fody
      run: msbuild Realm/Realm.Fody -t:Pack -p:Configuration=Release -restore -p:PackageOutputPath=${{ github.workspace }}/Realm/packages -p:VersionSuffix=${{ steps.set-version-suffix.outputs.build_suffix }}
    - name: Build Realm/Realm
      run: msbuild Realm/Realm -t:Pack -p:Configuration=Release -restore -p:PackageOutputPath=${{ github.workspace }}/Realm/packages -p:VersionSuffix=${{ steps.set-version-suffix.outputs.build_suffix }}
    - name: Build Realm/Realm.UnityUtils
      run: msbuild Realm/Realm.UnityUtils -t:Pack -p:Configuration=Release -restore -p:PackageOutputPath=${{ github.workspace }}/Realm/packages -p:VersionSuffix=${{ steps.set-version-suffix.outputs.build_suffix }}
    - name: Build Realm/Realm.UnityWeaver
      run: msbuild Realm/Realm.UnityWeaver -t:Pack -p:Configuration=Release -restore -p:PackageOutputPath=${{ github.workspace }}/Realm/packages -p:VersionSuffix=${{ steps.set-version-suffix.outputs.build_suffix }}
    - name: Build Realm/Realm.SourceGenerator
      run: msbuild Realm/Realm.SourceGenerator -t:Pack -p:Configuration=Release -restore -p:PackageOutputPath=${{ github.workspace }}/Realm/packages -p:VersionSuffix=${{ steps.set-version-suffix.outputs.build_suffix }}
    - name: Read version
      id: get-version
      run: |
        cd Realm/packages
        pkgVersion=$(find . -type f -iname "Realm.Fody.*.nupkg" -exec basename {} \; | sed -n 's/Realm.Fody\.\(.*\)\.nupkg$/\1/p')
        echo "version=$pkgVersion" >> $GITHUB_OUTPUT
      shell: bash
    - name: Store artifacts for Realm.Fody.${{ steps.get-version.outputs.version }}
      uses: actions/upload-artifact@v3
      with:
        name: Realm.Fody.${{ steps.get-version.outputs.version }}
        path: ${{ github.workspace }}/Realm/packages/Realm.Fody.${{ steps.get-version.outputs.version }}.*nupkg
        retention-days: ${{ github.event_name != 'pull_request' && 30 || 1 }}
        if-no-files-found: error
    - name: Store artifacts for Realm.${{ steps.get-version.outputs.version }}
      uses: actions/upload-artifact@v3
      with:
        name: Realm.${{ steps.get-version.outputs.version }}
        path: ${{ github.workspace }}/Realm/packages/Realm.${{ steps.get-version.outputs.version }}.*nupkg
        retention-days: ${{ github.event_name != 'pull_request' && 30 || 1 }}
        if-no-files-found: error
    - name: Store artifacts for Realm.UnityUtils.${{ steps.get-version.outputs.version }}
      uses: actions/upload-artifact@v3
      with:
        name: Realm.UnityUtils.${{ steps.get-version.outputs.version }}
        path: ${{ github.workspace }}/Realm/packages/Realm.UnityUtils.${{ steps.get-version.outputs.version }}.*nupkg
        retention-days: ${{ github.event_name != 'pull_request' && 30 || 1 }}
        if-no-files-found: error
    - name: Store artifacts for Realm.UnityWeaver.${{ steps.get-version.outputs.version }}
      uses: actions/upload-artifact@v3
      with:
        name: Realm.UnityWeaver.${{ steps.get-version.outputs.version }}
        path: ${{ github.workspace }}/Realm/packages/Realm.UnityWeaver.${{ steps.get-version.outputs.version }}.*nupkg
        retention-days: ${{ github.event_name != 'pull_request' && 30 || 1 }}
        if-no-files-found: error
    - name: Store artifacts for Realm.SourceGenerator.${{ steps.get-version.outputs.version }}
      uses: actions/upload-artifact@v3
      with:
        name: Realm.SourceGenerator.${{ steps.get-version.outputs.version }}
        path: ${{ github.workspace }}/Realm/packages/Realm.SourceGenerator.${{ steps.get-version.outputs.version }}.*nupkg
        retention-days: ${{ github.event_name != 'pull_request' && 30 || 1 }}
        if-no-files-found: error
    - name: Store artifacts for ExtractedChangelog
      uses: actions/upload-artifact@v3
      with:
        name: ExtractedChangelog
        path: ${{ github.workspace }}/Realm/Realm/ExtractedChangelog.md
        retention-days: ${{ github.event_name != 'pull_request' && 30 || 1 }}
        if-no-files-found: error
    - name: Check Docfx cache
      id: check-docfx-cache
      if: inputs.build-docs
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: C:\docfx
        key: docfx-2.62.1
    - name: Download docfx
      if: inputs.build-docs && steps.check-docfx-cache.outputs.cache-hit != 'true'
      run: |
        Invoke-WebRequest -Uri https://github.com/dotnet/docfx/releases/download/v2.62.1/docfx-win-x64-v2.62.1.zip -OutFile C:\docfx.zip
        Expand-Archive -Path C:\docfx.zip -DestinationPath C:\docfx
      shell: powershell
    - name: Build docs
      if: inputs.build-docs
      run: |
        C:\docfx\docfx Docs/docfx.json
        Compress-Archive -Path Docs/_site -DestinationPath "Realm/packages/Docs.zip"
    - name: Store artifacts for Docs.zip
      uses: actions/upload-artifact@v3
      with:
        name: Docs.zip
        path: ${{ github.workspace }}/Realm/packages/Docs.zip
        retention-days: ${{ github.event_name != 'pull_request' && 30 || 1 }}
        if-no-files-found: error
      if: inputs.build-docs
