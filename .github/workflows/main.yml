name: 'build and test'
on: [push]

jobs:
  build-wrappers-macos:
    runs-on: macos-latest
    name: 'Build macOs wrappers'
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@v2
      with:
        submodules: recursive
    # - name: 'Check if cache contains wrappers already'
    #   id: wrapper-cache
    #   uses: actions/cache@v2
    #   with:
    #     path: ./wrappers/build/
    #     key: wrapper-macos-${{hashfiles('./wrappers/**')}}
    - name: 'Build wrappers'
      # if: 'steps.wrapper-cache.outputs.cache-hit != true'
      uses: ./.github/actions/build_macos_wrappers
      with:
        build-configuration: Release
  build-wrappers-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Check if cache contains wrappers already
        id: wrapper-cache
        uses: actions/cache@v2
        with:
          path: .\wrappers\build\Windows\Release-x64\
          key: wrapper-windows-${{hashfiles('.\wrappers\**')}}
      - name: Get CMake
        # If there is a cache hit, no need to do any of the following steps. Unfortunately there is no way to cancel the rest of the job.
        if: steps.wrapper-cache.outputs.cache-hit != 'true'
        uses: lukka/get-cmake@latest
      - name: Restore from cache and run vcpkg
        if: steps.wrapper-cache.outputs.cache-hit != 'true'
        uses: lukka/run-vcpkg@v5
        with:
          # Contains the list of packages and the triplet. If we need more than one triplet, we need to pass it with command line arguments
          vcpkgArguments: '@${{ env.vcpkgResponseFile }}'
          vcpkgGitCommitId: ec6fe06e8da05a8157dc8581fa96b36b571c1bd5
          # If the cache key is the same, it does not execute
          appendedCacheKey: ${{ hashFiles(env.vcpkgResponseFile) }}
        env:
          vcpkgResponseFile: '${{ github.workspace }}\.github\workflows\response_file.txt'
      - name: Build wrappers
        if: steps.wrapper-cache.outputs.cache-hit != 'true'
        run: .\wrappers\build.ps1 Windows -Configuration Release -Platforms x64 -Toolchain "${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake"
  build-wrappers-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Check if cache contains wrappers already
        id: wrapper-cache
        uses: actions/cache@v2
        with:
          path: ./wrappers/build/
          key: wrapper-linux-${{hashfiles('./wrappers/**')}}
      - name: Build wrappers
        if: steps.wrapper-cache.outputs.cache-hit != 'true'
        run: REALM_CMAKE_CONFIGURATION=Release ./wrappers/build.sh
  # TODO: BUILD AND RUN TESTS
  # execute-tests-macos:
  # execute-tests-:
  # execute-tests-windows:
  
