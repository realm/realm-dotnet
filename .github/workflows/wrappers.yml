name: wrappers
"on":
  workflow_call: null
env:
  REALM_DISABLE_ANALYTICS: true
  DOTNET_NOLOGO: true
jobs:
  check-cache:
    strategy:
      matrix:
        os:
        - ubuntu
        - windows
    runs-on: ${{ matrix.os }}-latest
    name: Check cache
    env:
      CACHE_SKIP_SAVE: true
    outputs:
      wrappers-macos: ${{ steps.check-cache-macos.outputs.cache-hit }}
      wrappers-catalyst: ${{ steps.check-cache-catalyst.outputs.cache-hit }}
      wrappers-linux: ${{ steps.check-cache-linux.outputs.cache-hit }}
      wrappers-iOS-Device: ${{ steps.check-cache-iOS-Device.outputs.cache-hit }}
      wrappers-iOS-Simulator: ${{ steps.check-cache-iOS-Simulator.outputs.cache-hit }}
      wrappers-tvOS-Device: ${{ steps.check-cache-tvOS-Device.outputs.cache-hit }}
      wrappers-tvOS-Simulator: ${{ steps.check-cache-tvOS-Simulator.outputs.cache-hit }}
      wrappers-android-armeabi-v7a: ${{ steps.check-cache-android-armeabi-v7a.outputs.cache-hit }}
      wrappers-android-arm64-v8a: ${{ steps.check-cache-android-arm64-v8a.outputs.cache-hit }}
      wrappers-android-x86: ${{ steps.check-cache-android-x86.outputs.cache-hit }}
      wrappers-android-x86_64: ${{ steps.check-cache-android-x86_64.outputs.cache-hit }}
      wrappers-windows-Win32: ${{ steps.check-cache-windows-Win32.outputs.cache-hit }}
      wrappers-windows-x64: ${{ steps.check-cache-windows-x64.outputs.cache-hit }}
      wrappers-windows-ARM64: ${{ steps.check-cache-windows-ARM64.outputs.cache-hit }}
      wrappers-windows-uwp-Win32: ${{ steps.check-cache-windows-uwp-Win32.outputs.cache-hit }}
      wrappers-windows-uwp-x64: ${{ steps.check-cache-windows-uwp-x64.outputs.cache-hit }}
      wrappers-windows-uwp-ARM: ${{ steps.check-cache-windows-uwp-ARM.outputs.cache-hit }}
      wrappers-windows-uwp-ARM64: ${{ steps.check-cache-windows-uwp-ARM64.outputs.cache-hit }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Check cache for macos
      id: check-cache-macos
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-macos-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'ubuntu'
    - name: Store artifacts for wrappers-macos
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-macos
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'ubuntu' && steps.check-cache-macos.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'ubuntu'
    - name: Check cache for catalyst
      id: check-cache-catalyst
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-catalyst-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'ubuntu'
    - name: Store artifacts for wrappers-catalyst
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-catalyst
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'ubuntu' && steps.check-cache-catalyst.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'ubuntu'
    - name: Check cache for linux
      id: check-cache-linux
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-linux-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'ubuntu'
    - name: Store artifacts for wrappers-linux
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-linux
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'ubuntu' && steps.check-cache-linux.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'ubuntu'
    - name: Check cache for iOS-Device
      id: check-cache-iOS-Device
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-iOS-Device-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'ubuntu'
    - name: Store artifacts for wrappers-iOS-Device
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-iOS-Device
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'ubuntu' && steps.check-cache-iOS-Device.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'ubuntu'
    - name: Check cache for iOS-Simulator
      id: check-cache-iOS-Simulator
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-iOS-Simulator-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'ubuntu'
    - name: Store artifacts for wrappers-iOS-Simulator
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-iOS-Simulator
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'ubuntu' && steps.check-cache-iOS-Simulator.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'ubuntu'
    - name: Check cache for tvOS-Device
      id: check-cache-tvOS-Device
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-tvOS-Device-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'ubuntu'
    - name: Store artifacts for wrappers-tvOS-Device
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-tvOS-Device
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'ubuntu' && steps.check-cache-tvOS-Device.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'ubuntu'
    - name: Check cache for tvOS-Simulator
      id: check-cache-tvOS-Simulator
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-tvOS-Simulator-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'ubuntu'
    - name: Store artifacts for wrappers-tvOS-Simulator
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-tvOS-Simulator
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'ubuntu' && steps.check-cache-tvOS-Simulator.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'ubuntu'
    - name: Check cache for android-armeabi-v7a
      id: check-cache-android-armeabi-v7a
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-android-armeabi-v7a-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'ubuntu'
    - name: Store artifacts for wrappers-android-armeabi-v7a
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-android-armeabi-v7a
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'ubuntu' && steps.check-cache-android-armeabi-v7a.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'ubuntu'
    - name: Check cache for android-arm64-v8a
      id: check-cache-android-arm64-v8a
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-android-arm64-v8a-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'ubuntu'
    - name: Store artifacts for wrappers-android-arm64-v8a
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-android-arm64-v8a
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'ubuntu' && steps.check-cache-android-arm64-v8a.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'ubuntu'
    - name: Check cache for android-x86
      id: check-cache-android-x86
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-android-x86-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'ubuntu'
    - name: Store artifacts for wrappers-android-x86
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-android-x86
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'ubuntu' && steps.check-cache-android-x86.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'ubuntu'
    - name: Check cache for android-x86_64
      id: check-cache-android-x86_64
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-android-x86_64-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'ubuntu'
    - name: Store artifacts for wrappers-android-x86_64
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-android-x86_64
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'ubuntu' && steps.check-cache-android-x86_64.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'ubuntu'
    - name: Check cache for windows-Win32
      id: check-cache-windows-Win32
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-windows-Win32-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'windows'
    - name: Store artifacts for wrappers-windows-Win32
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-windows-Win32
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'windows' && steps.check-cache-windows-Win32.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'windows'
    - name: Check cache for windows-x64
      id: check-cache-windows-x64
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-windows-x64-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'windows'
    - name: Store artifacts for wrappers-windows-x64
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-windows-x64
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'windows' && steps.check-cache-windows-x64.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'windows'
    - name: Check cache for windows-ARM64
      id: check-cache-windows-ARM64
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-windows-ARM64-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'windows'
    - name: Store artifacts for wrappers-windows-ARM64
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-windows-ARM64
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'windows' && steps.check-cache-windows-ARM64.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'windows'
    - name: Check cache for windows-uwp-Win32
      id: check-cache-windows-uwp-Win32
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-windows-uwp-Win32-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'windows'
    - name: Store artifacts for wrappers-windows-uwp-Win32
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-windows-uwp-Win32
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'windows' && steps.check-cache-windows-uwp-Win32.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'windows'
    - name: Check cache for windows-uwp-x64
      id: check-cache-windows-uwp-x64
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-windows-uwp-x64-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'windows'
    - name: Store artifacts for wrappers-windows-uwp-x64
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-windows-uwp-x64
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'windows' && steps.check-cache-windows-uwp-x64.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'windows'
    - name: Check cache for windows-uwp-ARM
      id: check-cache-windows-uwp-ARM
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-windows-uwp-ARM-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'windows'
    - name: Store artifacts for wrappers-windows-uwp-ARM
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-windows-uwp-ARM
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'windows' && steps.check-cache-windows-uwp-ARM.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'windows'
    - name: Check cache for windows-uwp-ARM64
      id: check-cache-windows-uwp-ARM64
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-windows-uwp-ARM64-Release-${{hashFiles('./wrappers/**')}}
      if: matrix.os == 'windows'
    - name: Store artifacts for wrappers-windows-uwp-ARM64
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-windows-uwp-ARM64
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
      if: matrix.os == 'windows' && steps.check-cache-windows-uwp-ARM64.outputs.cache-hit == 'true'
    - run: git clean -fdx
      if: matrix.os == 'windows'
  macos:
    runs-on: macos-12
    name: macOS
    timeout-minutes: 90
    needs:
    - check-cache
    if: needs.check-cache.outputs.wrappers-macos != 'true'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Check cache
      id: check-cache
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-macos-Release-${{hashFiles('./wrappers/**')}}
    - name: Build wrappers
      run: ./wrappers/build-macos.sh --configuration=Release -DCMAKE_INTERPROCEDURAL_OPTIMIZATION='ON'
      if: steps.check-cache.outputs.cache-hit != 'true'
    - name: Store artifacts for wrappers-macos
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-macos
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
  catalyst:
    runs-on: macos-12
    name: Catalyst
    timeout-minutes: 90
    needs:
    - check-cache
    if: needs.check-cache.outputs.wrappers-catalyst != 'true'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Check cache
      id: check-cache
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-catalyst-Release-${{hashFiles('./wrappers/**')}}
    - name: Build wrappers
      run: pwsh ./wrappers/build-apple-platform.ps1 Catalyst -Configuration Release -EnableLTO
      if: steps.check-cache.outputs.cache-hit != 'true'
    - name: Store artifacts for wrappers-catalyst
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-catalyst
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
  apple-platforms:
    runs-on: macos-12
    name: Apple Platform
    strategy:
      matrix:
        platform:
        - iOS
        - tvOS
        target:
        - Device
        - Simulator
    timeout-minutes: 90
    needs:
    - check-cache
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Check cache
      id: check-cache
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-${{ matrix.platform }}-${{ matrix.target }}-Release-${{hashFiles('./wrappers/**')}}
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@9a697e2b393340c3cacd97468baa318e4c883d98
      with:
        xcode-version: 14.0.1
    - name: Build wrappers
      run: pwsh ./wrappers/build-apple-platform.ps1 ${{ matrix.platform }} -Targets ${{ matrix.target }} -Configuration Release
      if: steps.check-cache.outputs.cache-hit != 'true'
    - name: Store artifacts for wrappers-${{ matrix.platform }}-${{ matrix.target }}
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-${{ matrix.platform }}-${{ matrix.target }}
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
    if: needs.check-cache.outputs.wrappers-iOS-Device != 'true' || needs.check-cache.outputs.wrappers-tvOS-Device != 'true'
  linux:
    runs-on: ubuntu-latest
    name: Linux
    timeout-minutes: 90
    needs:
    - check-cache
    if: needs.check-cache.outputs.wrappers-linux != 'true'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Register csc problem matcher
      run: echo "::add-matcher::.github/problem-matchers/csc.json"
    - name: Register msvc problem matcher
      run: echo "::add-matcher::.github/problem-matchers/msvc.json"
    - name: Check cache
      id: check-cache
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-linux-Release-${{hashFiles('./wrappers/**')}}
    - uses: jpribyl/action-docker-layer-caching@c632825d12ec837065f49726ea27ddd40bcc7894
      continue-on-error: true
      if: steps.check-cache.outputs.cache-hit != 'true'
    - name: Build CentOS image
      uses: docker/build-push-action@6e95f19fb8c9e00a1a391941edbc0ae30c1799f7
      with:
        tags: wrappers-centos:latest
        file: ./wrappers/centos.Dockerfile
        push: false
      if: steps.check-cache.outputs.cache-hit != 'true'
    - name: Build wrappers
      uses: addnab/docker-run-action@3e77f186b7a929ef010f183a9e24c0f9955ea609
      with:
        image: wrappers-centos:latest
        shell: bash
        options: -v ${{ github.workspace }}:/work
        run: /work/wrappers/build.sh --configuration=Release -DCMAKE_INTERPROCEDURAL_OPTIMIZATION='ON'
      if: steps.check-cache.outputs.cache-hit != 'true'
    - name: Store artifacts for wrappers-linux
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-linux
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
  android:
    runs-on: ubuntu-20.04
    name: Android
    strategy:
      matrix:
        arch:
        - armeabi-v7a
        - arm64-v8a
        - x86
        - x86_64
    timeout-minutes: 90
    needs:
    - check-cache
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Check cache
      id: check-cache
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-android-${{ matrix.arch }}-Release-${{hashFiles('./wrappers/**')}}
    - name: Build wrappers
      run: ./wrappers/build-android.sh --ARCH=${{ matrix.arch }} --configuration=Release
      if: steps.check-cache.outputs.cache-hit != 'true'
    - name: Store artifacts for wrappers-android-${{ matrix.arch }}
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-android-${{ matrix.arch }}
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
    if: needs.check-cache.outputs.wrappers-android-armeabi-v7a != 'true' || needs.check-cache.outputs.wrappers-android-arm64-v8a != 'true' || needs.check-cache.outputs.wrappers-android-x86 != 'true' || needs.check-cache.outputs.wrappers-android-x86_64 != 'true'
  windows:
    runs-on: windows-latest
    name: Windows
    strategy:
      matrix:
        arch:
        - Win32
        - x64
        - ARM64
    timeout-minutes: 90
    needs:
    - check-cache
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Check cache
      id: check-cache
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-windows-${{ matrix.arch }}-Release-${{hashFiles('./wrappers/**')}}
    - name: Build wrappers
      run: pwsh ./wrappers/build.ps1 Windows -Platforms ${{ matrix.arch }} -Configuration Release -EnableLTO
      if: steps.check-cache.outputs.cache-hit != 'true'
    - name: Store artifacts for wrappers-windows-${{ matrix.arch }}
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-windows-${{ matrix.arch }}
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
    if: needs.check-cache.outputs.wrappers-windows-Win32 != 'true' || needs.check-cache.outputs.wrappers-windows-x64 != 'true' || needs.check-cache.outputs.wrappers-windows-ARM64 != 'true'
  uwp:
    runs-on: windows-latest
    name: UWP
    strategy:
      matrix:
        arch:
        - Win32
        - x64
        - ARM
        - ARM64
    timeout-minutes: 90
    needs:
    - check-cache
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Check cache
      id: check-cache
      uses: nirinchev/cache@29e8e4dd9148ea81f9e188480132072cb6cc92d8
      with:
        path: ./wrappers/build/**
        key: wrappers-windows-uwp-${{ matrix.arch }}-Release-${{hashFiles('./wrappers/**')}}
    - name: Build wrappers
      run: pwsh ./wrappers/build.ps1 WindowsStore -Platforms ${{ matrix.arch }} -Configuration Release -EnableLTO
      if: steps.check-cache.outputs.cache-hit != 'true'
    - name: Store artifacts for wrappers-windows-uwp-${{ matrix.arch }}
      uses: actions/upload-artifact@v3
      with:
        name: wrappers-windows-uwp-${{ matrix.arch }}
        path: ${{ github.workspace }}/wrappers/build/**
        retention-days: 1
        if-no-files-found: error
    if: needs.check-cache.outputs.wrappers-windows-uwp-Win32 != 'true' || needs.check-cache.outputs.wrappers-windows-uwp-x64 != 'true' || needs.check-cache.outputs.wrappers-windows-uwp-ARM != 'true' || needs.check-cache.outputs.wrappers-windows-uwp-ARM64 != 'true'
