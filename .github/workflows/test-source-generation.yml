name: test-source-generation
"on":
  workflow_call: null
jobs:
  run-tests:
    runs-on: windows-latest
    name: Source Generation
    timeout-minutes: 45
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: false
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Register csc problem matcher
      run: echo "::add-matcher::.github/problem-matchers/csc.json"
    - name: Register msvc problem matcher
      run: echo "::add-matcher::.github/problem-matchers/msvc.json"
    - name: Get Workload Location
      id: workflow-location
      run: |
        if ($IsWindows) {
          echo "path=C:\ProgramData\dotnet\workloads" >> $env:GITHUB_OUTPUT
        } else {
          $dotnetPath = (get-item (get-command dotnet).Path).Directory.FullName
          echo "path=$dotnetPath/packs" >> $env:GITHUB_OUTPUT
        }
      shell: pwsh
    - name: Get cache key
      id: workflow-cache-key
      run: echo "cacheKey=${{ runner.os }}-workload2-$(date +'%U')-" >> $env:GITHUB_OUTPUT
      shell: pwsh
    - name: Restore cached workloads
      uses: actions/cache/restore@v3
      id: workload-restore
      with:
        path: ${{ steps.workflow-location.outputs.path }}
        key: ${{ steps.workflow-cache-key.outputs.cacheKey }}tvos ios maccatalyst android
    - name: Setup workloads
      run: dotnet workload install tvos ios maccatalyst android
    - name: Cache workloads
      uses: actions/cache/save@v3
      with:
        path: ${{ steps.workflow-location.outputs.path }}
        key: ${{ steps.workflow-cache-key.outputs.cacheKey }}tvos ios maccatalyst android
    - name: Publish Tests/SourceGenerators/Realm.SourceGenerator.Tests
      run: dotnet publish Tests/SourceGenerators/Realm.SourceGenerator.Tests -c Release -f net6.0 -r win-x64 --no-self-contained
    - name: Output executable path
      id: dotnet-publish
      run: echo 'executable-path=./Tests/SourceGenerators/Realm.SourceGenerator.Tests/bin/Release/net6.0/win-x64' >> $GITHUB_OUTPUT
      shell: bash
    - name: Run the tests
      run: ${{ steps.dotnet-publish.outputs.executable-path }}/Realm.SourceGenerator.Tests --result=TestResults.SourceGeneration.xml
    - name: Publish Unit Test Results
      uses: LaPeste/test-reporter@510caf50a955b1003bec48a6494be4d6537f3a0b
      if: always()
      with:
        name: Results Source Generation
        path: TestResults.SourceGeneration.xml
        reporter: java-junit
        list-suites: failed
        list-tests: failed
        path-replace-backslashes: true
        fail-on-error: false
