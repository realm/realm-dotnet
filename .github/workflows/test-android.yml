name: test-android
"on":
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      clusterName:
        required: false
        type: string
      realmUrl:
        required: false
        type: string
      atlasUrl:
        required: false
        type: string
    secrets:
      AtlasProjectId:
        required: false
      AtlasPublicKey:
        required: false
      AtlasPrivateKey:
        required: false
      AWS_DEVICEFARM_ACCESS_KEY_ID:
        required: true
      AWS_DEVICEFARM_SECRET_ACCESS_KEY:
        required: true
      DEVICEFARM_PROJECT_ARN:
        required: true
      DEVICEFARM_ANDROID_POOL_ARN:
        required: true
env:
  REALM_DISABLE_ANALYTICS: true
  DOTNET_NOLOGO: true
jobs:
  test-xamarin:
    runs-on: windows-latest
    name: Xamarin.Android
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: false
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Register csc problem matcher
      run: echo "::add-matcher::.github/problem-matchers/csc.json"
    - name: Register msvc problem matcher
      run: echo "::add-matcher::.github/problem-matchers/msvc.json"
    - name: Fetch Realm.PlatformHelpers
      uses: actions/download-artifact@v3
      with:
        name: Realm.PlatformHelpers.${{ inputs.version }}
        path: ${{ github.workspace }}/Realm/packages/
    - name: Fetch Realm
      uses: actions/download-artifact@v3
      with:
        name: Realm.${{ inputs.version }}
        path: ${{ github.workspace }}/Realm/packages/
    - uses: realm/ci-actions/mdb-realm/deploy@fa20eb972b9f018654fdb4e2c7afb52b0532f907
      name: Deploy Cluster (alternative)
      if: ${{ inputs.realmUrl }}
      with:
        projectId: ${{ secrets.AtlasProjectId}}
        realmUrl: ${{ inputs.realmUrl }}
        atlasUrl: ${{ inputs.atlasUrl}}
        apiKey: ${{ secrets.AtlasPublicKey}}
        privateApiKey: ${{ secrets.AtlasPrivateKey }}
        clusterName: ${{ inputs.clusterName }}-android
        clusterSize: M10
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@0b44c6745b7e81956596964100aadb92d667c497
      if: ${{ runner.os == 'Windows' }}
    - name: Build Tests/Tests.Android
      run: msbuild Tests/Tests.Android -t:SignAndroidPackage -p:Configuration=Release -restore -p:RestoreConfigFile=Tests/Test.NuGet.Config -p:UseRealmNupkgsWithVersion=${{ inputs.version }} -p:AndroidUseSharedRuntime=False -p:EmbedAssembliesIntoApk=True
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_DEVICEFARM_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_DEVICEFARM_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    - name: Run the tests
      uses: ./.github/actions/run-android-device-farm-test
      id: run_tests
      with:
        apk-path: ${{ github.workspace }}/Tests/Tests.Android/bin/Release/io.realm.xamarintests-Signed.apk
        app-id: io.realm.xamarintests
        project-arn: ${{ secrets.DEVICEFARM_PROJECT_ARN }}
        device-pool-arn: ${{ secrets.DEVICEFARM_ANDROID_POOL_ARN }}
        arguments: ' --baasurl=${{ inputs.realmUrl }} --baascluster=${{ inputs.clusterName }}-android --baasapikey=${{ secrets.AtlasPublicKey}} --baasprivateapikey=${{ secrets.AtlasPrivateKey}} --baasprojectid=${{ secrets.AtlasProjectId }} --baasdifferentiator=android'
    - name: Publish Unit Test Results
      uses: LaPeste/test-reporter@510caf50a955b1003bec48a6494be4d6537f3a0b
      if: always()
      with:
        name: Results Xamarin.Android
        path: ${{ steps.run_tests.outputs.test-results-path }}
        reporter: java-junit
        list-suites: failed
        list-tests: failed
        path-replace-backslashes: true
        fail-on-error: false
  test-maui:
    runs-on: windows-latest
    name: Maui.Android
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: false
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Register csc problem matcher
      run: echo "::add-matcher::.github/problem-matchers/csc.json"
    - name: Register msvc problem matcher
      run: echo "::add-matcher::.github/problem-matchers/msvc.json"
    - name: Fetch Realm.PlatformHelpers
      uses: actions/download-artifact@v3
      with:
        name: Realm.PlatformHelpers.${{ inputs.version }}
        path: ${{ github.workspace }}/Realm/packages/
    - name: Fetch Realm
      uses: actions/download-artifact@v3
      with:
        name: Realm.${{ inputs.version }}
        path: ${{ github.workspace }}/Realm/packages/
    - name: Setup workloads
      run: dotnet workload install maui
    - name: Build the tests
      run: dotnet publish Tests/Tests.Maui -c Release -f net6.0-android -p:RestoreConfigFile=Tests/Test.NuGet.Config -p:UseRealmNupkgsWithVersion=${{ inputs.version }}
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_DEVICEFARM_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_DEVICEFARM_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    - name: Run the tests
      uses: ./.github/actions/run-android-device-farm-test
      id: run_tests
      with:
        apk-path: ${{ github.workspace }}/Tests/Tests.Maui/bin/Release/net6.0-android/publish/io.realm.mauitests-Signed.apk
        app-id: io.realm.mauitests
        project-arn: ${{ secrets.DEVICEFARM_PROJECT_ARN }}
        device-pool-arn: ${{ secrets.DEVICEFARM_ANDROID_POOL_ARN }}
    - name: Publish Unit Test Results
      uses: LaPeste/test-reporter@510caf50a955b1003bec48a6494be4d6537f3a0b
      if: always()
      with:
        name: Results Maui.Android
        path: ${{ steps.run_tests.outputs.test-results-path }}
        reporter: java-junit
        list-suites: failed
        list-tests: failed
        path-replace-backslashes: true
        fail-on-error: false
