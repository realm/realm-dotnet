name: test-console
"on":
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      clusterName:
        required: false
        type: string
      framework:
        required: true
        type: string
    secrets:
      AtlasProjectId:
        required: false
      BaseUrl:
        required: false
      AtlasPublicKey:
        required: false
      AtlasPrivateKey:
        required: false
env:
  REALM_DISABLE_ANALYTICS: true
  DOTNET_NOLOGO: true
jobs:
  test-console:
    runs-on: ${{ matrix.os.runner }}
    name: ${{ matrix.framework }}, ${{ matrix.os.runtime }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        os:
        - runner: windows-latest
          runtime: win-x64
        - runner: ubuntu-latest
          runtime: linux-x64
        - runner: macos-latest
          runtime: osx-x64
        - runner: win81
          runtime: win-x64
        framework: ${{ fromJson(inputs.framework) }}
        include:
        - framework: net461
          os:
            runner: windows-latest
            runtime: win-x64
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: false
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Register csc problem matcher
      run: echo "::add-matcher::.github/problem-matchers/csc.json"
    - name: Register msvc problem matcher
      run: echo "::add-matcher::.github/problem-matchers/msvc.json"
    - name: Cleanup Workspace
      run: git clean -fdx
    - name: Fetch Realm
      uses: actions/download-artifact@v2
      with:
        name: Realm.${{ inputs.version }}
        path: ${{ github.workspace }}/Realm/packages/
    - name: Fetch Realm.Fody
      uses: actions/download-artifact@v2
      with:
        name: Realm.Fody.${{ inputs.version }}
        path: ${{ github.workspace }}/Realm/packages/
    - uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('Tests/Tests.Console/*.csproj') }}
    - name: Publish Tests/Tests.Console
      run: dotnet publish Tests/Tests.Console -c Release -f ${{ matrix.framework }} -r ${{ matrix.os.runtime }} -p:RestoreConfigFile=Tests/Test.NuGet.Config -p:UseRealmNupkgsWithVersion=${{ inputs.version }} --no-self-contained
    - name: Output executable path
      id: dotnet-publish
      run: echo '::set-output name=executable-path::./Tests/Tests.Console/bin/Release/${{ matrix.framework }}/${{ matrix.os.runtime }}'
    - name: Run the tests
      run: ${{ steps.dotnet-publish.outputs.executable-path }}/Tests.Console --result=TestResults.xml --labels=After --baasurl=${{ secrets.BaseUrl }} --baascluster=${{ inputs.clusterName }} --baasapikey=${{ secrets.AtlasPublicKey}} --baasprivateapikey=${{ secrets.AtlasPrivateKey}} --baasprojectid=${{ secrets.AtlasProjectId }} --baasdifferentiator=net-core-${{ matrix.runner }}-${{ matrix.runtime }}
    - name: Publish Unit Test Results
      uses: LaPeste/test-reporter@b8a650f4490e7472b930f56bbb92c7b42dc5db15
      if: always()
      with:
        name: Results .NET (${{ matrix.os.runner }}, ${{ matrix.framework }})
        path: TestResults.xml
        reporter: java-junit
        list-suites: failed
        list-tests: failed
        path-replace-backslashes: true
        fail-on-error: false
