import "../GithubAction/GithubAction.pkl" as gha
import "Common.pkl"

const function checkout(): gha.Step = new {
  name = "Checkout Code"
  uses = "actions/checkout@v4"
  with {
    ["submodules"] = "recursive"
    ["ref"] = "${{ github.event.pull_request.head.sha }}"
  }
}

const function uploadArtifacts(artifactName: String, relPath: String): gha.Step = new {
  name = "Store artifacts for \(artifactName)"
  uses = "actions/upload-artifact@v4"
  with {
    ["name"] = artifactName
    ["path"] = "${{ github.workspace }}/\(relPath)"
    ["retention-days"] = "${{ github.event_name != 'pull_request' && 30 || 1 }}"
    ["if-no-files-found"] = "error"
  }
}

const function setupXcode(): gha.Step = new {
  name = "Setup Xcode"
  uses = "maxim-lobanov/setup-xcode@60606e260d2fc5762a71e64e74b2174e8ea3c8bd"
  with {
    ["xcode-version"] = "14"
  }
}

const function setupMSVC(edition: String): gha.Step = new {
  name = "Setup MSVC"
  run = "Start-Process \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\vs_installer.exe\" -ArgumentList 'modify --installPath \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\" --quiet --add Microsoft.VisualStudio.Component.VC.14.35.17.5.\(edition)' -Wait -PassThru"
  shell = "pwsh"
}

const function setupDotnet(): gha.Step = new {
  uses = "actions/setup-dotnet@607fce577a46308457984d59e4954e075820f10a"
  with {
    ["dotnet-version"] = "6.0.x"
  }
}

const function registerProblemMatchers(): gha.Step = new {
  name = "Register csc problem matcher"
  run = """
    echo "::add-matcher::.github/problem-matchers/csc.json"
    echo "::add-matcher::.github/problem-matchers/msvc.json"
    """
}

const function fetchPackages(packageJob: String, _packages: List<String>?): List<gha.Step> = (_packages ?? Common.packages).map((package) -> new gha.Step {
  name = "Fetch \(package)"
  uses = "actions/download-artifact@v3"
  with {
    ["name"] = "\(package).${{ needs.\(packageJob).outputs.package_version }}"
    ["path"] = "${{ github.workspace }}/Realm/packages/"
  }
})

const function addMSBuildToPath(): gha.Step = new {
  name = "Add msbuild to PATH"
  uses = "microsoft/setup-msbuild@0b44c6745b7e81956596964100aadb92d667c497"
  `if` = "${{ runner.os == 'Windows' }}"
}

const function msbuild(project: String, properties: Mapping<String, String>): gha.Step = new {
  name = "Build \(project)"
  run = "msbuild \(project) -p:Configuration=\(Common.configuration) -restore \(properties.toMap().entries.map((kvp) -> "-p:\(kvp.key)=\(kvp.value)").join(" "))"
}
