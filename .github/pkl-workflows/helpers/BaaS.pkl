module baas

import "../GithubAction/GithubAction.pkl" as gha
import "Common.pkl"
import "Steps.pkl"

function deploy(differentiators: Listing<Common.SyncDifferentiator>): gha.MatrixJob = new {
  name = "Deploy BaaS"
  `runs-on` = new gha.UbuntuLatest{}
  strategy {
    matrix {
      ["differentiator"] = differentiators
    }
  }
  `if` = Common.ifNotCanceledCondition
  steps {
    ...Steps.checkout(false)
    Steps.setupDotnet("8.0.x")
    ...deployStep("${{ matrix.differentiator }}", true)
  }
}

function deployStep(differentiator: Common.SyncDifferentiator?, shouldDeploy: Boolean): List<gha.Step> = if (shouldDeploy && differentiator != null) List(new gha.Step {
  name = "Deploy Apps"
  run = "dotnet run deploy-apps --baasaas-api-key=${{ secrets.BAASAAS_API_KEY }} --baas-differentiator=\(differentiator)-${{ github.run_id }}-${{ github.run_attempt }}"
  `working-directory` = "Tools/DeployApps"
}) else List()

function cleanup(differentiators: Listing<Common.SyncDifferentiator>): gha.MatrixJob = new {
  name = "Cleanup BaaS"
  `runs-on` = new gha.UbuntuLatest{}
  strategy {
    matrix {
      ["differentiator"] = differentiators
    }
  }
  `if` = Common.ifNotCanceledCondition
  steps {
    ...Steps.checkout(false)
    Steps.setupDotnet("8.0.x")
    new {
      name = "Terminate Baas"
      run = "dotnet run terminate-baas --baasaas-api-key=${{ secrets.BAASAAS_API_KEY }} --baas-differentiator=${{ matrix.differentiator }}-${{ github.run_id }}-${{ github.run_attempt }}"
      `working-directory` = "Tools/DeployApps"
    }
  }
}