module common

const configuration: String = "Release"

const linuxArchs: List<String> = List("x86_64", "armhf", "aarch64")
const applePlatforms: List<String> = List("iOS", "tvOS")
const androidABIs: List<String> = List("armeabi-v7a", "arm64-v8a", "x86", "x86_64")
const windowsArchs: List<String> = List("Win32", "x64", "ARM64")
const uwpArchs: List<String> = List("Win32", "x64", "ARM", "ARM64")

const appleTargets: List<String> = List("Device", "Simulator")

const job_Packages: String = "build-packages"
const job_Baas: String = "deploy-baas"
const job_Unity: String = "build-unity"

const mainBranch: String = "main"

typealias NetFramework = "net6.0" | "net8.0" | String(startsWith("${{ matrix")) | String(startsWith("net8"))
typealias NetRuntime = "win-x64" | "linux-x64" | "osx-x64" | "osx-arm64" | String(startsWith("${{ matrix"))
typealias SyncDifferentiator = "ios-maui" | "android-maui" | "tvos" | "macos-maui" | "code-coverage" | "uwp" | "net-framework" | String(startsWith("${{ matrix"))

const wrapperBinaryNames: List<String> =
  List("macos", "catalyst")
  + linuxArchs.map((arch) -> "linux-\(arch)")
  + androidABIs.map((abi) -> "android-\(abi)")
  + windowsArchs.map((arch) -> "windows-\(arch)")
  + uwpArchs.map((arch) -> "windows-uwp-\(arch)")
  + applePlatformTargets((platform, target) -> "\(platform)-\(target)")

const defaultEnv: Mapping<String, String | Boolean> = new {
  ["REALM_DISABLE_ANALYTICS"] = true
  ["DOTNET_NOLOGO"] = true
}

const function applePlatformTargets(_transform: (String, String) -> String): List<String> = applePlatforms.map((platform) -> appleTargets.map((target) -> _transform.apply(platform, target))).flatten()

const ifNotCanceledCondition = "always() && !cancelled() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')"

const nugetPackages: List<String> = List("Realm", "Realm.PlatformHelpers")
const packages: List<String> = nugetPackages + List("Realm.UnityUtils", "Realm.UnityWeaver")

const testTimeout = 60
