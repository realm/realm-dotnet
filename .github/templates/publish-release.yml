#@ load("@ytt:template", "template")
#@ load("common.lib.yml", "checkoutCode", "actionSetupNode", "actionGithubRelease", "actionReleaseToSlack", "actionFindPR", "actionMergePR", "actionCreatePR", "mainBranch", "downloadAllArtifacts", "readVersionFromPackage", "configureAWSCredentials")

#@ def uploadToNuget(packageName):
  - name: #@ "NuGet Publish " + packageName + ".${{ steps.get-version.outputs.version }}"
    run: #@ "dotnet nuget push ${{ github.workspace }}/Realm/packages/" + packageName + ".${{ steps.get-version.outputs.version }}/" + packageName + ".${{ steps.get-version.outputs.version }}.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json"
#@ end

#@ def uploadToNpm(packageName):
  - uses: #@ actionSetupNode
    with:
      node-version: '12.x'
      registry-url: 'https://registry.npmjs.org'
  - name: #@ "Npm Publish " + packageName + "-${{ steps.get-version.outputs.version }}"
    run: #@ "npm publish ${{ github.workspace }}/Realm/packages/" + packageName + "-${{ steps.get-version.outputs.version }}.tgz/" + packageName + "-${{ steps.get-version.outputs.version }}.tgz"
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#@ end

#@ def publishGithubRelease():
  - name: Publish Github Release
    uses: #@ actionGithubRelease
    with:
      artifacts: Realm/packages/io.realm.unity-${{ steps.get-version.outputs.version }}.tgz/io.realm.unity-${{ steps.get-version.outputs.version }}.tgz
      bodyFile: Realm/packages/ExtractedChangelog/ExtractedChangelog.md
      name: ${{ steps.get-version.outputs.version }}
      commit: #@ mainBranch
      tag: ${{ steps.get-version.outputs.version }}
      token: ${{ secrets.GITHUB_TOKEN }}
      draft: false
#@ end

#@ def mergePR(number):
  - name: Merge Pull Request
    uses: #@ actionMergePR
    with:
      github-token: ${{ secrets.GITHUB_TOKEN }}
      number: #@ number
      method: squash
#@ end

#@ def mergeReleasePR():
  - name: Find Release PR
    uses: #@ actionFindPR
    id: find-pull-request
    with:
      branch: ${{ github.ref }}
  - #@ template.replace(mergePR("${{ steps.find-pull-request.outputs.number }}"))
#@ end

#@ def uploadDocsToS3():
  - #@ template.replace(configureAWSCredentials("DOCS_S3_ACCESS_KEY", "DOCS_S3_SECRET_KEY", "us-east-2"))
  - name: Upload docs
    run: |
      Expand-Archive -Path Realm/packages/Docs.zip/Docs.zip -DestinationPath Realm/packages
      $versions = "${{ steps.get-version.outputs.version }}", "latest"
      Foreach ($ver in $versions)
      {
        aws s3 sync --acl public-read "${{ github.workspace }}\Realm\packages\_site" s3://realm-sdks/docs/realm-sdks/dotnet/$ver/
      }
#@ end

#@ def updateChangelogForvNext():
  - name: Update Changelog
    run: |
      echo "## vNext (TBD)

      ### Enhancements
      * None

      ### Fixed
      * None

      ### Compatibility
      * Realm Studio: 11.0.0 or later.

      ### Internal
      * Using Core x.y.z.
      " | cat - CHANGELOG.md >> temp
      mv temp CHANGELOG.md
    shell: bash
  - name: Create vNext PR
    id: vnext-pr
    uses: #@ actionCreatePR
    with:
      branch: prepare-vnext
      title: Prepare for vNext
      body: Update Changelog for vNext
      delete-branch: true
      base: #@ mainBranch
      commit-message: Prepare for vNext
  - #@ template.replace(mergePR("${{ steps.vnext-pr.outputs.pull-request-number }}"))
#@ end
---
name: Publish Release
"on":
  workflow_dispatch

jobs:
  main:
    runs-on: windows-latest
    environment: Production
    steps:
    - #@ template.replace(checkoutCode(False, False))
    - #@ template.replace(downloadAllArtifacts())
    - #@ template.replace(readVersionFromPackage())
    - #@ template.replace(uploadDocsToS3())
    - #@ template.replace(uploadToNuget("Realm.SourceGenerator"))
    - #@ template.replace(uploadToNuget("Realm.Fody"))
    - #@ template.replace(uploadToNuget("Realm"))
    - #@ template.replace(uploadToNpm("io.realm.unity"))
    - #@ template.replace(mergeReleasePR())
    - #@ template.replace(publishGithubRelease())
    - #@ template.replace(updateChangelogForvNext())
    - name: 'Post to #realm-releases'
      uses: #@ actionReleaseToSlack
      with:
        changelog: Realm/packages/ExtractedChangelog/ExtractedChangelog.md
        sdk: .NET
        webhook-url: ${{ secrets.SLACK_RELEASE_WEBHOOK }}
        version: ${{ steps.get-version.outputs.version }}

