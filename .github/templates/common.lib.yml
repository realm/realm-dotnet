#@ configuration = "Release"
#@ nugetPackages = [ 'Realm.Fody', 'Realm', 'Realm.UnityUtils', 'Realm.UnityWeaver' ]
#@ actionCheckout = "actions/checkout@v2"
#@ actionCache = "actions/cache@v2"
#@ actionUploadArtifact = "actions/upload-artifact@v2"
#@ actionDownloadArtifact = "actions/download-artifact@v2"
#@ actionSetupMSBuild = "microsoft/setup-msbuild@v1.0.2"
#@ actionSetupDotnet = "actions/setup-dotnet@v1"
#@ actionRuniOSSimulator = "realm/ci-actions/run-ios-simulator@v1"
#@ actionCodeQLInit = "github/codeql-action/init@v1"
#@ actionCodeQLAnalyze = "github/codeql-action/analyze@v1"
#@ actionSetupNode = "actions/setup-node@v2"
#@ actionAWSConfigureCredentials = "aws-actions/configure-aws-credentials@v1"
#@ actionReleaseToSlack = "realm/ci-actions/release-to-slack@v3"
#@ actionDeployBaaS = "realm/ci-actions/mdb-realm/deployApps@fe278fedebba5508c052e970fffa099de1285dff"
#@ actionCleanupBaaS = "realm/ci-actions/mdb-realm/cleanup@fe278fedebba5508c052e970fffa099de1285dff"

#@ actionDockerLayerCaching = "satackey/action-docker-layer-caching@cc3f3828e75cbb45f0cf5139b95329c88480aa97" #! 0.0.11
#@ actionDockerBuild = "docker/build-push-action@375f72aff65b645c51f122f04a776df8416b222b" #! 2.7.0
#@ actionDockerRun = "addnab/docker-run-action@3e77f186b7a929ef010f183a9e24c0f9955ea609" #! v3
#@ actionCoveralls = "coverallsapp/github-action@9ba913c152ae4be1327bfb9085dc806cedb44057" #! v1.1.3
#@ actionDeleteArtifact = "geekyeggo/delete-artifact@56e063d7d8bf9972ac54aca4454d3a6675917f44" #! v1
#@ actionGithubRelease = "ncipollo/release-action@10c84d509b28aae3903113151bfd832314964f2e" #! v1.8.8
#@ actionDownloadAllArtifacts = "dawidd6/action-download-artifact@d0f291cf39bd21965ea9c4c6e210fc355c3844ed" #! v2.14.1
#@ actionCreatePR = "peter-evans/create-pull-request@7380612b49221684fefa025244f2ef4008ae50ad" #! 3.10.1
#@ actionFindPR = "juliangruber/find-pull-request-action@f9f7484f8237cf8485e5ab826e542ba5dd9e9c6e" #! 1.5.0
#@ actionMergePR = "juliangruber/merge-pull-request-action@8a13f2645ad8b6ada32f829b2fae9c0955a5265d" #! 1.0.6

#@ mainBranch = "master"

#@ def checkoutCode(submodules=False, registerProblemMatchers=True):
  - name: Checkout code
    uses: #@ actionCheckout
    with:
      submodules: #@ submodules
      ref: ${{ github.event.pull_request.head.sha }}
#@ if registerProblemMatchers:
  - name: Register csc problem matcher
    run: echo "::add-matcher::.github/problem-matchers/csc.json"
  - name: Register msvc problem matcher
    run: echo "::add-matcher::.github/problem-matchers/msvc.json"
#@ end
#@ end

#@ def setupVcpkg(ifCondition = "true"):
  - name: Check Vcpkg cache
    id: check-vcpkg-cache
    uses: #@ actionCache
    with:
      path: 'C:\src'
      key: vcpkg
    if: #@ ifCondition
  - name: Setup Vcpkg
    run: |
      Invoke-WebRequest -Uri https://static.realm.io/downloads/vcpkg.zip -OutFile C:\vcpkg.zip
      Expand-Archive -Path C:\vcpkg.zip -DestinationPath C:\
    shell: powershell
    if: #@ ifCondition + " && steps.check-vcpkg-cache.outputs.cache-hit != 'true'"
#@ end