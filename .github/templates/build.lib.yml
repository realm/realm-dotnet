#@ load("@ytt:template", "template")
#@ load("common.lib.yml", "checkoutCode", "actionSetupDotnet", "setupNugetCache")

#@ isRelease = "contains(github.head_ref, 'release')"

#@ ignoreSkippedJobsCondition = "always() && !cancelled() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')"

#@ secret_BaseUrl = "${{ (" + isRelease + " && secrets.REALM_QA_BASE_URL) || secrets.REALM_BASE_URL }}"
#@ secret_AtlasBaseUrl = "${{ (" + isRelease + " && secrets.ATLAS_QA_BASE_URL) || secrets.ATLAS_BASE_URL }}"
#@ secret_AtlasPublicKey = "${{ (" + isRelease + " && secrets.ATLAS_QA_PUBLIC_API_KEY) || secrets.ATLAS_PUBLIC_API_KEY }}"
#@ secret_AtlasPrivateKey = "${{ (" + isRelease + " && secrets.ATLAS_QA_PRIVATE_API_KEY) || secrets.ATLAS_PRIVATE_API_KEY }}"
#@ secret_AtlasProjectId = "${{ (" + isRelease + " && secrets.ATLAS_QA_PROJECT_ID) || secrets.ATLAS_PROJECT_ID }}"

#@ def getJobName(prefix, name):
#@ return prefix + "-" + name.replace(".", "").replace(" ", "-").lower()
#@ end

#@ def deployBaas(targets = []):
#@ differentiators = []
#@ for target in targets:
#@   differentiators.append(getJobName("test", target))
#@ end
deploy-cluster:
  uses: ./.github/workflows/deploy-baas.yml
  secrets:
    AtlasProjectId: #@ secret_AtlasProjectId
    BaseUrl: #@ secret_BaseUrl
    AtlasBaseUrl: #@ secret_AtlasBaseUrl
    AtlasPublicKey: #@ secret_AtlasPublicKey
    AtlasPrivateKey: #@ secret_AtlasPrivateKey
deploy-apps:
  name: Deploy Apps
  needs: deploy-cluster
  runs-on: ubuntu-latest
  strategy:
    matrix:
      differentiator: #@ differentiators
  if: #@ ignoreSkippedJobsCondition
  steps:
  - #@ template.replace(checkoutCode())
  - uses: #@ actionSetupDotnet
    with:
      dotnet-version: '6.0.x'
  - #@ setupNugetCache([ "Tools/DeployApps" ])
  - name: Deploy Apps
    run: #@ "dotnet run Tools/DeployApps --baasurl=" + secret_BaseUrl + " --baascluster=${{ needs.deploy-cluster.outputs.clusterName }} --baasapikey=" + secret_AtlasPublicKey + " --baasprivateapikey=" + secret_AtlasPrivateKey + " --baasprojectid=" + secret_AtlasProjectId + " --baasdifferentiator=${{ matrix.differentiator }}"
#@ end

#@ def cleanupBaas(dependencies = []):
#@ needs = []
#@ for dependency in dependencies:
#@   needs.append(getJobName("test", dependency))
#@ end
cleanup-cluster:
  uses: ./.github/workflows/cleanup-baas.yml
  name: Cleanup
  needs: #@ needs
  secrets:
    AtlasProjectId: #@ secret_AtlasProjectId
    BaseUrl: #@ secret_BaseUrl
    AtlasBaseUrl: #@ secret_AtlasBaseUrl
    AtlasPublicKey: #@ secret_AtlasPublicKey
    AtlasPrivateKey: #@ secret_AtlasPrivateKey
#@ end

#@ def runTests(name, runSyncTests = True, additionalSecrets = []):
#@yaml/text-templated-strings
(@= getJobName("test", name) @):
  uses: #@ "./.github/workflows/" + getJobName("test", name) + ".yml"
  name: Test
  if: #@ ignoreSkippedJobsCondition
  needs:
    - build-packages
    #@ if runSyncTests:
    - deploy-cluster
    - deploy-apps
    #@ end
  with:
    version: ${{ needs.build-packages.outputs.package_version }}
    clusterName: #@ "${{ needs.deploy-cluster.outputs.clusterName }}"
  secrets:
    #@ if runSyncTests:
    AtlasProjectId: #@ secret_AtlasProjectId
    BaseUrl: #@ secret_BaseUrl
    AtlasPublicKey: #@ secret_AtlasPublicKey
    AtlasPrivateKey: #@ secret_AtlasPrivateKey
    #@ end
    #@ for secret in additionalSecrets:
    #@yaml/text-templated-strings
    (@= secret @): #@ "${{ secrets." + secret + " }}"
    #@ end
#@ end

#@ def runNetCoreTests(frameworks):
test-net-core:
  if: #@ ignoreSkippedJobsCondition
  name: Test
  needs:
    - build-packages
  uses: "./.github/workflows/test-net-core.yml"
  with:
    version: ${{ needs.build-packages.outputs.package_version }}
    framework: #@ frameworks
#@ end

#@ def buildUnity():
build-unity:
  uses: ./.github/workflows/build-unity.yml
  name: Package
  with:
    version: ${{ needs.build-packages.outputs.package_version }}
  needs:
  - build-packages
  if: #@ ignoreSkippedJobsCondition
#@ end
