#@ load("@ytt:template", "template")
#@ load("common.lib.yml", "checkoutCode")

#@ isRelease = "contains(github.head_ref, 'release')"

#@ ignoreSkippedJobsCondition = "always() && !cancelled() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')"

#! These secrets will run against cloud-dev on PRs or cloud-qa on merges to main. They're commented out
#! because it appears cloud-dev is quite unstable at this point (Aug 2022).
#! realm_BaseUrl = "${{ (" + isRelease + " && secrets.REALM_QA_BASE_URL) || secrets.REALM_BASE_URL }}"
#! atlas_BaseUrl = "${{ (" + isRelease + " && secrets.ATLAS_QA_BASE_URL) || secrets.ATLAS_BASE_URL }}"
#! secret_AtlasPublicKey = "${{ (" + isRelease + " && secrets.ATLAS_QA_PUBLIC_API_KEY) || secrets.ATLAS_PUBLIC_API_KEY }}"
#! secret_AtlasPrivateKey = "${{ (" + isRelease + " && secrets.ATLAS_QA_PRIVATE_API_KEY) || secrets.ATLAS_PRIVATE_API_KEY }}"
#! secret_AtlasProjectId = "${{ (" + isRelease + " && secrets.ATLAS_QA_PROJECT_ID) || secrets.ATLAS_PROJECT_ID }}"

#@ realm_BaseUrl = "https://realm-qa.mongodb.com"
#@ atlas_BaseUrl = "https://cloud-qa.mongodb.com"
#@ secret_AtlasPublicKey = "${{ secrets.ATLAS_QA_PUBLIC_API_KEY }}"
#@ secret_AtlasPrivateKey = "${{ secrets.ATLAS_QA_PRIVATE_API_KEY }}"
#@ secret_AtlasProjectId = "${{ secrets.ATLAS_QA_PROJECT_ID }}"

#@ def getJobName(prefix, name):
#@ if (prefix != ""):
#@   prefix = prefix + "-"
#@ end
#@ return prefix + name.replace(".", "").replace(" ", "-").lower()
#@ end

#@ def deployBaas(targets = []):
#@ differentiators = []
#@ for target in targets:
#@   differentiators.append('"' + getJobName("", target) + '"')
#@ end
deploy-cluster:
  uses: ./.github/workflows/deploy-baas.yml
  with:
    differentiators: #@ '[' + ", ".join(differentiators) + ']'
    BaseUrl: #@ realm_BaseUrl
    AtlasBaseUrl: #@ atlas_BaseUrl
  secrets:
    AtlasProjectId: #@ secret_AtlasProjectId
    AtlasPublicKey: #@ secret_AtlasPublicKey
    AtlasPrivateKey: #@ secret_AtlasPrivateKey
#@ end

#@ def cleanupBaas(dependencies = []):
#@ needs = []
#@ for dependency in dependencies:
#@   needs.append(getJobName("test", dependency))
#@ end
cleanup-cluster:
  uses: ./.github/workflows/cleanup-baas.yml
  if: always()
  name: Cleanup
  needs: #@ needs
  with:
    BaseUrl: #@ realm_BaseUrl
    AtlasBaseUrl: #@ atlas_BaseUrl
  secrets:
    AtlasProjectId: #@ secret_AtlasProjectId
    AtlasPublicKey: #@ secret_AtlasPublicKey
    AtlasPrivateKey: #@ secret_AtlasPrivateKey
#@ end

#@ def runTests(name, runSyncTests = True, additionalSecrets = []):
#@yaml/text-templated-strings
(@= getJobName("test", name) @):
  uses: #@ "./.github/workflows/" + getJobName("test", name) + ".yml"
  name: Test
  if: #@ ignoreSkippedJobsCondition
  needs:
    - build-packages
    #@ if runSyncTests:
    - deploy-cluster
    #@ end
  with:
    version: ${{ needs.build-packages.outputs.package_version }}
    #@ if runSyncTests:
    clusterName: ${{ needs.deploy-cluster.outputs.clusterName }}
    realmUrl: #@ realm_BaseUrl
    atlasUrl: #@ atlas_BaseUrl
    #@ end
  secrets:
    #@ if runSyncTests:
    AtlasProjectId: #@ secret_AtlasProjectId
    AtlasPublicKey: #@ secret_AtlasPublicKey
    AtlasPrivateKey: #@ secret_AtlasPrivateKey
    #@ end
    #@ for secret in additionalSecrets:
    #@yaml/text-templated-strings
    (@= secret @): #@ "${{ secrets." + secret + " }}"
    #@ end
#@ end

#@ def runNetCoreTests(frameworks):
test-net-core:
  if: #@ ignoreSkippedJobsCondition
  name: Test
  needs:
    - build-packages
  uses: "./.github/workflows/test-net-core.yml"
  with:
    version: ${{ needs.build-packages.outputs.package_version }}
    framework: #@ frameworks
#@ end

#@ def buildUnity():
build-unity:
  uses: ./.github/workflows/build-unity.yml
  name: Package
  with:
    version: ${{ needs.build-packages.outputs.package_version }}
  needs:
  - build-packages
  if: #@ ignoreSkippedJobsCondition
#@ end

#@ def testUnity(settings, platforms):
test-unity:
  uses: ./.github/workflows/test-unity.yml
  name: Test
  with:
    version: ${{ needs.build-packages.outputs.package_version }}
    settings: #@ settings
    platform: #@ platforms
  needs:
  - build-packages
  - build-unity
  if: #@ ignoreSkippedJobsCondition
#@ end