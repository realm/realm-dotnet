#@ load("@ytt:template", "template")
#@ load("common.lib.yml", "checkoutCode")

#@ isRelease = "contains(github.head_ref, 'release')"

#@ ignoreSkippedJobsCondition = "always() && !cancelled() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')"

#@ secret_BaaSaasApiKey = "${{ secrets.BAASAAS_API_KEY }}"

#@ def getJobName(prefix, name):
#@ if (prefix != ""):
#@   prefix = prefix + "-"
#@ end
#@ return prefix + name.replace(".", "").replace(" ", "-").lower()
#@ end

#@ def deployBaas(targets = []):
#@ differentiators = []
#@ for target in targets:
#@   differentiators.append('"' + getJobName("", target) + '"')
#@ end
deploy-baas:
  uses: ./.github/workflows/deploy-baas.yml
  with:
    differentiators: #@ '[' + ", ".join(differentiators) + ']'
  secrets:
    BaaSaasApiKey: #@ secret_BaaSaasApiKey
#@ end

#! We need to have two input arrays because there is not a 1-to-1 correspondence between dependencies
#! and targets, for example for macOS.
#@ def cleanupBaas(dependencies = [], targets = []):
#@ needs = ["deploy-baas"]
#@ differentiators = []
#@ for dependency in dependencies:
#@   needs.append(getJobName("test", dependency))
#@ end
#@ for target in targets:
#@   differentiators.append('"' + getJobName("", target) + '"')
#@ end
cleanup-baas:
  uses: ./.github/workflows/cleanup-baas.yml
  if: always()
  name: Cleanup
  needs: #@ needs
  with:
    differentiators: #@ '[' + ", ".join(differentiators) + ']'
  secrets:
    BaaSaasApiKey: #@ secret_BaaSaasApiKey
#@ end

#@ def runTests(name, runSyncTests = True, additionalSecrets = []):
#@yaml/text-templated-strings
(@= getJobName("test", name) @):
  uses: #@ "./.github/workflows/" + getJobName("test", name) + ".yml"
  name: Test
  if: #@ ignoreSkippedJobsCondition
  needs:
    - build-packages
    #@ if runSyncTests:
    - deploy-baas
    #@ end
  with:
    version: ${{ needs.build-packages.outputs.package_version }}
  secrets:
    #@ if runSyncTests:
    BaaSaasApiKey: #@ secret_BaaSaasApiKey
    #@ end
    #@ for secret in additionalSecrets:
    #@yaml/text-templated-strings
    (@= secret @): #@ "${{ secrets." + secret + " }}"
    #@ end
#@ end

#@ def runNetCoreTests(frameworks):
test-net-core:
  if: #@ ignoreSkippedJobsCondition
  name: Test
  needs:
    - build-packages
  uses: "./.github/workflows/test-net-core.yml"
  with:
    version: ${{ needs.build-packages.outputs.package_version }}
    framework: #@ frameworks
#@ end

#@ def runWovenClassesTests():
test-weaved-classes:
  if: #@ ignoreSkippedJobsCondition
  name: Test
  needs:
    - build-packages
  uses: "./.github/workflows/test-woven-classes.yml"
  with:
    version: ${{ needs.build-packages.outputs.package_version }}
#@ end

#@ def runSourceGenerationTests():
test-source-generation:
  if: #@ ignoreSkippedJobsCondition
  name: Test
  uses: "./.github/workflows/test-source-generation.yml"
#@ end

#@ def buildUnity():
build-unity:
  uses: ./.github/workflows/build-unity.yml
  name: Package
  with:
    version: ${{ needs.build-packages.outputs.package_version }}
  needs:
  - build-packages
  if: #@ ignoreSkippedJobsCondition
#@ end

#@ def testUnity(settings, platforms):
test-unity:
  uses: ./.github/workflows/test-unity.yml
  name: Test
  with:
    version: ${{ needs.build-packages.outputs.package_version }}
    settings: #@ settings
    platform: #@ platforms
  needs:
  - build-packages
  - build-unity
  if: #@ ignoreSkippedJobsCondition
#@ end