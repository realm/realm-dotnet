#@ load("@ytt:template", "template")
#@ load("common.lib.yml", "checkoutCode", "configureAWSCredentials")
#@ load("test.lib.yml", "fetchPackageArtifacts", "baasTestArgs", "publishTestsResults", "testDefinition", "buildTests")

---
name: test-xamarinandroid
_: #@ template.replace(testDefinition(additionalSecrets=["AWS_DEVICEFARM_ACCESS_KEY_ID", "AWS_DEVICEFARM_SECRET_ACCESS_KEY", "DEVICEFARM_PROJECT_ARN", "DEVICEFARM_ANDROID_POOL_ARN"]))
jobs:
  run-tests:
    runs-on: windows-latest
    name: Xamarin.Android
    timeout-minutes: 60
    steps:
      - #@ template.replace(checkoutCode())
      - #@ template.replace(fetchPackageArtifacts())
      - #@ template.replace(buildTests("Tests/Tests.Android", target="SignAndroidPackage", AndroidSupportedAbis="armeabi-v7a", AndroidUseSharedRuntime="False", EmbedAssembliesIntoApk="True"))
      - #@ template.replace(configureAWSCredentials("AWS_DEVICEFARM_ACCESS_KEY_ID", "AWS_DEVICEFARM_SECRET_ACCESS_KEY", "us-west-2"))
      - name: Run the tests
        uses: realm/aws-devicefarm/test-application@d94e739490340474f8464f74289a0f48706dd3a3
        id: run_tests
        with:
          project_arn: ${{ secrets.DEVICEFARM_PROJECT_ARN }}
          device_pool_arn: ${{ secrets.DEVICEFARM_ANDROID_POOL_ARN }}
          app_file: ${{ github.workspace }}/Tests/Tests.Android/bin/Release/io.realm.xamarintests-Signed.apk
          app_type: ANDROID_APP
          test_type: APPIUM_PYTHON
          test_package_file: https://github.com/realm/aws-devicefarm-sample-data/releases/download/0.3/sample_env_python3.zip
          test_package_type: APPIUM_PYTHON_TEST_PACKAGE
          test_spec_file: test_spec.yaml
          test_spec_type: APPIUM_PYTHON_TEST_SPEC
          remote_src: true
          #@yaml/text-templated-strings
          test_spec: |
            version: 0.1
            phases:
              install:
                commands:
                  - export PYTHON_VERSION=3
              pre_test:
                commands:
                  - adb -s $DEVICEFARM_DEVICE_UDID shell pm grant io.realm.xamarintests android.permission.READ_EXTERNAL_STORAGE
                  - adb -s $DEVICEFARM_DEVICE_UDID shell pm grant io.realm.xamarintests android.permission.WRITE_EXTERNAL_STORAGE
              test:
                commands:
                  - echo "(@= baasTestArgs @)" > testargs.txt
                  - adb -s $DEVICEFARM_DEVICE_UDID push testargs.txt /storage/emulated/0/RealmTests/testargs.txt
                  - adb -s $DEVICEFARM_DEVICE_UDID shell am instrument -w -r io.realm.xamarintests/.TestRunner
              post_test:
                commands:
                  - adb -s $DEVICEFARM_DEVICE_UDID pull /storage/emulated/0/RealmTests/TestResults.Android.xml $DEVICEFARM_LOG_DIR/TestResults.Android.xml
            artifacts:
              - $DEVICEFARM_LOG_DIR
          file_artifacts: |
            Customer Artifacts.zip
      - run: |
          Expand-Archive 'Customer Artifacts.zip' -DestinationPath artifacts
          Import-Module AWSPowerShell
          $jobs = Get-DFJobList -Arn ${{ steps.run_tests.outputs.arn }}
          $suites = Get-DFSuiteList -Arn $jobs[0].Arn
          $artifacts = Get-DFArtifactList -Arn $suites[1].Arn -Type File | Where-Object { $_.Name -EQ "Logcat" }
          echo "::group::Logcat"
          Invoke-WebRequest -Uri $artifacts[0].Url | Select-Object -Expand RawContent
          echo "::endgroup::"
        name: Fetch test artifacts
      - run: |
          echo "::group::Data"
          echo (ConvertFrom-Json '${{ steps.run_tests.outputs.data }}' | ConvertTo-Json)
          echo "::endgroup::"
        if: always()
        name: Device Farm Raw JSON Output
      - #@ publishTestsResults("artifacts/Host_Machine_Files/$DEVICEFARM_LOG_DIR/TestResults.Android.xml", "Xamarin.Android")