#@ load("@ytt:template", "template")
#@ load("common.lib.yml", "checkoutCode")
#@ load("test.lib.yml", "fetchPackageArtifacts", "baasTestArgs", "publishTestsResults", "testDefinition", "buildTests")

---
name: test-xamarinandroid
_: #@ template.replace(testDefinition())
jobs:
  run-tests:
    runs-on: macos-latest
    name: Xamarin.Android
    timeout-minutes: 45
    steps:
      - #@ template.replace(checkoutCode())
      - #@ template.replace(fetchPackageArtifacts())
      - #@ template.replace(buildTests("Tests/Tests.Android", target="SignAndroidPackage", AndroidSupportedAbis="x86_64", AndroidUseSharedRuntime="False", EmbedAssembliesIntoApk="True"))
      - name: AVD cache
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: android-avd
      - name: Create AVD for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      - name: Run the tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          #@yaml/text-templated-strings
          script: |
            adb devices
            adb logcat -c
            adb logcat -v time > "${{ github.workspace }}/logcat.txt" &

            adb install ${{ github.workspace }}/Tests/Tests.Android/bin/Release/io.realm.xamarintests-Signed.apk
            adb shell pm grant io.realm.xamarintests android.permission.READ_EXTERNAL_STORAGE
            adb shell pm grant io.realm.xamarintests android.permission.WRITE_EXTERNAL_STORAGE

            echo "(@= baasTestArgs @)" > ${{ github.workspace }}/testargs.txt
            adb push ${{ github.workspace }}/testargs.txt /storage/emulated/0/RealmTests/testargs.txt

            adb shell am instrument -w -r io.realm.xamarintests/.TestRunner
            adb pull /storage/emulated/0/RealmTests/TestResults.Android.xml ${{ github.workspace }}/TestResults.Android.xml
            adb shell rm /sdcard/Realmtests/TestResults.Android.xml
      - name: Output logcat
        if: always()
        run: cat logcat.txt
      - #@ publishTestsResults("TestResults.Android.xml", "Xamarin.Android")