#@ load("@ytt:template", "template")
#@ load("@ytt:overlay", "overlay")

#@ configuration = "Release"

#@ def checkoutCode():
name: Checkout code
uses: actions/checkout@v2
with:
  submodules: recursive
#@ end

#@ def checkCache(key):
name: Check cache
id: check-cache
uses: actions/cache@v2
with:
  path: ./wrappers/build/**
  key: #@ key
#@ end

#@ def cacheCondition():
#@overlay/match missing_ok=True
if: steps.check-cache.outputs.cache-hit != 'true'
#@ end

#@ def setupVcpkg():
name: Setup Vcpkg
uses: ./.github/actions/get-vcpkg-prebuilt
#@ end

#@ def buildWrappers(cmd, outputVar, intermediateSteps = []):
#@ actualCommand = cmd + " --configuration=" + configuration + " -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=${{ github.event_name == 'pull_request' && 'ON' || 'OFF' }}"
#@ cacheKey = outputVar + "-" + configuration + "-${{ github.event_name == 'pull_request' && 'ON' || 'OFF' }}-${{hashFiles('./wrappers/**')}}"

steps:
  - #@ checkoutCode()
  - #@ checkCache(cacheKey)
#@ for step in intermediateSteps:
  - #@ template.replace([overlay.apply(step, cacheCondition())])
#@ end
  - name: Build wrappers
    run: #@ actualCommand
    _: #@ template.replace(cacheCondition())
#@ end

---
name: build and test
on:
  push:
    branches:
      - main
      - master
  pull_request:
jobs:
  build-wrappers-macos:
    runs-on: macos-latest
    name: Build macOS wrappers
    _: #@ template.replace(buildWrappers("./wrappers/build-macos.sh", "wrappers-macos"))
  build-wrappers-ios:
    runs-on: macos-latest
    name: Build iOS wrappers
    _: #@ template.replace(buildWrappers("./wrappers/build-ios.sh", "wrappers-ios"))
  build-wrappers-linux:
    runs-on: ubuntu-2004
    name: Build Linux wrappers
    _: #@ template.replace(buildWrappers("./wrappers/build.sh", "wrappers-linux"))