#@ load("common.lib.yml", "actionDownloadArtifact", "msbuild", "dotnetPublish")

#@ def fetchPackageArtifacts(versionExpression = "inputs.version", packages = [ "Realm", "Realm.Fody" ]):
#@ for pkg in packages:
  - name: #@ "Fetch " + pkg
    uses: #@ actionDownloadArtifact
    with:
      name: #@ pkg + ".${{ " + versionExpression + " }}"
      path: ${{ github.workspace }}/Realm/packages/
#@ end
#@ end

#@ def baasTestArgs(differentiator):
#@   return " --baasurl=${{ secrets.BaseUrl }} --baascluster=${{ inputs.clusterName }} --baasapikey=${{ secrets.AtlasPublicKey}} --baasprivateapikey=${{ secrets.AtlasPrivateKey}} --baasprojectid=${{ secrets.AtlasProjectId }} --baasdifferentiator=" + differentiator
#@ end
---
#@ def publishTestsResults(files, test_title):
name: Publish Unit Test Results
uses: LaPeste/test-reporter@b8a650f4490e7472b930f56bbb92c7b42dc5db15 #! v1.5.1
if: always()
with:
  name: #@ "Results " + test_title
  path: #@ files
  reporter: java-junit
  list-suites: failed
  list-tests: failed
  path-replace-backslashes: true
  fail-on-error: false
#@ end
---
#@ def testDefinition(additionalSecrets = [], additionalInputs = []):
"on":
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      clusterName:
        required: false
        type: string
      #@ for input in additionalInputs:
      #@yaml/text-templated-strings
      (@= input @):
        required: true
        type: string
      #@ end
    secrets:
      AtlasProjectId:
        required: false
      BaseUrl:
        required: false
      AtlasPublicKey:
        required: false
      AtlasPrivateKey:
        required: false
      #@ for secret in additionalSecrets:
      #@yaml/text-templated-strings
      (@= secret @):
        required: true
      #@ end
env:
  REALM_DISABLE_ANALYTICS: true
  DOTNET_NOLOGO: true
#@ end
---
#@ def buildTests(projectPath, **properties):
#@ return msbuild(projectPath, RestoreConfigFile="Tests/Test.NuGet.Config", UseRealmNupkgsWithVersion="${{ inputs.version }}", **properties)
#@ end

#@ def dotnetBuildTests(projectPath, framework, runtime, version = "inputs.version"):
#@ properties = {
#@   "AdditionalFrameworks": framework,
#@   "RestoreConfigFile": "Tests/Test.NuGet.Config",
#@   "UseRealmNupkgsWithVersion": "${{ " + version + " }}"
#@ }
#@ return dotnetPublish(projectPath, framework, runtime, properties)
#@ end