#@ load("@ytt:template", "template")
#@ load("common.lib.yml", "configuration", "nugetPackages", "checkoutCode", "actionCodeQLInit", "actionCodeQLAnalyze", "actionSetupMSBuild", "setupAndroid", "setupWorkloads")

#@ def runCodeQL(language, buildSteps = []):
  - name: Initialize CodeQL
    uses: #@ actionCodeQLInit
    with:
      languages: #@ language
      config: |
        queries:
          - uses: security-and-quality
        query-filters:
          - exclude: cs/call-to-unmanaged-code
          - exclude: cs/unmanaged-code
  #@ for step in buildSteps:
  - #@ template.replace(step)
  #@ end
  - name: Perform CodeQL Analysis
    uses: #@ actionCodeQLAnalyze
#@ end

#@ def buildPackages():
  - #@ template.replace(setupAndroid())
  - #@ setupWorkloads('tvos ios maccatalyst android')
  - name: Add msbuild to PATH
    uses: #@ actionSetupMSBuild
#@ for pkgName in nugetPackages:
  - name: #@ "Build " + pkgName
    run: #@ "msbuild Realm/" + pkgName + " -p:UseSharedCompilation=false -restore -p:Configuration=" + configuration
#@ end
#@ end

---
name: "CodeQL"
"on":
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - '**.cs'
      - '**.cpp'
      - '**.hpp'
      - '**.csproj'
      - '.github/workflows/codeql.yml'
env:
  REALM_DISABLE_ANALYTICS: true
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  analyze-csharp:
    name: Analyze C#
    runs-on: windows-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - #@ template.replace(checkoutCode(False, False))
      - #@ template.replace(runCodeQL("csharp", [buildPackages()]))
