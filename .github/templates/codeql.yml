#@ load("@ytt:template", "template")
#@ load("common.lib.yml", "configuration", "nugetPackages", "checkoutCode", "setupVcpkg", "actionCodeQLInit", "actionCodeQLAnalyze", "actionSetupMSBuild", "actionSetupDotnet")

#@ def runCodeQL(language, buildSteps = []):
  - name: Initialize CodeQL
    uses: #@ actionCodeQLInit
    with:
      languages: #@ language
      queries: security-and-quality
  #@ for step in buildSteps:
  - #@ template.replace(step)
  #@ end
  - name: Perform CodeQL Analysis
    uses: #@ actionCodeQLAnalyze
#@ end

#@ def buildWrappers():
  - name: Build wrappers
    run: powershell ./wrappers/build.ps1 Windows -Platforms x64 -Configuration Release
#@ end

#@ def buildPackages():
  - name: Add msbuild to PATH
    uses: #@ actionSetupMSBuild
  - name: Configure .NET 6
    uses: #@ actionSetupDotnet
    with:
      dotnet-version: '6.0.x'
      include-prerelease: true
#@ for pkgName in nugetPackages:
  - name: #@ "Build " + pkgName
    run: #@ "msbuild Realm/" + pkgName + " -p:UseSharedCompilation=false -restore -p:Configuration=" + configuration
#@ end
#@ end

---
name: "CodeQL"
"on":
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - '**.cs'
      - '**.cpp'
      - '**.hpp'
      - '**.csproj'
env:
  REALM_DISABLE_ANALYTICS: true
jobs:
  analyze-cpp:
    name: Analyze C++
    runs-on: windows-2019
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - #@ template.replace(checkoutCode("recursive", False))
    - #@ template.replace(runCodeQL("cpp", [setupVcpkg("windows-x64"), buildWrappers()]))
  analyze-csharp:
    name: Analyze C#
    runs-on: windows-2019
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - #@ template.replace(checkoutCode(False, False))
      - #@ template.replace(runCodeQL("csharp", [buildPackages()]))
