#@ load("@ytt:template", "template")
#@ load("common.lib.yml", "configuration", "nugetPackages", "checkoutCode", "setupVcpkg")

#@ def runCodeQL(language, buildSteps = []):
  - name: Initialize CodeQL
    uses: github/codeql-action/init@v1
    with:
      languages: #@ language
      queries: security-and-quality
  #@ for step in buildSteps:
  - #@ template.replace(step)
  #@ end
  - name: Perform CodeQL Analysis
    uses: github/codeql-action/analyze@v1
#@ end

#@ def buildWrappers():
  - name: Build wrappers
    run: powershell ./wrappers/build.ps1 Windows -Platforms x64 -Configuration Release
#@ end

#@ def buildPackages():
  - name: Add msbuild to PATH
    uses: microsoft/setup-msbuild@v1.0.2
#@ for pkgName in nugetPackages:
  - name: #@ "Build " + pkgName
    run: #@ "msbuild Realm/" + pkgName + " -p:UseSharedCompilation=false -restore -p:Configuration=" + configuration
#@ end
#@ end

---
name: "CodeQL"
"on":
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
jobs:
  analyze-cpp:
    name: Analyze C++
    runs-on: windows-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - #@ template.replace(checkoutCode("recursive", False))
    - #@ template.replace(runCodeQL("cpp", [setupVcpkg(), buildWrappers()]))
  analyze-csharp:
    name: Analyze C#
    runs-on: windows-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - #@ template.replace(checkoutCode(False, False))
      - #@ template.replace(runCodeQL("csharp", [buildPackages()]))
