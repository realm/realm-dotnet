#@ load("@ytt:template", "template")
#@ load("common.lib.yml", "checkoutCode", "fetchPackageArtifacts", "nugetPackages")
#@ load("build.lib.yml", "deployBaas", "cleanupBaas", "runTests", "runNetCoreTests", "runWovenClassesTests", "runSourceGenerationTests", "buildUnity", "testUnity")
---
name: PR Build
"on":
  pull_request:
    paths:
    - '**.cs'
    - '**.cpp'
    - '**.hpp'
    - '**.csproj'
    - '**CMakeLists.txt'
    - '**.ps1'
    - '**.sh'
    - '**.props'
    - wrappers/realm-core
    - .github/workflows/*.yml
    - '!.github/workflows/main.yml'
    - '!.github/workflows/publish-*.yml'
    - .github/actions/**
    - 'Tests/Tests.Android/Properties/AndroidManifest.xml'
env:
  REALM_DISABLE_ANALYTICS: true
  DOTNET_NOLOGO: true

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-wrappers:
    uses: ./.github/workflows/wrappers.yml
    name: Wrappers
  _: #@ template.replace(deployBaas(["Code Coverage"]))
  build-packages:
    uses: ./.github/workflows/build-packages.yml
    name: Package
    needs:
    - build-wrappers
    with:
      build-docs: ${{ contains(github.head_ref, 'release') }}
  _: #@ template.replace(buildUnity())
  _: #@ template.replace(testUnity('["Mono-Net4"]', '[{ "os": "windows", "testPlatform": "Windows64" }, { "os": "linux", "testPlatform": "Linux64" }]'))
  _: #@ template.replace(runTests(".NET Framework", runSyncTests = False))
  _: #@ template.replace(runTests("UWP Managed", runSyncTests = False, additionalSecrets = ["Pfx_Password", "Base64_Encoded_Pfx"]))
  _: #@ template.replace(runNetCoreTests('["net8.0"]'))
  _: #@ template.replace(runTests("macOS", runSyncTests = False))
  _: #@ template.replace(runTests("iOS", runSyncTests = False))
  _: #@ template.replace(runTests("tvOS", runSyncTests = False))
  _: #@ template.replace(runTests("Android", runSyncTests = False, additionalSecrets=["AWS_DEVICEFARM_ACCESS_KEY_ID", "AWS_DEVICEFARM_SECRET_ACCESS_KEY", "DEVICEFARM_PROJECT_ARN", "DEVICEFARM_ANDROID_POOL_ARN"]))
  _: #@ template.replace(runWovenClassesTests())
  _: #@ template.replace(runSourceGenerationTests())
  test-weaver:
    uses: ./.github/workflows/test-weaver.yml
    name: Test
  _: #@ template.replace(runTests("Code Coverage"))
  _: #@ template.replace(cleanupBaas(dependencies = ["Code Coverage"], targets = ["Code Coverage"]))
  verify-namespaces:
    runs-on: ubuntu-latest
    name: Verify Namespaces
    needs:
      - build-packages
    steps:
      - #@ template.replace(checkoutCode("recursive", False))
      - #@ template.replace(fetchPackageArtifacts("needs.build-packages.outputs.package_version", packages = nugetPackages))
      - run: dotnet tool install ilspycmd -g --version 8.0.0.7345
      - name: Verify Namespaces
        run: |
          $isFailure = $false
          Get-ChildItem ./Realm/packages -Filter *.nupkg | Foreach-Object {
              $targetPath = Join-Path ./Realm/packages $_.BaseName
              Expand-Archive $_.FullName -DestinationPath $targetPath

              Get-ChildItem $targetPath -Filter *.dll -Recurse | ForEach-Object {
                  if (-not ($_.FullName -match "runtimes")) {
                      $ilspyOutput = ilspycmd $_.FullName

                      $parentDll = $_.FullName

                      $ilspyOutput | ForEach-Object {
                          if ($_ -match "namespace.*Realm(\.|$)") {
                              Write-Output "::error file=$parentDll::Realm present in namespace - $($_)"
                              Set-Variable "isFailure" -Value $true
                          }
                      }
                  }
              }
          }

          if ($isFailure) {
              exit 1
          }
        shell: pwsh

