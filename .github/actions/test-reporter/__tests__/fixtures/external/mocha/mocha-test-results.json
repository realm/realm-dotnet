{
  "stats": {
    "suites": 590,
    "tests": 839,
    "passes": 833,
    "pending": 6,
    "failures": 0,
    "start": "2021-04-01T07:58:46.190Z",
    "end": "2021-04-01T07:58:52.155Z",
    "duration": 5965
  },
  "tests": [
    {
      "title": "should work",
      "fullTitle": "Context nested should work",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\context.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should work",
      "fullTitle": "Context Siblings sequestered sibling should work",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\context.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not have value set within a sibling describe",
      "fullTitle": "Context Siblings sibling verifiction should not have value set within a sibling describe",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\context.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should allow test siblings to modify shared context",
      "fullTitle": "Context Siblings sibling verifiction should allow test siblings to modify shared context",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\context.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should have reset this.calls before describe",
      "fullTitle": "Context Siblings sibling verifiction should have reset this.calls before describe",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\context.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the timeout",
      "fullTitle": "methods timeout() should return the timeout",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\context.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the slow",
      "fullTitle": "methods slow() should return the slow",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\context.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the number of retries",
      "fullTitle": "methods retries should return the number of retries",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\context.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should highlight in red",
      "fullTitle": "durations when slow should highlight in red",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\duration.spec.js",
      "duration": 103,
      "currentRetry": 0,
      "speed": "slow",
      "err": {}
    },
    {
      "title": "should highlight in yellow",
      "fullTitle": "durations when reasonable should highlight in yellow",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\duration.spec.js",
      "duration": 52,
      "currentRetry": 0,
      "speed": "medium",
      "err": {}
    },
    {
      "title": "should not highlight",
      "fullTitle": "durations when fast should not highlight",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\duration.spec.js",
      "duration": 11,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include expected code in thrown reporter errors",
      "fullTitle": "Errors createInvalidReporterError() should include expected code in thrown reporter errors",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include expected code in thrown interface errors",
      "fullTitle": "Errors createInvalidInterfaceError() should include expected code in thrown interface errors",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should output a message regarding incompatibility",
      "fullTitle": "Errors createForbiddenExclusivityError() when Mocha instance is running in a worker process should output a message regarding incompatibility",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should output a message regarding --forbid-only",
      "fullTitle": "Errors createForbiddenExclusivityError() when Mocha instance is not running in a worker process should output a message regarding --forbid-only",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should coerce its parameter to a string",
      "fullTitle": "Errors deprecate() should coerce its parameter to a string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should cache the message",
      "fullTitle": "Errors deprecate() should cache the message",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should ignore falsy messages",
      "fullTitle": "Errors deprecate() should ignore falsy messages",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call process.emitWarning",
      "fullTitle": "Errors warn() should call process.emitWarning",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not cache messages",
      "fullTitle": "Errors warn() should not cache messages",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should ignore falsy messages",
      "fullTitle": "Errors warn() should ignore falsy messages",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true",
      "fullTitle": "Errors isMochaError() when provided an Error object having a known Mocha error code should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false",
      "fullTitle": "Errors isMochaError() when provided an Error object with a non-Mocha error code should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false",
      "fullTitle": "Errors isMochaError() when provided a non-error should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should cause tests to fail",
      "fullTitle": "global leaks should cause tests to fail",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\globals.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass when accepted",
      "fullTitle": "global leaks should pass when accepted",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\globals.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass with wildcard",
      "fullTitle": "global leaks should pass with wildcard",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\globals.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass when prefixed \"mocha-\"",
      "fullTitle": "global leaks should pass when prefixed \"mocha-\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\globals.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add a RegExp to the mocha.options object",
      "fullTitle": "Mocha \"grep\" option should add a RegExp to the mocha.options object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\grep.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should convert string to a RegExp",
      "fullTitle": "Mocha \"grep\" option should convert string to a RegExp",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\grep.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should escape and convert string to a RegExp",
      "fullTitle": "Mocha \"fgrep\" option should escape and convert string to a RegExp",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\grep.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add a RegExp to the mocha.options object",
      "fullTitle": "Mocha .grep() should add a RegExp to the mocha.options object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\grep.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should convert grep string to a RegExp",
      "fullTitle": "Mocha .grep() should convert grep string to a RegExp",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\grep.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should covert grep regex-like string to a RegExp",
      "fullTitle": "Mocha .grep() should covert grep regex-like string to a RegExp",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\grep.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return its parent Mocha object for chainability",
      "fullTitle": "Mocha .grep() should return its parent Mocha object for chainability",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\grep.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add a Boolean to the mocha.options object",
      "fullTitle": "Mocha \"invert\" option should add a Boolean to the mocha.options object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\grep.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "one",
      "fullTitle": "async hooks one",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "two",
      "fullTitle": "async hooks two",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-async.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "three",
      "fullTitle": "async hooks three",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "foo",
      "fullTitle": "serial nested foo",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-sync-nested.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "bar",
      "fullTitle": "serial nested bar",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-sync-nested.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "one",
      "fullTitle": "serial nested hooks one",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-sync-nested.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "two",
      "fullTitle": "serial nested hooks two",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-sync-nested.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "one",
      "fullTitle": "serial hooks one",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-sync.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "two",
      "fullTitle": "serial hooks two",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-sync.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "three",
      "fullTitle": "serial hooks three",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-sync.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should work",
      "fullTitle": "hook timeout should work",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-timeout.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the hook._error",
      "fullTitle": "Hook error should set the hook._error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should get the hook._error when called without arguments",
      "fullTitle": "Hook error should get the hook._error when called without arguments",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call Runnable.reset",
      "fullTitle": "Hook reset should call Runnable.reset",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reset the error state",
      "fullTitle": "Hook reset should reset the error state",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set _cleanReferencesAfterRun to true",
      "fullTitle": "Mocha constructor should set _cleanReferencesAfterRun to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not attempt to set timeout",
      "fullTitle": "Mocha constructor when `timeout` option is `undefined` should not attempt to set timeout",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attempt to set timeout",
      "fullTitle": "Mocha constructor when `timeout` option is `false` should attempt to set timeout",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attempt to set globals",
      "fullTitle": "Mocha constructor when `global` option is an `Array` should attempt to set globals",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attempt to set retries`",
      "fullTitle": "Mocha constructor when `retries` option is present should attempt to set retries`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not attempt to set retries",
      "fullTitle": "Mocha constructor when `retries` option is not present should not attempt to set retries",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "shouid attempt to set root hooks",
      "fullTitle": "Mocha constructor when `rootHooks` option is truthy shouid attempt to set root hooks",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should enable parallel mode",
      "fullTitle": "Mocha constructor when `parallel` option is true and `jobs` option > 1 should enable parallel mode",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not enable parallel mode",
      "fullTitle": "Mocha constructor when `parallel` option is true and `jobs` option <= 1 should not enable parallel mode",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should configure global setup fixtures",
      "fullTitle": "Mocha constructor when `parallel` option is true when `globalSetup` option is present should configure global setup fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should configure global teardown fixtures",
      "fullTitle": "Mocha constructor when `parallel` option is true when `globalTeardown` option is present should configure global teardown fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should toggle global setup fixtures",
      "fullTitle": "Mocha constructor when `parallel` option is true when `enableGlobalSetup` option is present should toggle global setup fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should configure global teardown fixtures",
      "fullTitle": "Mocha constructor when `parallel` option is true when `enableGlobalTeardown` option is present should configure global teardown fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the allowUncaught option to true",
      "fullTitle": "Mocha instance method allowUncaught() should set the allowUncaught option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the allowUncaught option to false",
      "fullTitle": "Mocha instance method allowUncaught() should set the allowUncaught option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method allowUncaught() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the asyncOnly option to true",
      "fullTitle": "Mocha instance method asyncOnly() should set the asyncOnly option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the asyncOnly option to false",
      "fullTitle": "Mocha instance method asyncOnly() should set the asyncOnly option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method asyncOnly() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method bail() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the \"bail\" flag on the root suite",
      "fullTitle": "Mocha instance method bail() when provided no arguments should set the \"bail\" flag on the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should unset the \"bail\" flag on the root suite",
      "fullTitle": "Mocha instance method bail() when provided a falsy argument should unset the \"bail\" flag on the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the checkLeaks option to true",
      "fullTitle": "Mocha instance method checkLeaks() should set the checkLeaks option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the _cleanReferencesAfterRun attribute",
      "fullTitle": "Mocha instance method cleanReferencesAfterRun() should set the _cleanReferencesAfterRun attribute",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the _cleanReferencesAfterRun attribute to false",
      "fullTitle": "Mocha instance method cleanReferencesAfterRun() should set the _cleanReferencesAfterRun attribute to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method cleanReferencesAfterRun() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the color option to true",
      "fullTitle": "Mocha instance method color() should set the color option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the color option to false",
      "fullTitle": "Mocha instance method color() should set the color option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method color() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the delay option to true",
      "fullTitle": "Mocha instance method delay() should set the delay option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method delay() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the diff option to true",
      "fullTitle": "Mocha instance method diff() should set the diff option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the diff option to false",
      "fullTitle": "Mocha instance method diff() when provided `false` argument should set the diff option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should dispose the root suite",
      "fullTitle": "Mocha instance method dispose() should dispose the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should dispose previous test runner",
      "fullTitle": "Mocha instance method dispose() should dispose previous test runner",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should unload the files",
      "fullTitle": "Mocha instance method dispose() should unload the files",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the forbidOnly option to true",
      "fullTitle": "Mocha instance method forbidOnly() should set the forbidOnly option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the forbidOnly option to false",
      "fullTitle": "Mocha instance method forbidOnly() should set the forbidOnly option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method forbidOnly() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the forbidPending option to true",
      "fullTitle": "Mocha instance method forbidPending() should set the forbidPending option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the forbidPending option to false",
      "fullTitle": "Mocha instance method forbidPending() should set the forbidPending option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method forbidPending() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the fullTrace option to true",
      "fullTitle": "Mocha instance method fullTrace() should set the fullTrace option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the fullTrace option to false",
      "fullTitle": "Mocha instance method fullTrace() should set the fullTrace option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method fullTrace() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be an empty array initially",
      "fullTitle": "Mocha instance method global() should be an empty array initially",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method global() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not modify the whitelist when given empty string",
      "fullTitle": "Mocha instance method global() when argument is invalid should not modify the whitelist when given empty string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not modify the whitelist when given empty array",
      "fullTitle": "Mocha instance method global() when argument is invalid should not modify the whitelist when given empty array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add string to the whitelist",
      "fullTitle": "Mocha instance method global() when argument is valid should add string to the whitelist",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add contents of string array to the whitelist",
      "fullTitle": "Mocha instance method global() when argument is valid should add contents of string array to the whitelist",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not have duplicates",
      "fullTitle": "Mocha instance method global() when argument is valid should not have duplicates",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method growl() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 57,
      "currentRetry": 0,
      "speed": "medium",
      "err": {}
    },
    {
      "title": "should set the growl option to true",
      "fullTitle": "Mocha instance method growl() if capable of notifications should set the growl option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the growl option to false",
      "fullTitle": "Mocha instance method growl() if not capable of notifications should set the growl option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the inlineDiffs option to true",
      "fullTitle": "Mocha instance method inlineDiffs() should set the inlineDiffs option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the inlineDiffs option to false",
      "fullTitle": "Mocha instance method inlineDiffs() should set the inlineDiffs option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method inlineDiffs() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the invert option to true",
      "fullTitle": "Mocha instance method invert() should set the invert option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method invert() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the noHighlighting option to true",
      "fullTitle": "Mocha instance method noHighlighting() should set the noHighlighting option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method noHighlighting() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method reporter() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should keep reporterOption on options",
      "fullTitle": "Mocha instance method reporter() should keep reporterOption on options",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should support legacy reporterOptions",
      "fullTitle": "Mocha instance method reporter() should support legacy reporterOptions",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should instantiate a reporter",
      "fullTitle": "Mocha instance method run() should instantiate a reporter",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should initialize the stats collector",
      "fullTitle": "Mocha instance method run() should initialize the stats collector",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should execute the callback when complete",
      "fullTitle": "Mocha instance method run() should execute the callback when complete",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should eagerly load files",
      "fullTitle": "Mocha instance method run() when files have been added to the Mocha instance when Mocha is set to eagerly load files should eagerly load files",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not eagerly load files",
      "fullTitle": "Mocha instance method run() when files have been added to the Mocha instance when Mocha is set to lazily load files should not eagerly load files",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should instantiate a Runner",
      "fullTitle": "Mocha instance method run() Runner initialization should instantiate a Runner",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should configure \"grep\"",
      "fullTitle": "Mocha instance method run() Runner initialization when \"grep\" option is present should configure \"grep\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should configure global vars",
      "fullTitle": "Mocha instance method run() Runner initialization when \"global\" option is present should configure global vars",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should initialize growl support",
      "fullTitle": "Mocha instance method run() when \"growl\" option is present should initialize growl support",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should configure the Base reporter",
      "fullTitle": "Mocha instance method run() Base reporter initialization should configure the Base reporter",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should configure the Base reporter",
      "fullTitle": "Mocha instance method run() Base reporter initialization when \"color\" options is set should configure the Base reporter",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call the reporter \"done\" method",
      "fullTitle": "Mocha instance method run() when a reporter instance has a \"done\" method should call the reporter \"done\" method",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Mocha instance method run() when a run is in progress should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not call `Runner#runAsync`",
      "fullTitle": "Mocha instance method run() when a run is in progress should not call `Runner#runAsync`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Mocha instance method run() when the `Mocha` instance is already disposed should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not call `Runner#runAsync`",
      "fullTitle": "Mocha instance method run() when the `Mocha` instance is already disposed should not call `Runner#runAsync`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Mocha instance method run() when a run has finished and is called again should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not call `Runner#runAsync()`",
      "fullTitle": "Mocha instance method run() when a run has finished and is called again should not call `Runner#runAsync()`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw",
      "fullTitle": "Mocha instance method run() when Mocha configured for multiple runs and multiple runs are attempted should not throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call `Runner#runAsync` for each call",
      "fullTitle": "Mocha instance method run() when Mocha configured for multiple runs and multiple runs are attempted should call `Runner#runAsync` for each call",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reset the root Suite between runs",
      "fullTitle": "Mocha instance method run() when Mocha configured for multiple runs and multiple runs are attempted should reset the root Suite between runs",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should dispose the previous runner",
      "fullTitle": "Mocha instance method run() when Mocha configured for multiple runs and multiple runs are attempted should dispose the previous runner",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not run global setup fixtures",
      "fullTitle": "Mocha instance method run() when global setup fixtures enabled when global setup fixtures not present should not run global setup fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should run global setup fixtures",
      "fullTitle": "Mocha instance method run() when global setup fixtures enabled when global setup fixtures are present should run global setup fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not run global setup fixtures",
      "fullTitle": "Mocha instance method run() when global setup fixtures disabled when global setup fixtures not present should not run global setup fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not run global setup fixtures",
      "fullTitle": "Mocha instance method run() when global setup fixtures disabled when global setup fixtures are present should not run global setup fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not run global teardown fixtures",
      "fullTitle": "Mocha instance method run() when global teardown fixtures enabled when global teardown fixtures not present should not run global teardown fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should run global teardown fixtures",
      "fullTitle": "Mocha instance method run() when global teardown fixtures enabled when global teardown fixtures are present should run global teardown fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should use the same context as returned by `runGlobalSetup`",
      "fullTitle": "Mocha instance method run() when global teardown fixtures enabled when global teardown fixtures are present when global setup fixtures are present and enabled should use the same context as returned by `runGlobalSetup`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not run global teardown fixtures",
      "fullTitle": "Mocha instance method run() when global teardown fixtures disabled when global teardown fixtures not present should not run global teardown fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not run global teardown fixtures",
      "fullTitle": "Mocha instance method run() when global teardown fixtures disabled when global teardown fixtures are present should not run global teardown fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Mocha instance method parallelMode() when `Mocha` is running in a browser should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Mocha instance method unloadFile() when run in a browser should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should execute multiple fixtures in order",
      "fullTitle": "Mocha instance method _runGlobalFixtures() should execute multiple fixtures in order",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attempt run the fixtures",
      "fullTitle": "Mocha instance method runGlobalSetup() when fixture(s) are present should attempt run the fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not attempt to run fixtures",
      "fullTitle": "Mocha instance method runGlobalSetup() when a fixture is not present should not attempt to run fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attempt to run the fixtures",
      "fullTitle": "Mocha instance method runGlobalTeardown() when fixture(s) are present should attempt to run the fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "not attempt to run the fixtures",
      "fullTitle": "Mocha instance method runGlobalTeardown() when a fixture is not present not attempt to run the fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `true`",
      "fullTitle": "Mocha instance method hasGlobalSetupFixtures() when one or more global setup fixtures are present should return `true`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `false`",
      "fullTitle": "Mocha instance method hasGlobalSetupFixtures() when no global setup fixtures are present should return `false`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `true`",
      "fullTitle": "Mocha instance method hasGlobalTeardownFixtures() when one or more global teardown fixtures are present should return `true`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `false`",
      "fullTitle": "Mocha instance method hasGlobalTeardownFixtures() when no global teardown fixtures are present should return `false`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method rootHooks() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attach it to the root suite",
      "fullTitle": "Mocha instance method rootHooks() when provided a single \"before all\" hook should attach it to the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attach it to the root suite",
      "fullTitle": "Mocha instance method rootHooks() when provided a single \"before each\" hook should attach it to the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attach it to the root suite",
      "fullTitle": "Mocha instance method rootHooks() when provided a single \"after all\" hook should attach it to the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attach it to the root suite",
      "fullTitle": "Mocha instance method rootHooks() when provided a single \"after each\" hook should attach it to the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attach each to the root suite",
      "fullTitle": "Mocha instance method rootHooks() when provided multiple \"before all\" hooks should attach each to the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attach each to the root suite",
      "fullTitle": "Mocha instance method rootHooks() when provided multiple \"before each\" hooks should attach each to the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attach each to the root suite",
      "fullTitle": "Mocha instance method rootHooks() when provided multiple \"after all\" hooks should attach each to the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attach each to the root suite",
      "fullTitle": "Mocha instance method rootHooks() when provided multiple \"after each\" hooks should attach each to the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail when multiple methods are used",
      "fullTitle": "overspecified asynchronous resolution method should fail when multiple methods are used",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\overspecified-async.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should get queryString and return key-value object",
      "fullTitle": "parseQuery() should get queryString and return key-value object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\parse-query.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should parse \"+\" as a space",
      "fullTitle": "parseQuery() should parse \"+\" as a space",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\parse-query.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should populate a registry of built-in plugins",
      "fullTitle": "plugin module class PluginLoader constructor when passed no options should populate a registry of built-in plugins",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should register the custom plugins",
      "fullTitle": "plugin module class PluginLoader constructor when passed custom plugins should register the custom plugins",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should retain a list of ignored plugins",
      "fullTitle": "plugin module class PluginLoader constructor when passed ignored plugins should retain a list of ignored plugins",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a PluginLoader instance",
      "fullTitle": "plugin module class PluginLoader static method create() should return a PluginLoader instance",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw",
      "fullTitle": "plugin module class PluginLoader instance method register() when the plugin export name is not in use should not throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "plugin module class PluginLoader instance method register() when the plugin export name is already in use should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw",
      "fullTitle": "plugin module class PluginLoader instance method register() when the plugin export name is ignored should not throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not register the plugin",
      "fullTitle": "plugin module class PluginLoader instance method register() when the plugin export name is ignored should not register the plugin",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "plugin module class PluginLoader instance method register() when passed a falsy parameter should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "plugin module class PluginLoader instance method register() when passed a non-object parameter should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "plugin module class PluginLoader instance method register() when passed a definition w/o an exportName should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false",
      "fullTitle": "plugin module class PluginLoader instance method load() when called with a falsy value should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false",
      "fullTitle": "plugin module class PluginLoader instance method load() when called with an object containing no recognized plugin should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true",
      "fullTitle": "plugin module class PluginLoader instance method load() when called with an object containing a recognized plugin should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should retain the value of any matching property in its mapping",
      "fullTitle": "plugin module class PluginLoader instance method load() when called with an object containing a recognized plugin should retain the value of any matching property in its mapping",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call the associated validator, if present",
      "fullTitle": "plugin module class PluginLoader instance method load() when called with an object containing a recognized plugin should call the associated validator, if present",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed a falsy or non-object value should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not call a validator",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed a falsy or non-object value should not call a validator",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed an object value when no keys match any known named exports should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call the associated validator",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed an object value when a key matches a known named export should call the associated validator",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not call validators whose keys were not found",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed an object value when a key matches a known named export should not call validators whose keys were not found",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed an object value when a key matches a known named export when the value passes the associated validator should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add the implementation to the internal mapping",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed an object value when a key matches a known named export when the value passes the associated validator should add the implementation to the internal mapping",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not add an implementation of plugins not present",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed an object value when a key matches a known named export when the value passes the associated validator should not add an implementation of plugins not present",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed an object value when a key matches a known named export when the value does not pass the associated validator should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an empty map",
      "fullTitle": "plugin module class PluginLoader instance method finalize() when no plugins have been loaded should return an empty map",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an object map using `optionName` key for each registered plugin",
      "fullTitle": "plugin module class PluginLoader instance method finalize() when a plugin has one or more implementations should return an object map using `optionName` key for each registered plugin",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should omit unused plugins",
      "fullTitle": "plugin module class PluginLoader instance method finalize() when a plugin has one or more implementations should omit unused plugins",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an array of raw implementations",
      "fullTitle": "plugin module class PluginLoader instance method finalize() when a plugin has no \"finalize\" function should return an array of raw implementations",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail validation",
      "fullTitle": "plugin module root hooks plugin 🎣 when impl is an array should fail validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail validation",
      "fullTitle": "plugin module root hooks plugin 🎣 when impl is a primitive should fail validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass validation",
      "fullTitle": "plugin module root hooks plugin 🎣 when impl is a function should pass validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass validation",
      "fullTitle": "plugin module root hooks plugin 🎣 when impl is an object of functions should pass validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should flatten the implementations",
      "fullTitle": "plugin module root hooks plugin 🎣 when a loaded impl is finalized should flatten the implementations",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail validation",
      "fullTitle": "plugin module global fixtures plugin global setup when an implementation is a primitive should fail validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail validation",
      "fullTitle": "plugin module global fixtures plugin global setup when an implementation is an array of primitives should fail validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass validation",
      "fullTitle": "plugin module global fixtures plugin global setup when an implementation is a function should pass validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass validation",
      "fullTitle": "plugin module global fixtures plugin global setup when an implementation is an array of functions should pass validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail validation",
      "fullTitle": "plugin module global fixtures plugin global teardown when an implementation is a primitive should fail validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail validation",
      "fullTitle": "plugin module global fixtures plugin global teardown when an implementation is an array of primitives should fail validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass validation",
      "fullTitle": "plugin module global fixtures plugin global teardown when an implementation is a function should pass validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass validation",
      "fullTitle": "plugin module global fixtures plugin global teardown when an implementation is an array of functions should pass validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "using imported it",
      "fullTitle": "using imported describe using imported it",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\required-tokens.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be a valid suite",
      "fullTitle": "root should be a valid suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\root.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should clamp to lower bound given numeric",
      "fullTitle": "Runnable(title, fn) #timeout(ms) when value is less than lower bound should clamp to lower bound given numeric",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should clamp to lower bound given timestamp",
      "fullTitle": "Runnable(title, fn) #timeout(ms) when value is less than lower bound should clamp to lower bound given timestamp",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the timeout value to disabled",
      "fullTitle": "Runnable(title, fn) #timeout(ms) when value is equal to lower bound given numeric value should set the timeout value to disabled",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the timeout value to disabled",
      "fullTitle": "Runnable(title, fn) #timeout(ms) when value is equal to lower bound given string timestamp should set the timeout value to disabled",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the timeout value",
      "fullTitle": "Runnable(title, fn) #timeout(ms) when value is within `setTimeout` bounds given numeric value should set the timeout value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the timeout value",
      "fullTitle": "Runnable(title, fn) #timeout(ms) when value is within `setTimeout` bounds given string timestamp should set the timeout value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the disabled timeout value",
      "fullTitle": "Runnable(title, fn) #timeout(ms) when value is equal to upper bound given numeric value should set the disabled timeout value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the disabled timeout value",
      "fullTitle": "Runnable(title, fn) #timeout(ms) when value is out-of-bounds given numeric value should set the disabled timeout value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the slow threshold",
      "fullTitle": "Runnable(title, fn) #slow(ms) should set the slow threshold",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not set the slow threshold if the parameter is not passed",
      "fullTitle": "Runnable(title, fn) #slow(ms) should not set the slow threshold if the parameter is not passed",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not set the slow threshold if the parameter is undefined",
      "fullTitle": "Runnable(title, fn) #slow(ms) should not set the slow threshold if the parameter is undefined",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should convert to ms",
      "fullTitle": "Runnable(title, fn) #slow(ms) when passed a time-formatted string should convert to ms",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reset current run state",
      "fullTitle": "Runnable(title, fn) #reset should reset current run state",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be present",
      "fullTitle": "Runnable(title, fn) .title should be present",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "returns the concatenation of the parent's title path and runnable's title",
      "fullTitle": "Runnable(title, fn) .titlePath() returns the concatenation of the parent's title path and runnable's title",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be .async",
      "fullTitle": "Runnable(title, fn) when arity >= 1 should be .async",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not be .sync",
      "fullTitle": "Runnable(title, fn) when arity >= 1 should not be .sync",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not be .async",
      "fullTitle": "Runnable(title, fn) when arity == 0 should not be .async",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be .sync",
      "fullTitle": "Runnable(title, fn) when arity == 0 should be .sync",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should allow for whitelisting globals",
      "fullTitle": "Runnable(title, fn) #globals should allow for whitelisting globals",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the number of retries",
      "fullTitle": "Runnable(title, fn) #retries(n) should set the number of retries",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when .pending should not invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when sync without error should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback with error",
      "fullTitle": "Runnable(title, fn) .run(fn) when sync when an exception is thrown should invoke the callback with error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 4,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "throws an error when it is allowed",
      "fullTitle": "Runnable(title, fn) .run(fn) when sync when an exception is thrown and is allowed to remain uncaught throws an error when it is allowed",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not error with timeout",
      "fullTitle": "Runnable(title, fn) .run(fn) when timeouts are disabled should not error with timeout",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 6,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should allow updating the timeout",
      "fullTitle": "Runnable(title, fn) .run(fn) when async should allow updating the timeout",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 51,
      "currentRetry": 0,
      "speed": "medium",
      "err": {}
    },
    {
      "title": "should allow a timeout of 0",
      "fullTitle": "Runnable(title, fn) .run(fn) when async should allow a timeout of 0",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when async without error should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit a single \"error\" event",
      "fullTitle": "Runnable(title, fn) .run(fn) when async when the callback is invoked several times without an error should emit a single \"error\" event",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit a single \"error\" event",
      "fullTitle": "Runnable(title, fn) .run(fn) when async when the callback is invoked several times with an error should emit a single \"error\" event",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when async when an exception is thrown should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw its own exception if passed a non-object",
      "fullTitle": "Runnable(title, fn) .run(fn) when async when an exception is thrown should not throw its own exception if passed a non-object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "throws an error when it is allowed",
      "fullTitle": "Runnable(title, fn) .run(fn) when async when an exception is thrown and is allowed to remain uncaught throws an error when it is allowed",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when async when an error is passed should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when async when done() is invoked with a non-Error object should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when async when done() is invoked with a string should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when fn returns a promise when the promise is fulfilled with no value should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when fn returns a promise when the promise is fulfilled with a value should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when fn returns a promise when the promise is rejected should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when fn returns a promise when the promise is rejected without a reason should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw the timeout error",
      "fullTitle": "Runnable(title, fn) .run(fn) when fn returns a promise when the promise takes too long to settle should throw the timeout error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 12,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when fn returns a non-promise should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should ignore call to `done` and not execute callback again",
      "fullTitle": "Runnable(title, fn) .run(fn) if timed-out should ignore call to `done` and not execute callback again",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 11,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "this.skip() should set runnable to pending",
      "fullTitle": "Runnable(title, fn) .run(fn) if async this.skip() should set runnable to pending",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "this.skip() should halt synchronous execution",
      "fullTitle": "Runnable(title, fn) .run(fn) if async this.skip() should halt synchronous execution",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw an error",
      "fullTitle": "Runnable(title, fn) .run(fn) when fn is not a function should throw an error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `true` if test has not failed",
      "fullTitle": "Runnable(title, fn) #isFailed() should return `true` if test has not failed",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `true` if test has failed",
      "fullTitle": "Runnable(title, fn) #isFailed() should return `true` if test has failed",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `false` if test is pending",
      "fullTitle": "Runnable(title, fn) #isFailed() should return `false` if test is pending",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not time out if timeouts disabled after reset",
      "fullTitle": "Runnable(title, fn) #resetTimeout() should not time out if timeouts disabled after reset",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 21,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return identity if parameter is truthy",
      "fullTitle": "Runnable(title, fn) static method toValueOrError should return identity if parameter is truthy",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an Error if parameter is falsy",
      "fullTitle": "Runnable(title, fn) static method toValueOrError should return an Error if parameter is falsy",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should have a unique identifier",
      "fullTitle": "Runnable(title, fn) interesting property id should have a unique identifier",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should have a permanent identifier",
      "fullTitle": "Runnable(title, fn) interesting property id should have a permanent identifier",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should update the runner.total with number of matched tests",
      "fullTitle": "Runner instance method grep() should update the runner.total with number of matched tests",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should update the runner.total with number of matched tests when inverted",
      "fullTitle": "Runner instance method grep() should update the runner.total with number of matched tests when inverted",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the total number of matched tests",
      "fullTitle": "Runner instance method grepTotal() should return the total number of matched tests",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the total number of matched tests when inverted",
      "fullTitle": "Runner instance method grepTotal() should return the total number of matched tests when inverted",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include common non enumerable globals",
      "fullTitle": "Runner instance method globalProps() should include common non enumerable globals",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should default to the known globals",
      "fullTitle": "Runner instance method globals() should default to the known globals",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should white-list globals",
      "fullTitle": "Runner instance method globals() should white-list globals",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should allow variables that match a wildcard",
      "fullTitle": "Runner instance method checkGlobals(test) should allow variables that match a wildcard",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit \"fail\" when a new global is introduced",
      "fullTitle": "Runner instance method checkGlobals(test) should emit \"fail\" when a new global is introduced",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit \"fail\" when a single new disallowed global is introduced after a single extra global is allowed",
      "fullTitle": "Runner instance method checkGlobals(test) should emit \"fail\" when a single new disallowed global is introduced after a single extra global is allowed",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not fail when a new common global is introduced",
      "fullTitle": "Runner instance method checkGlobals(test) should not fail when a new common global is introduced",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pluralize the error message when several are introduced",
      "fullTitle": "Runner instance method checkGlobals(test) should pluralize the error message when several are introduced",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should respect per test whitelisted globals",
      "fullTitle": "Runner instance method checkGlobals(test) should respect per test whitelisted globals",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should respect per test whitelisted globals but still detect other leaks",
      "fullTitle": "Runner instance method checkGlobals(test) should respect per test whitelisted globals but still detect other leaks",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit \"fail\" when a global beginning with \"d\" is introduced",
      "fullTitle": "Runner instance method checkGlobals(test) should emit \"fail\" when a global beginning with \"d\" is introduced",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should execute hooks after failed test if suite bail is true",
      "fullTitle": "Runner instance method hook() should execute hooks after failed test if suite bail is true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should augment hook title with current test title",
      "fullTitle": "Runner instance method hook() should augment hook title with current test title",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should increment `Runner#failures`",
      "fullTitle": "Runner instance method fail() should increment `Runner#failures`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set `Test#state` to \"failed\"",
      "fullTitle": "Runner instance method fail() should set `Test#state` to \"failed\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit \"fail\"",
      "fullTitle": "Runner instance method fail() should emit \"fail\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit a helpful message when failed with a string",
      "fullTitle": "Runner instance method fail() should emit a helpful message when failed with a string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit a the error when failed with an Error instance",
      "fullTitle": "Runner instance method fail() should emit a the error when failed with an Error instance",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit the error when failed with an Error-like object",
      "fullTitle": "Runner instance method fail() should emit the error when failed with an Error-like object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit a helpful message when failed with an Object",
      "fullTitle": "Runner instance method fail() should emit a helpful message when failed with an Object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit a helpful message when failed with an Array",
      "fullTitle": "Runner instance method fail() should emit a helpful message when failed with an Array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should recover if the error stack is not writable",
      "fullTitle": "Runner instance method fail() should recover if the error stack is not writable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return and not increment failures when test is pending",
      "fullTitle": "Runner instance method fail() should return and not increment failures when test is pending",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should increment .failures",
      "fullTitle": "Runner instance method fail() should increment .failures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit \"fail\"",
      "fullTitle": "Runner instance method fail() should emit \"fail\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not emit \"end\" if suite bail is not true",
      "fullTitle": "Runner instance method fail() should not emit \"end\" if suite bail is not true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw the \"multiple done\" error",
      "fullTitle": "Runner instance method fail() when Runner has stopped when test is not pending when error is the \"multiple done\" variety should throw the \"multiple done\" error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw a \"fatal\" error",
      "fullTitle": "Runner instance method fail() when Runner has stopped when test is not pending when error is not of the \"multiple done\" variety should throw a \"fatal\" error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit \"retry\" when a retryable test fails",
      "fullTitle": "Runner instance method run() should emit \"retry\" when a retryable test fails",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw an exception if something emits EVENT_TEST_END with a non-Test object",
      "fullTitle": "Runner instance method run() should not throw an exception if something emits EVENT_TEST_END with a non-Test object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should clean references after a run",
      "fullTitle": "Runner instance method run() should clean references after a run",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not clean references after a run when `cleanReferencesAfterRun` is `false`",
      "fullTitle": "Runner instance method run() should not clean references after a run when `cleanReferencesAfterRun` is `false`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not leak `Process.uncaughtException` listeners",
      "fullTitle": "Runner instance method run() should not leak `Process.uncaughtException` listeners",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should prettify the stack-trace",
      "fullTitle": "Runner instance method run() stack traces short should prettify the stack-trace",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should display the full stack-trace",
      "fullTitle": "Runner instance method run() stack traces long should display the full stack-trace",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not hang if overlong error message is single line",
      "fullTitle": "Runner instance method run() stack traces ginormous should not hang if overlong error message is single line",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not hang if overlong error message is multiple lines",
      "fullTitle": "Runner instance method run() stack traces ginormous should not hang if overlong error message is multiple lines",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a Promise with a failure count",
      "fullTitle": "Runner instance method runAsync() should return a Promise with a failure count",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass through options to Runner#run",
      "fullTitle": "Runner instance method runAsync() should pass through options to Runner#run",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove all listeners from itself",
      "fullTitle": "Runner instance method dispose() should remove all listeners from itself",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove \"error\" listeners from a test",
      "fullTitle": "Runner instance method dispose() should remove \"error\" listeners from a test",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove \"uncaughtException\" listeners from the process",
      "fullTitle": "Runner instance method dispose() should remove \"uncaughtException\" listeners from the process",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return when no tests to run",
      "fullTitle": "Runner instance method runTest() should return when no tests to run",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should allow unhandled errors to propagate through",
      "fullTitle": "Runner instance method allowUncaught() should allow unhandled errors to propagate through",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not allow unhandled errors in sync hooks to propagate through",
      "fullTitle": "Runner instance method allowUncaught() should not allow unhandled errors in sync hooks to propagate through",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should allow unhandled errors in sync hooks to propagate through",
      "fullTitle": "Runner instance method allowUncaught() should allow unhandled errors in sync hooks to propagate through",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "async - should allow unhandled errors in hooks to propagate through",
      "fullTitle": "Runner instance method allowUncaught() async - should allow unhandled errors in hooks to propagate through",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set _abort property to true",
      "fullTitle": "Runner instance method abort() should set _abort property to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the Runner",
      "fullTitle": "Runner instance method abort() should return the Runner",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Runner instance method _uncaught() when called with a non-Runner context should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should propagate error and throw",
      "fullTitle": "Runner instance method uncaught() when allow-uncaught is set to true should propagate error and throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail with a transient Runnable and a new Error coerced from the object",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is not an Error should fail with a transient Runnable and a new Error coerced from the object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should ignore argument and return",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is a Pending should ignore argument and return",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add the \"uncaught\" property to the Error",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error should add the \"uncaught\" property to the Error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail with a transient Runnable and the error",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when no Runnables are running should fail with a transient Runnable and the error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not emit start/end events",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when no Runnables are running when Runner is RUNNING should not emit start/end events",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit start/end events for the benefit of reporters",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when no Runnables are running when Runner is IDLE should emit start/end events for the benefit of reporters",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not emit start/end events, since this presumably would have already happened",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when no Runnables are running when Runner is STOPPED should not emit start/end events, since this presumably would have already happened",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when no Runnables are running when Runner is STOPPED should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should clear any pending timeouts",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run should clear any pending timeouts",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not attempt to fail again",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when current Runnable has already failed should not attempt to fail again",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attempt to fail",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when current Runnable has been marked pending should attempt to fail",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail with the current Runnable and the error",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when the current Runnable has already passed should fail with the current Runnable and the error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should abort the runner without emitting end event",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when the current Runnable has already passed should abort the runner without emitting end event",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should run callback(err) to handle failing and hooks",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when the current Runnable is still running when the current Runnable is a Test should run callback(err) to handle failing and hooks",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not notify test has ended",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when the current Runnable is still running when the current Runnable is a Test should not notify test has ended",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not notify run has ended",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when the current Runnable is still running when the current Runnable is a Test should not notify run has ended",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should run callback(err) to handle failing hook pattern",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when the current Runnable is still running when the current Runnable is a Hook should run callback(err) to handle failing hook pattern",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not notify test has ended",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when the current Runnable is still running when the current Runnable is a Hook should not notify test has ended",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not notify run has ended",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when the current Runnable is still running when the current Runnable is a Hook should not notify run has ended",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the Runner",
      "fullTitle": "Runner instance method linkPartialObjects() should return the Runner",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false",
      "fullTitle": "Runner instance method isParallelMode() should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Runner instance method workerReporter() should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should clone the Suite, omitting children",
      "fullTitle": "Suite instance method clone() should clone the Suite, omitting children",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reset the `delayed` state",
      "fullTitle": "Suite instance method reset() should reset the `delayed` state",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should forward reset to suites and tests",
      "fullTitle": "Suite instance method reset() should forward reset to suites and tests",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should forward reset to all hooks",
      "fullTitle": "Suite instance method reset() should forward reset to all hooks",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the timeout value",
      "fullTitle": "Suite instance method timeout() when no argument is passed should return the timeout value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the Suite object",
      "fullTitle": "Suite instance method timeout() when argument is passed should return the Suite object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should parse it",
      "fullTitle": "Suite instance method slow() when given a string should parse it",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the slow value",
      "fullTitle": "Suite instance method slow() when no argument is passed should return the slow value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the Suite object",
      "fullTitle": "Suite instance method slow() when argument is passed should return the Suite object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the bail value",
      "fullTitle": "Suite instance method bail() when no argument is passed should return the bail value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the Suite object",
      "fullTitle": "Suite instance method bail() when argument is passed should return the Suite object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "adds it to _beforeAll",
      "fullTitle": "Suite instance method beforeAll() wraps the passed in function in a Hook adds it to _beforeAll",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "appends title to hook",
      "fullTitle": "Suite instance method beforeAll() wraps the passed in function in a Hook appends title to hook",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "uses function name if available",
      "fullTitle": "Suite instance method beforeAll() wraps the passed in function in a Hook uses function name if available",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "adds it to _afterAll",
      "fullTitle": "Suite instance method afterAll() wraps the passed in function in a Hook adds it to _afterAll",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "appends title to hook",
      "fullTitle": "Suite instance method afterAll() wraps the passed in function in a Hook appends title to hook",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "uses function name if available",
      "fullTitle": "Suite instance method afterAll() wraps the passed in function in a Hook uses function name if available",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "adds it to _beforeEach",
      "fullTitle": "Suite instance method beforeEach() wraps the passed in function in a Hook adds it to _beforeEach",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "appends title to hook",
      "fullTitle": "Suite instance method beforeEach() wraps the passed in function in a Hook appends title to hook",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "uses function name if available",
      "fullTitle": "Suite instance method beforeEach() wraps the passed in function in a Hook uses function name if available",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not create a hook",
      "fullTitle": "Suite instance method beforeEach() when the suite is pending should not create a hook",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "adds it to _afterEach",
      "fullTitle": "Suite instance method afterEach() wraps the passed in function in a Hook adds it to _afterEach",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "appends title to hook",
      "fullTitle": "Suite instance method afterEach() wraps the passed in function in a Hook appends title to hook",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "uses function name if available",
      "fullTitle": "Suite instance method afterEach() wraps the passed in function in a Hook uses function name if available",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "does not create a second root suite",
      "fullTitle": "Suite instance method create() does not create a second root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "does not denote the root suite by being titleless",
      "fullTitle": "Suite instance method create() does not denote the root suite by being titleless",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "sets the parent on the added Suite",
      "fullTitle": "Suite instance method addSuite() sets the parent on the added Suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "copies the timeout value",
      "fullTitle": "Suite instance method addSuite() copies the timeout value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "copies the slow value",
      "fullTitle": "Suite instance method addSuite() copies the slow value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "adds the suite to the suites collection",
      "fullTitle": "Suite instance method addSuite() adds the suite to the suites collection",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "treats suite as pending if its parent is pending",
      "fullTitle": "Suite instance method addSuite() treats suite as pending if its parent is pending",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "sets the parent on the added test",
      "fullTitle": "Suite instance method addTest() sets the parent on the added test",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "copies the timeout value",
      "fullTitle": "Suite instance method addTest() copies the timeout value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "adds the test to the tests collection",
      "fullTitle": "Suite instance method addTest() adds the test to the tests collection",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "returns the suite title",
      "fullTitle": "Suite instance method fullTitle() when there is no parent returns the suite title",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "returns the combination of parent's and suite's title",
      "fullTitle": "Suite instance method fullTitle() when there is a parent returns the combination of parent's and suite's title",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "returns the suite title",
      "fullTitle": "Suite instance method titlePath() when there is no parent returns the suite title",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "returns the suite title",
      "fullTitle": "Suite instance method titlePath() when there is a parent the parent is the root suite returns the suite title",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "returns the concatenation of parent's and suite's title",
      "fullTitle": "Suite instance method titlePath() when there is a parent the parent is not the root suite returns the concatenation of parent's and suite's title",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return 0",
      "fullTitle": "Suite instance method total() when there are no nested suites or tests should return 0",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the number",
      "fullTitle": "Suite instance method total() when there are several tests in the suite should return the number",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return 0",
      "fullTitle": "Suite instance method eachTest(fn) when there are no nested suites or tests should return 0",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the number",
      "fullTitle": "Suite instance method eachTest(fn) when there are several tests in the suite should return the number",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the number",
      "fullTitle": "Suite instance method eachTest(fn) when there are several levels of nested suites should return the number",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw an error if the title isn't a string",
      "fullTitle": "Suite instance method constructor should throw an error if the title isn't a string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw if the title is a string",
      "fullTitle": "Suite instance method constructor should not throw if the title is a string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should report listened-for deprecated events as deprecated",
      "fullTitle": "Suite instance method constructor should report listened-for deprecated events as deprecated",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should convert a string to milliseconds",
      "fullTitle": "Suite instance method timeout() should convert a string to milliseconds",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true if a test has `only`",
      "fullTitle": "Suite instance method hasOnly() should return true if a test has `only`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true if a suite has `only`",
      "fullTitle": "Suite instance method hasOnly() should return true if a suite has `only`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true if nested suite has `only`",
      "fullTitle": "Suite instance method hasOnly() should return true if nested suite has `only`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false if no suite or test is marked `only`",
      "fullTitle": "Suite instance method hasOnly() should return false if no suite or test is marked `only`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should filter out all other tests and suites if a test has `only`",
      "fullTitle": "Suite instance method filterOnly() should filter out all other tests and suites if a test has `only`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should filter out all other tests and suites if a suite has `only`",
      "fullTitle": "Suite instance method filterOnly() should filter out all other tests and suites if a suite has `only`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call appendOnlySuite on parent",
      "fullTitle": "Suite instance method markOnly() should call appendOnlySuite on parent",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw an error if the title isn't a string",
      "fullTitle": "Test initialization should throw an error if the title isn't a string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw if the title is a string",
      "fullTitle": "Test initialization should not throw if the title is a string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should copy the title",
      "fullTitle": "Test .clone() should copy the title",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should copy the timeout value",
      "fullTitle": "Test .clone() should copy the timeout value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should copy the slow value",
      "fullTitle": "Test .clone() should copy the slow value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should copy the retries value",
      "fullTitle": "Test .clone() should copy the retries value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should copy the currentRetry value",
      "fullTitle": "Test .clone() should copy the currentRetry value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add/keep the retriedTest value",
      "fullTitle": "Test .clone() should add/keep the retriedTest value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should copy the globals value",
      "fullTitle": "Test .clone() should copy the globals value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should copy the parent value",
      "fullTitle": "Test .clone() should copy the parent value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should copy the file value",
      "fullTitle": "Test .clone() should copy the file value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reset the run state",
      "fullTitle": "Test .reset() should reset the run state",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call Runnable.reset",
      "fullTitle": "Test .reset() should call Runnable.reset",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not be pending by default",
      "fullTitle": "Test .isPending() should not be pending by default",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be pending when marked as such",
      "fullTitle": "Test .isPending() should be pending when marked as such",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be pending when its parent is pending",
      "fullTitle": "Test .isPending() should be pending when its parent is pending",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call appendOnlyTest on parent",
      "fullTitle": "Test .markOnly() should call appendOnlyTest on parent",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing sync and test is sync",
      "fullTitle": "a test that throws non-extensible should not pass if throwing sync and test is sync",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing sync and test is async",
      "fullTitle": "a test that throws non-extensible should not pass if throwing sync and test is async",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing async and test is async",
      "fullTitle": "a test that throws non-extensible should not pass if throwing async and test is async",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing sync and test is sync",
      "fullTitle": "a test that throws undefined should not pass if throwing sync and test is sync",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing sync and test is async",
      "fullTitle": "a test that throws undefined should not pass if throwing sync and test is async",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing async and test is async",
      "fullTitle": "a test that throws undefined should not pass if throwing async and test is async",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing sync and test is sync",
      "fullTitle": "a test that throws null should not pass if throwing sync and test is sync",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing sync and test is async",
      "fullTitle": "a test that throws null should not pass if throwing sync and test is async",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing async and test is async",
      "fullTitle": "a test that throws null should not pass if throwing async and test is async",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should error on timeout",
      "fullTitle": "timeouts should error on timeout",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\timeout.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should allow overriding per-test",
      "fullTitle": "timeouts should allow overriding per-test",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\timeout.spec.js",
      "duration": 50,
      "currentRetry": 0,
      "speed": "medium",
      "err": {}
    },
    {
      "title": "should work with timeout(0)",
      "fullTitle": "timeouts disabling should work with timeout(0)",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\timeout.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should work with timeout(0)",
      "fullTitle": "timeouts disabling using beforeEach should work with timeout(0)",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\timeout.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should work with timeout(0)",
      "fullTitle": "timeouts disabling using before should work with timeout(0)",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\timeout.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should suppress timeout(4)",
      "fullTitle": "timeouts disabling using timeout(0) should suppress timeout(4)",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\timeout.spec.js",
      "duration": 50,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should work with timeout(0)",
      "fullTitle": "timeouts disabling suite-level should work with timeout(0)",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\timeout.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should work with timeout(0)",
      "fullTitle": "timeouts disabling suite-level nested suite should work with timeout(0)",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\timeout.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove the wrapping function declaration",
      "fullTitle": "lib/utils clean() should remove the wrapping function declaration",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle newlines in the function declaration",
      "fullTitle": "lib/utils clean() should handle newlines in the function declaration",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove space character indentation from the function body",
      "fullTitle": "lib/utils clean() should remove space character indentation from the function body",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove tab character indentation from the function body",
      "fullTitle": "lib/utils clean() should remove tab character indentation from the function body",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle functions with tabs in their declarations",
      "fullTitle": "lib/utils clean() should handle functions with tabs in their declarations",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle named functions without space after name",
      "fullTitle": "lib/utils clean() should handle named functions without space after name",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle named functions with space after name",
      "fullTitle": "lib/utils clean() should handle named functions with space after name",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle functions with no space between the end and the closing brace",
      "fullTitle": "lib/utils clean() should handle functions with no space between the end and the closing brace",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle functions with parentheses in the same line",
      "fullTitle": "lib/utils clean() should handle functions with parentheses in the same line",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle empty functions",
      "fullTitle": "lib/utils clean() should handle empty functions",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should format a single line test function",
      "fullTitle": "lib/utils clean() should format a single line test function",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should format a multi line test indented with spaces",
      "fullTitle": "lib/utils clean() should format a multi line test indented with spaces",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should format a multi line test indented with tabs",
      "fullTitle": "lib/utils clean() should format a multi line test indented with tabs",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should format functions saved in windows style - spaces",
      "fullTitle": "lib/utils clean() should format functions saved in windows style - spaces",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should format functions saved in windows style - tabs",
      "fullTitle": "lib/utils clean() should format functions saved in windows style - tabs",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should format es6 arrow functions",
      "fullTitle": "lib/utils clean() should format es6 arrow functions",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should format es6 arrow functions with implicit return",
      "fullTitle": "lib/utils clean() should format es6 arrow functions with implicit return",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an object representation of a string created with a String constructor",
      "fullTitle": "lib/utils stringify() should return an object representation of a string created with a String constructor",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return Buffer with .toJSON representation",
      "fullTitle": "lib/utils stringify() should return Buffer with .toJSON representation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return Date object with .toISOString() + string prefix",
      "fullTitle": "lib/utils stringify() should return Date object with .toISOString() + string prefix",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return invalid Date object with .toString() + string prefix",
      "fullTitle": "lib/utils stringify() should return invalid Date object with .toString() + string prefix",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should canonicalize the object",
      "fullTitle": "lib/utils stringify() should canonicalize the object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle circular structures in objects",
      "fullTitle": "lib/utils stringify() should handle circular structures in objects",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle circular structures in arrays",
      "fullTitle": "lib/utils stringify() should handle circular structures in arrays",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle circular structures in functions",
      "fullTitle": "lib/utils stringify() should handle circular structures in functions",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle various non-undefined, non-null, non-object, non-array, non-date, and non-function values",
      "fullTitle": "lib/utils stringify() should handle various non-undefined, non-null, non-object, non-array, non-date, and non-function values",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle arrays",
      "fullTitle": "lib/utils stringify() should handle arrays",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle functions",
      "fullTitle": "lib/utils stringify() should handle functions",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle empty objects",
      "fullTitle": "lib/utils stringify() should handle empty objects",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle empty arrays",
      "fullTitle": "lib/utils stringify() should handle empty arrays",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle non-empty arrays",
      "fullTitle": "lib/utils stringify() should handle non-empty arrays",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle empty functions (with no properties)",
      "fullTitle": "lib/utils stringify() should handle empty functions (with no properties)",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle functions w/ properties",
      "fullTitle": "lib/utils stringify() should handle functions w/ properties",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle undefined values",
      "fullTitle": "lib/utils stringify() should handle undefined values",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should recurse",
      "fullTitle": "lib/utils stringify() should recurse",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "might get confusing",
      "fullTitle": "lib/utils stringify() might get confusing",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not freak out if it sees a primitive twice",
      "fullTitle": "lib/utils stringify() should not freak out if it sees a primitive twice",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should stringify dates",
      "fullTitle": "lib/utils stringify() should stringify dates",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle object without an Object prototype",
      "fullTitle": "lib/utils stringify() should handle object without an Object prototype",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle Symbol",
      "fullTitle": "lib/utils stringify() should handle Symbol",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle length properties that cannot be coerced to a number",
      "fullTitle": "lib/utils stringify() should handle length properties that cannot be coerced to a number",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should show the handle -0 situations",
      "fullTitle": "lib/utils stringify() #Number should show the handle -0 situations",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should work well with `NaN` and `Infinity`",
      "fullTitle": "lib/utils stringify() #Number should work well with `NaN` and `Infinity`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "floats and ints",
      "fullTitle": "lib/utils stringify() #Number floats and ints",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should work with bigints when possible",
      "fullTitle": "lib/utils stringify() #Number should work with bigints when possible",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should represent the actual full result",
      "fullTitle": "lib/utils stringify() canonicalize example should represent the actual full result",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should recognize various types",
      "fullTitle": "lib/utils type() should recognize various types",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should recognize null and undefined",
      "fullTitle": "lib/utils type() when toString on null or undefined stringifies window should recognize null and undefined",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should recognize various types",
      "fullTitle": "lib/utils canonicalType() should recognize various types",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should recognize null and undefined",
      "fullTitle": "lib/utils canonicalType() when toString on null or undefined stringifies window should recognize null and undefined",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true if the value is Promise-ish",
      "fullTitle": "lib/utils isPromise() should return true if the value is Promise-ish",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false if the value is not an object",
      "fullTitle": "lib/utils isPromise() should return false if the value is not an object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false if the value is an object w/o a \"then\" function",
      "fullTitle": "lib/utils isPromise() should return false if the value is an object w/o a \"then\" function",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false if the object is null",
      "fullTitle": "lib/utils isPromise() should return false if the object is null",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "replaces the usual xml suspects",
      "fullTitle": "lib/utils escape() replaces the usual xml suspects",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "replaces invalid xml characters",
      "fullTitle": "lib/utils escape() replaces invalid xml characters",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return its input as string wrapped in single quotes",
      "fullTitle": "lib/utils sQuote() should return its input as string wrapped in single quotes",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return its input as string wrapped in double quotes",
      "fullTitle": "lib/utils dQuote() should return its input as string wrapped in double quotes",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an object with a null prototype",
      "fullTitle": "lib/utils createMap() should return an object with a null prototype",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add props to the object",
      "fullTitle": "lib/utils createMap() should add props to the object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add props from all object parameters to the object",
      "fullTitle": "lib/utils createMap() should add props from all object parameters to the object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should convert the string to lowercase",
      "fullTitle": "lib/utils slug() should convert the string to lowercase",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should convert whitespace to dashes",
      "fullTitle": "lib/utils slug() should convert whitespace to dashes",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should strip non-alphanumeric and non-dash characters",
      "fullTitle": "lib/utils slug() should strip non-alphanumeric and non-dash characters",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should disallow consecutive dashes",
      "fullTitle": "lib/utils slug() should disallow consecutive dashes",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a copy of the array",
      "fullTitle": "lib/utils castArray() when provided an array value should return a copy of the array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an array containing the arguments",
      "fullTitle": "lib/utils castArray() when provided an \"arguments\" value should return an array containing the arguments",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an array containing the object only",
      "fullTitle": "lib/utils castArray() when provided an object should return an array containing the object only",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an empty array",
      "fullTitle": "lib/utils castArray() when provided no parameters should return an empty array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an array containing the primitive value only",
      "fullTitle": "lib/utils castArray() when provided a primitive value should return an array containing the primitive value only",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an array containing a null value only",
      "fullTitle": "lib/utils castArray() when provided null should return an array containing a null value only",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should print a deprecation message",
      "fullTitle": "lib/utils lookupFiles() when run in Node.js should print a deprecation message",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should delegate to new location of lookupFiles()",
      "fullTitle": "lib/utils lookupFiles() when run in Node.js should delegate to new location of lookupFiles()",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "lib/utils lookupFiles() when run in browser should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a non-empty string",
      "fullTitle": "lib/utils uniqueID() should return a non-empty string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a BufferedWorkerPool instance",
      "fullTitle": "class BufferedWorkerPool static method create() should return a BufferedWorkerPool instance",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw",
      "fullTitle": "class BufferedWorkerPool static method create() when passed no arguments should not throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a serialized string",
      "fullTitle": "class BufferedWorkerPool static method serializeOptions() should return a serialized string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw",
      "fullTitle": "class BufferedWorkerPool static method serializeOptions() when passed no arguments should not throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not perform serialization twice",
      "fullTitle": "class BufferedWorkerPool static method serializeOptions() when called multiple times with the same object should not perform serialization twice",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the same value",
      "fullTitle": "class BufferedWorkerPool static method serializeOptions() when called multiple times with the same object should return the same value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should apply defaults",
      "fullTitle": "class BufferedWorkerPool constructor should apply defaults",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the object returned by `workerpool.Pool#stats`",
      "fullTitle": "class BufferedWorkerPool instance method stats() should return the object returned by `workerpool.Pool#stats`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should serialize the options object",
      "fullTitle": "class BufferedWorkerPool instance method run() should serialize the options object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should deserialize the result",
      "fullTitle": "class BufferedWorkerPool instance method run() should deserialize the result",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reject",
      "fullTitle": "class BufferedWorkerPool instance method run() when passed no arguments should reject",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reject",
      "fullTitle": "class BufferedWorkerPool instance method run() when passed a non-string filepath should reject",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should delegate to the underlying pool w/ \"force\" behavior",
      "fullTitle": "class BufferedWorkerPool instance method terminate() when called with `force` should delegate to the underlying pool w/ \"force\" behavior",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should delegate to the underlying pool w/o \"force\" behavior",
      "fullTitle": "class BufferedWorkerPool instance method terminate() when called without `force` should delegate to the underlying pool w/o \"force\" behavior",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should use the YAML parser",
      "fullTitle": "cli/config loadConfig() when parsing succeeds when supplied a filepath with \".yaml\" extension should use the YAML parser",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should use the YAML parser",
      "fullTitle": "cli/config loadConfig() when parsing succeeds when supplied a filepath with \".yml\" extension should use the YAML parser",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should use the JS parser",
      "fullTitle": "cli/config loadConfig() when parsing succeeds when supplied a filepath with \".js\" extension should use the JS parser",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should use the JS parser",
      "fullTitle": "cli/config loadConfig() when parsing succeeds when supplied a filepath with \".cjs\" extension should use the JS parser",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should use the JSON parser",
      "fullTitle": "cli/config loadConfig() when parsing succeeds when supplied a filepath with \".jsonc\" extension should use the JSON parser",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should use the JSON parser",
      "fullTitle": "cli/config loadConfig() when parsing succeeds when supplied a filepath with \".json\" extension should use the JSON parser",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should use the JSON parser",
      "fullTitle": "cli/config loadConfig() when supplied a filepath with unsupported extension should use the JSON parser",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "cli/config loadConfig() when config file parsing fails should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should look for one of the config files using findup-sync",
      "fullTitle": "cli/config findConfig() should look for one of the config files using findup-sync",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should support an explicit `cwd`",
      "fullTitle": "cli/config findConfig() should support an explicit `cwd`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--icu-data-dir should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --icu-data-dir should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--title should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --title should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-import-meta-resolve should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-import-meta-resolve should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--use-largepages should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --use-largepages should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-tls should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-tls should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-event-categories should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-event-categories should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--conditions should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --conditions should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-event-file-pattern should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-event-file-pattern should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--disable-proto should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --disable-proto should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-worker should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-worker should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--diagnostic-dir should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --diagnostic-dir should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--debug-arraybuffer-allocations should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --debug-arraybuffer-allocations should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--max-http-header-size should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --max-http-header-size should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--v8-pool-size should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --v8-pool-size should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--tls-max-v1.2 should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --tls-max-v1.2 should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--zero-fill-buffers should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --zero-fill-buffers should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-sync-io should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-sync-io should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--disallow-code-generation-from-strings should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --disallow-code-generation-from-strings should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--force-context-aware should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --force-context-aware should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--report-dir should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --report-dir should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--pending-deprecation should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --pending-deprecation should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--use-bundled-ca should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --use-bundled-ca should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--report-filename should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --report-filename should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--report-compact should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --report-compact should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--report-on-fatalerror should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --report-on-fatalerror should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--perf-prof should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --perf-prof should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--report-signal should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --report-signal should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--preserve-symlinks-main should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --preserve-symlinks-main should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--openssl-config should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --openssl-config should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--tls-cipher-list should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --tls-cipher-list should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--use-openssl-ca should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --use-openssl-ca should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-sigint should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-sigint should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--no-node-snapshot should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --no-node-snapshot should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--track-heap-objects should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --track-heap-objects should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-repl-await should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-repl-await should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-json-modules should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-json-modules should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--perf-prof-unwinding-info should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --perf-prof-unwinding-info should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--abort-on-uncaught-exception should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --abort-on-uncaught-exception should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--interpreted-frames-native-stack should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --interpreted-frames-native-stack should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--perf-basic-prof-only-functions should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --perf-basic-prof-only-functions should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--max-old-space-size should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --max-old-space-size should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--perf-basic-prof should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --perf-basic-prof should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--stack-trace-limit should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --stack-trace-limit should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--jitless should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --jitless should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--huge-max-old-generation-size should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --huge-max-old-generation-size should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--report-uncaught-exception should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --report-uncaught-exception should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--report-on-signal should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --report-on-signal should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-policy should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-policy should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--enable-source-maps should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --enable-source-maps should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-loader should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-loader should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--tls-min-v1.2 should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --tls-min-v1.2 should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-modules should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-modules should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-wasm-modules should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-wasm-modules should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--policy-integrity should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --policy-integrity should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-vm-modules should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-vm-modules should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-report should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-report should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-wasi-unstable-preview1 should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-wasi-unstable-preview1 should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-uncaught should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-uncaught should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--insecure-http-parser should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --insecure-http-parser should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--frozen-intrinsics should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --frozen-intrinsics should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--tls-keylog should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --tls-keylog should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--input-type should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --input-type should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--heapsnapshot-signal should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --heapsnapshot-signal should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--tls-max-v1.3 should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --tls-max-v1.3 should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--http-parser should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --http-parser should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--http-server-default-timeout should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --http-server-default-timeout should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-specifier-resolution should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-specifier-resolution should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--no-deprecation should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --no-deprecation should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--tls-min-v1.0 should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --tls-min-v1.0 should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--no-force-async-hooks-checks should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --no-force-async-hooks-checks should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--no-warnings should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --no-warnings should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--preserve-symlinks should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --preserve-symlinks should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--tls-min-v1.1 should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --tls-min-v1.1 should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--inspect-port should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --inspect-port should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-exit should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-exit should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--redirect-warnings should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --redirect-warnings should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--tls-min-v1.3 should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --tls-min-v1.3 should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--throw-deprecation should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --throw-deprecation should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-deprecation should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-deprecation should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-warnings should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-warnings should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--unhandled-rejections should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --unhandled-rejections should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--inspect should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --inspect should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--napi-modules should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --napi-modules should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--inspect-brk should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --inspect-brk should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--inspect-publish-uid should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --inspect-publish-uid should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--debug-port should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --debug-port should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-events-enabled should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-events-enabled should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--report-directory should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --report-directory should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--prof-process should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --prof-process should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--es-module-specifier-resolution should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --es-module-specifier-resolution should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--loader should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --loader should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--require should return false",
      "fullTitle": "node-flags isNodeFlag() for all allowed node env flags which conflict with mocha flags --require should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "-r should return false",
      "fullTitle": "node-flags isNodeFlag() for all allowed node env flags which conflict with mocha flags -r should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should require leading dashes",
      "fullTitle": "node-flags isNodeFlag() when expecting leading dashes should require leading dashes",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for flags starting with \"preserve-symlinks\"",
      "fullTitle": "node-flags isNodeFlag() special cases should return true for flags starting with \"preserve-symlinks\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for flags starting with \"harmony-\" or \"harmony_\"",
      "fullTitle": "node-flags isNodeFlag() special cases should return true for flags starting with \"harmony-\" or \"harmony_\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for flags starting with \"trace-\" or \"trace_\"",
      "fullTitle": "node-flags isNodeFlag() special cases should return true for flags starting with \"trace-\" or \"trace_\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for \"harmony\" itself",
      "fullTitle": "node-flags isNodeFlag() special cases should return true for \"harmony\" itself",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for \"gc-global\"",
      "fullTitle": "node-flags isNodeFlag() special cases should return true for \"gc-global\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for \"es-staging\"",
      "fullTitle": "node-flags isNodeFlag() special cases should return true for \"es-staging\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for \"use-strict\"",
      "fullTitle": "node-flags isNodeFlag() special cases should return true for \"use-strict\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for flags starting with \"--v8-\"",
      "fullTitle": "node-flags isNodeFlag() special cases should return true for flags starting with \"--v8-\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for inspect flags",
      "fullTitle": "node-flags impliesNoTimeouts() should return true for inspect flags",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle single v8 flags",
      "fullTitle": "node-flags unparseNodeFlags() should handle single v8 flags",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle multiple v8 flags",
      "fullTitle": "node-flags unparseNodeFlags() should handle multiple v8 flags",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an object containing positional args, defaults, and anti-reloading flags",
      "fullTitle": "options loadOptions() when no parameter provided should return an object containing positional args, defaults, and anti-reloading flags",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return merged options incl. package.json opts",
      "fullTitle": "options loadOptions() when parameter provided package.json when path to package.json (`--package <path>`) is valid should return merged options incl. package.json opts",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not try to find a package.json",
      "fullTitle": "options loadOptions() when parameter provided package.json when path to package.json (`--package <path>`) is valid should not try to find a package.json",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set package = false",
      "fullTitle": "options loadOptions() when parameter provided package.json when path to package.json (`--package <path>`) is valid should set package = false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "options loadOptions() when parameter provided package.json when path to package.json (`--package <path>`) is invalid should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return merged options incl. found package.json",
      "fullTitle": "options loadOptions() when parameter provided package.json when path to package.json unspecified should return merged options incl. found package.json",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set package = false",
      "fullTitle": "options loadOptions() when parameter provided package.json when path to package.json unspecified should set package = false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return parsed args and default config",
      "fullTitle": "options loadOptions() when parameter provided package.json when called with package = false (`--no-package`) should return parsed args and default config",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not look for package.json",
      "fullTitle": "options loadOptions() when parameter provided package.json when called with package = false (`--no-package`) should not look for package.json",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set package = false",
      "fullTitle": "options loadOptions() when parameter provided package.json when called with package = false (`--no-package`) should set package = false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return parsed args, default config and package.json",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with config = false (`--no-config`) should return parsed args, default config and package.json",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not attempt to load a config file",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with config = false (`--no-config`) should not attempt to load a config file",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not attempt to find a config file",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with config = false (`--no-config`) should not attempt to find a config file",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set config = false",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with config = false (`--no-config`) should set config = false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not look for a config",
      "fullTitle": "options loadOptions() when parameter provided rc file when path to config (`--config <path>`) is invalid should not look for a config",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attempt to load file at path",
      "fullTitle": "options loadOptions() when parameter provided rc file when path to config (`--config <path>`) is invalid should attempt to load file at path",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw to warn the user",
      "fullTitle": "options loadOptions() when parameter provided rc file when path to config (`--config <path>`) is invalid should throw to warn the user",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should look for a config",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with unspecified config when an rc file would be found should look for a config",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attempt to load file at found path",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with unspecified config when an rc file would be found should attempt to load file at found path",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set config = false",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with unspecified config when an rc file would be found should set config = false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should look for a config",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with unspecified config when an rc file would not be found should look for a config",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not attempt to load a config file",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with unspecified config when an rc file would not be found should not attempt to load a config file",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set config = false",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with unspecified config when an rc file would not be found should set config = false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should prioritize package.json over defaults",
      "fullTitle": "options loadOptions() config priority should prioritize package.json over defaults",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 77,
      "currentRetry": 0,
      "speed": "slow",
      "err": {}
    },
    {
      "title": "should prioritize rc file over package.json",
      "fullTitle": "options loadOptions() config priority should prioritize rc file over package.json",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 75,
      "currentRetry": 0,
      "speed": "medium",
      "err": {}
    },
    {
      "title": "should prioritize args over rc file",
      "fullTitle": "options loadOptions() config priority should prioritize args over rc file",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 72,
      "currentRetry": 0,
      "speed": "medium",
      "err": {}
    },
    {
      "title": "should return basic parsed arguments and flag",
      "fullTitle": "options loadOptions() when called with a one-and-done arg \"help\" should return basic parsed arguments and flag",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return basic parsed arguments and flag",
      "fullTitle": "options loadOptions() when called with a one-and-done arg \"h\" should return basic parsed arguments and flag",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return basic parsed arguments and flag",
      "fullTitle": "options loadOptions() when called with a one-and-done arg \"version\" should return basic parsed arguments and flag",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return basic parsed arguments and flag",
      "fullTitle": "options loadOptions() when called with a one-and-done arg \"V\" should return basic parsed arguments and flag",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return basic parsed arguments and flag",
      "fullTitle": "options loadOptions() when called with a one-and-done arg \"list-interfaces\" should return basic parsed arguments and flag",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return basic parsed arguments and flag",
      "fullTitle": "options loadOptions() when called with a one-and-done arg \"list-reporters\" should return basic parsed arguments and flag",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not concatenate the default value",
      "fullTitle": "options loadOptions() \"extension\" handling when user supplies \"extension\" option should not concatenate the default value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should retain the default",
      "fullTitle": "options loadOptions() \"extension\" handling when user does not supply \"extension\" option should retain the default",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should place both - unsplitted - into the positional arguments array",
      "fullTitle": "options loadOptions() \"spec\" handling when user supplies \"spec\" in config and positional arguments should place both - unsplitted - into the positional arguments array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not split option values by comma",
      "fullTitle": "options loadOptions() \"ignore\" handling should not split option values by comma",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should disallow an array of names",
      "fullTitle": "helpers validateLegacyPlugin() when used with \"reporter\" key should disallow an array of names",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail to recognize an unknown reporter",
      "fullTitle": "helpers validateLegacyPlugin() when used with \"reporter\" key should fail to recognize an unknown reporter",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should disallow an array of names",
      "fullTitle": "helpers validateLegacyPlugin() when used with an \"interfaces\" key should disallow an array of names",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail to recognize an unknown interface",
      "fullTitle": "helpers validateLegacyPlugin() when used with an \"interfaces\" key should fail to recognize an unknown interface",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail",
      "fullTitle": "helpers validateLegacyPlugin() when used with an unknown plugin type should fail",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail and report the original error",
      "fullTitle": "helpers validateLegacyPlugin() when a plugin throws an exception upon load should fail and report the original error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a flat array",
      "fullTitle": "helpers list() when provided a flat array should return a flat array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a flat array",
      "fullTitle": "helpers list() when provided a nested array should return a flat array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a flat array",
      "fullTitle": "helpers list() when given a comma-delimited string should return a flat array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option retries",
      "fullTitle": "command run builder number type should include option retries",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option jobs",
      "fullTitle": "command run builder number type should include option jobs",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option config",
      "fullTitle": "command run builder string type should include option config",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option fgrep",
      "fullTitle": "command run builder string type should include option fgrep",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option grep",
      "fullTitle": "command run builder string type should include option grep",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option package",
      "fullTitle": "command run builder string type should include option package",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option reporter",
      "fullTitle": "command run builder string type should include option reporter",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option ui",
      "fullTitle": "command run builder string type should include option ui",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option slow",
      "fullTitle": "command run builder string type should include option slow",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option timeout",
      "fullTitle": "command run builder string type should include option timeout",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option allow-uncaught",
      "fullTitle": "command run builder boolean type should include option allow-uncaught",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option async-only",
      "fullTitle": "command run builder boolean type should include option async-only",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option bail",
      "fullTitle": "command run builder boolean type should include option bail",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option check-leaks",
      "fullTitle": "command run builder boolean type should include option check-leaks",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option color",
      "fullTitle": "command run builder boolean type should include option color",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option delay",
      "fullTitle": "command run builder boolean type should include option delay",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option diff",
      "fullTitle": "command run builder boolean type should include option diff",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option exit",
      "fullTitle": "command run builder boolean type should include option exit",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option forbid-only",
      "fullTitle": "command run builder boolean type should include option forbid-only",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option forbid-pending",
      "fullTitle": "command run builder boolean type should include option forbid-pending",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option full-trace",
      "fullTitle": "command run builder boolean type should include option full-trace",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option growl",
      "fullTitle": "command run builder boolean type should include option growl",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option inline-diffs",
      "fullTitle": "command run builder boolean type should include option inline-diffs",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option invert",
      "fullTitle": "command run builder boolean type should include option invert",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option list-interfaces",
      "fullTitle": "command run builder boolean type should include option list-interfaces",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option list-reporters",
      "fullTitle": "command run builder boolean type should include option list-reporters",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option no-colors",
      "fullTitle": "command run builder boolean type should include option no-colors",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option parallel",
      "fullTitle": "command run builder boolean type should include option parallel",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option recursive",
      "fullTitle": "command run builder boolean type should include option recursive",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option sort",
      "fullTitle": "command run builder boolean type should include option sort",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option watch",
      "fullTitle": "command run builder boolean type should include option watch",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option extension",
      "fullTitle": "command run builder array type should include option extension",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option file",
      "fullTitle": "command run builder array type should include option file",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option global",
      "fullTitle": "command run builder array type should include option global",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option ignore",
      "fullTitle": "command run builder array type should include option ignore",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option reporter-option",
      "fullTitle": "command run builder array type should include option reporter-option",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option require",
      "fullTitle": "command run builder array type should include option require",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option spec",
      "fullTitle": "command run builder array type should include option spec",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option watch-files",
      "fullTitle": "command run builder array type should include option watch-files",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option watch-ignore",
      "fullTitle": "command run builder array type should include option watch-ignore",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the Mocha instance",
      "fullTitle": "Mocha instance method parallelMode() when `Mocha` is running in Node.js should return the Mocha instance",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 6,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not swap the Runner, nor change lazy loading setting",
      "fullTitle": "Mocha instance method parallelMode() when `Mocha` is running in Node.js when parallel mode is already enabled should not swap the Runner, nor change lazy loading setting",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not swap the Runner, nor change lazy loading setting",
      "fullTitle": "Mocha instance method parallelMode() when `Mocha` is running in Node.js when parallel mode is already disabled should not swap the Runner, nor change lazy loading setting",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should enable parallel mode",
      "fullTitle": "Mocha instance method parallelMode() when `Mocha` is running in Node.js when `Mocha` instance in serial mode when passed `true` value when `Mocha` instance is in `INIT` state should enable parallel mode",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Mocha instance method parallelMode() when `Mocha` is running in Node.js when `Mocha` instance in serial mode when passed `true` value when `Mocha` instance is not in `INIT` state should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should enable serial mode",
      "fullTitle": "Mocha instance method parallelMode() when `Mocha` is running in Node.js when `Mocha` instance in serial mode when passed non-`true` value when `Mocha` instance is in `INIT` state should enable serial mode",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add the given file to the files array",
      "fullTitle": "Mocha instance method addFile() should add the given file to the files array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method addFile() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should load all files from the files array",
      "fullTitle": "Mocha instance method loadFiles() should load all files from the files array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should execute the optional callback if given",
      "fullTitle": "Mocha instance method loadFiles() should execute the optional callback if given",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should delegate Mocha.unloadFile() for each item in its list of files",
      "fullTitle": "Mocha instance method unloadFiles() should delegate Mocha.unloadFile() for each item in its list of files",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 9,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method unloadFiles() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should load from current working directory",
      "fullTitle": "Mocha instance method reporter() when a reporter exists relative to the cwd should load from current working directory",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw \"invalid reporter\" exception",
      "fullTitle": "Mocha instance method reporter() when a reporter exists relative to the cwd when the reporter throws upon load should throw \"invalid reporter\" exception",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should warn about the error before throwing",
      "fullTitle": "Mocha instance method reporter() when a reporter exists relative to the cwd when the reporter throws upon load should warn about the error before throwing",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should load from module path",
      "fullTitle": "Mocha instance method reporter() when a reporter exists relative to the \"mocha\" module path should load from module path",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw \"invalid reporter\" exception",
      "fullTitle": "Mocha instance method reporter() when a reporter exists relative to the \"mocha\" module path when the reporter throws upon load should throw \"invalid reporter\" exception",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should warn about the error before throwing",
      "fullTitle": "Mocha instance method reporter() when a reporter exists relative to the \"mocha\" module path when the reporter throws upon load should warn about the error before throwing",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reset referencesCleaned and allow for next run",
      "fullTitle": "Mocha instance method unloadFiles() should reset referencesCleaned and allow for next run",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not be allowed when the current instance is already disposed",
      "fullTitle": "Mocha instance method unloadFiles() should not be allowed when the current instance is already disposed",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the `Mocha` instance",
      "fullTitle": "Mocha instance method lazyLoadFiles() should return the `Mocha` instance",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should enable eager loading",
      "fullTitle": "Mocha instance method lazyLoadFiles() when passed a non-`true` value should enable eager loading",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should enable lazy loading",
      "fullTitle": "Mocha instance method lazyLoadFiles() when passed `true` should enable lazy loading",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should unload a specific file from cache",
      "fullTitle": "Mocha static method unloadFile() should unload a specific file from cache",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should start in \"IDLE\" state",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner constructor should start in \"IDLE\" state",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should disallow an invalid state transition",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance property _state should disallow an invalid state transition",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should change the state to COMPLETE",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner event EVENT_RUN_END should change the state to COMPLETE",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit `EVENT_RUN_BEGIN`",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() should emit `EVENT_RUN_BEGIN`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should create object references",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when instructed to link objects should create object references",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should result in an uncaught exception",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when instructed to link objects when event data object is missing an ID should result in an uncaught exception",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should recover",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when a worker fails should recover",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should delegate to Runner#uncaught",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when a worker fails should delegate to Runner#uncaught",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not force-terminate",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when suite should bail when no event contains an error should not force-terminate",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should cleanly terminate the thread pool",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when suite should bail when an event contains an error and has positive failures when subsequent files have not yet been run should cleanly terminate the thread pool",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should cleanly terminate the thread pool",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when suite should bail when an event contains an error and has positive failures when subsequent files already started running should cleanly terminate the thread pool",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not force-terminate",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when a suite has a bail flag when no event contains an error should not force-terminate",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should cleanly terminate the thread pool",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when a suite has a bail flag when an event contains an error and has positive failures when subsequent files have not yet been run should cleanly terminate the thread pool",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should cleanly terminate the thread pool",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when a suite has a bail flag when an event contains an error and has positive failures when subsequent files already started running should cleanly terminate the thread pool",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should cleanly terminate the thread pool",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when a suite has a bail flag when an event contains an error and has positive failures when subsequent files have not yet been run should cleanly terminate the thread pool",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the runner",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method linkPartialObjects() should return the runner",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method isParallelMode() should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return its context",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method workerReporter() should return its context",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should listen for Runner events",
      "fullTitle": "ParallelBuffered constructor should listen for Runner events",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\reporters\\parallel-buffered.spec.js",
      "duration": 8,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should listen for Runner events expecting to occur once",
      "fullTitle": "ParallelBuffered constructor should listen for Runner events expecting to occur once",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\reporters\\parallel-buffered.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove all listeners",
      "fullTitle": "ParallelBuffered event on EVENT_RUN_END should remove all listeners",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\reporters\\parallel-buffered.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should populate its `events` array with SerializableEvents",
      "fullTitle": "ParallelBuffered event on any other event listened for should populate its `events` array with SerializableEvents",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\reporters\\parallel-buffered.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should execute its callback with a SerializableWorkerResult",
      "fullTitle": "ParallelBuffered instance method done should execute its callback with a SerializableWorkerResult",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\reporters\\parallel-buffered.spec.js",
      "duration": 6,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reset its `events` prop",
      "fullTitle": "ParallelBuffered instance method done should reset its `events` prop",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\reporters\\parallel-buffered.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the value",
      "fullTitle": "serializer function serialize when passed a non-object value should return the value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the value",
      "fullTitle": "serializer function serialize when passed an object value w/o a `serialize` method should return the value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the result of the `serialize` method",
      "fullTitle": "serializer function serialize when passed an object value having a `serialize` method should return the result of the `serialize` method",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `undefined`",
      "fullTitle": "serializer function serialize when not passed anything should return `undefined`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `undefined`",
      "fullTitle": "serializer function deserialize when passed nothing should return `undefined`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the value",
      "fullTitle": "serializer function deserialize when passed a non-object value should return the value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the value",
      "fullTitle": "serializer function deserialize when passed an object value which is not a SerializedWorkerResult should return the value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the result of `SerializableWorkerResult.deserialize` called on the value",
      "fullTitle": "serializer function deserialize when passed a SerializedWorkerResult object should return the result of `SerializableWorkerResult.deserialize` called on the value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw \"invalid arg value\" error",
      "fullTitle": "serializer SerializableEvent constructor when called without `eventName` should throw \"invalid arg value\" error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw \"invalid arg type\" error",
      "fullTitle": "serializer SerializableEvent constructor when called with a non-object `rawObject` should throw \"invalid arg type\" error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should mutate the instance in-place",
      "fullTitle": "serializer SerializableEvent instance method serialize should mutate the instance in-place",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should freeze the instance",
      "fullTitle": "serializer SerializableEvent instance method serialize should freeze the instance",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call the `serialize` method",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an object with a `serialize` method should call the `serialize` method",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call the `serialize` method",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an object containing an object with a `serialize` method should call the `serialize` method",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove the method",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an object containing a non-`serialize` method should remove the method",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should serialize the array",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an object containing an array should serialize the array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should serialize the error",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an error should serialize the error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should retain own props",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an error should retain own props",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not retain not-own props",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an error should not retain not-own props",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should serialize the Error",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an object containing a top-level prop with an Error value should serialize the Error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should serialize the Error",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an object containing a nested prop with an Error value should serialize the Error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a new object w/ null prototype",
      "fullTitle": "serializer SerializableEvent static method deserialize should return a new object w/ null prototype",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw \"invalid arg type\" error",
      "fullTitle": "serializer SerializableEvent static method deserialize when passed a falsy parameter should throw \"invalid arg type\" error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should ignore __proto__",
      "fullTitle": "serializer SerializableEvent static method deserialize when passed value contains `data` prop should ignore __proto__",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should create an Error instance from the nested serialized Error prop",
      "fullTitle": "serializer SerializableEvent static method deserialize when passed value contains `data` prop when `data` prop contains a nested serialized Error prop should create an Error instance from the nested serialized Error prop",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should create an Error instance from the prop",
      "fullTitle": "serializer SerializableEvent static method deserialize when passed value contains an `error` prop should create an Error instance from the prop",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should create a new prop having a function value",
      "fullTitle": "serializer SerializableEvent static method deserialize when passed value data contains a prop beginning with \"$$\" should create a new prop having a function value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should create a new prop returning the original value",
      "fullTitle": "serializer SerializableEvent static method deserialize when passed value data contains a prop beginning with \"$$\" should create a new prop returning the original value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove the prop with the \"$$\" prefix",
      "fullTitle": "serializer SerializableEvent static method deserialize when passed value data contains a prop beginning with \"$$\" should remove the prop with the \"$$\" prefix",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should deserialize each prop",
      "fullTitle": "serializer SerializableEvent static method deserialize when the value data contains a prop with an array value should deserialize each prop",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 18,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should instantiate a SerializableEvent",
      "fullTitle": "serializer SerializableEvent static method create should instantiate a SerializableEvent",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a new SerializableWorkerResult instance",
      "fullTitle": "serializer SerializableWorkerResult static method create should return a new SerializableWorkerResult instance",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `true`",
      "fullTitle": "serializer SerializableWorkerResult static method isSerializedWorkerResult when passed an instance should return `true`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `true`",
      "fullTitle": "serializer SerializableWorkerResult static method isSerializedWorkerResult when passed an object with an appropriate `__type` prop should return `true`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `false`",
      "fullTitle": "serializer SerializableWorkerResult static method isSerializedWorkerResult when passed an object without an appropriate `__type` prop should return `false`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call SerializableEvent#deserialize on each item in its `events` prop",
      "fullTitle": "serializer SerializableWorkerResult static method deserialize should call SerializableEvent#deserialize on each item in its `events` prop",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the deserialized value",
      "fullTitle": "serializer SerializableWorkerResult static method deserialize should return the deserialized value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a read-only value",
      "fullTitle": "serializer SerializableWorkerResult instance method serialize should return a read-only value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call `SerializableEvent#serialize` of each of its events",
      "fullTitle": "serializer SerializableWorkerResult instance method serialize should call `SerializableEvent#serialize` of each of its events",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add a readonly `__type` prop",
      "fullTitle": "serializer SerializableWorkerResult constructor should add a readonly `__type` prop",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should get a stack-trace as a string and prettify it",
      "fullTitle": "stackTraceFilter() on node on POSIX OS should get a stack-trace as a string and prettify it",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\stack-trace-filter.spec.js",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not ignore other bower_components and components",
      "fullTitle": "stackTraceFilter() on node on POSIX OS does not ignore other bower_components and components",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\stack-trace-filter.spec.js",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should replace absolute with relative paths",
      "fullTitle": "stackTraceFilter() on node on POSIX OS should replace absolute with relative paths",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\stack-trace-filter.spec.js",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should not replace absolute path which has cwd as infix",
      "fullTitle": "stackTraceFilter() on node on POSIX OS should not replace absolute path which has cwd as infix",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\stack-trace-filter.spec.js",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should work on Windows",
      "fullTitle": "stackTraceFilter() on node on Windows should work on Windows",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\stack-trace-filter.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "does not strip out other bower_components",
      "fullTitle": "stackTraceFilter() on browser does not strip out other bower_components",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\stack-trace-filter.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the current working directory",
      "fullTitle": "utils function cwd() should return the current working directory",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return \"function\" if the parameter is an async function",
      "fullTitle": "utils function type() should return \"function\" if the parameter is an async function",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return \"error\" if the parameter is an Error",
      "fullTitle": "utils function type() should return \"error\" if the parameter is an Error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return \"buffer\" if the parameter is a Buffer",
      "fullTitle": "utils function canonicalType() should return \"buffer\" if the parameter is a Buffer",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return \"asyncfunction\" if the parameter is an async function",
      "fullTitle": "utils function canonicalType() should return \"asyncfunction\" if the parameter is an async function",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "worker when run as main process should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 69,
      "currentRetry": 0,
      "speed": "medium",
      "err": {}
    },
    {
      "title": "should register itself with workerpool",
      "fullTitle": "worker when run as worker process should register itself with workerpool",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reject",
      "fullTitle": "worker when run as worker process function run() when called without arguments should reject",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reject",
      "fullTitle": "worker when run as worker process function run() when passed a non-string `options` value should reject",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reject",
      "fullTitle": "worker when run as worker process function run() when passed an invalid string `options` value should reject",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reject",
      "fullTitle": "worker when run as worker process function run() when called with empty \"filepath\" argument should reject",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reject",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" argument is unloadable should reject",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle \"--require\"",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" is loadable should handle \"--require\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle \"--ui\"",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" is loadable should handle \"--ui\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call Mocha#run",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" is loadable should call Mocha#run",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove all uncaughtException listeners",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" is loadable should remove all uncaughtException listeners",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 4,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove all unhandledRejection listeners",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" is loadable should remove all unhandledRejection listeners",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 4,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should resolve with a SerializedWorkerResult",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" is loadable when serialization succeeds should resolve with a SerializedWorkerResult",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reject",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" is loadable when serialization fails should reject",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should initialize only once",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" is loadable when run twice should initialize only once",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    }
  ],
  "pending": [
    {
      "title": "should initialize the stats collector",
      "fullTitle": "Mocha instance method run() should initialize the stats collector",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should pass validation",
      "fullTitle": "plugin module root hooks plugin 🎣 when impl is an object of functions should pass validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should get a stack-trace as a string and prettify it",
      "fullTitle": "stackTraceFilter() on node on POSIX OS should get a stack-trace as a string and prettify it",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\stack-trace-filter.spec.js",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not ignore other bower_components and components",
      "fullTitle": "stackTraceFilter() on node on POSIX OS does not ignore other bower_components and components",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\stack-trace-filter.spec.js",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should replace absolute with relative paths",
      "fullTitle": "stackTraceFilter() on node on POSIX OS should replace absolute with relative paths",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\stack-trace-filter.spec.js",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should not replace absolute path which has cwd as infix",
      "fullTitle": "stackTraceFilter() on node on POSIX OS should not replace absolute path which has cwd as infix",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\stack-trace-filter.spec.js",
      "currentRetry": 0,
      "err": {}
    }
  ],
  "failures": [],
  "passes": [
    {
      "title": "should work",
      "fullTitle": "Context nested should work",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\context.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should work",
      "fullTitle": "Context Siblings sequestered sibling should work",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\context.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not have value set within a sibling describe",
      "fullTitle": "Context Siblings sibling verifiction should not have value set within a sibling describe",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\context.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should allow test siblings to modify shared context",
      "fullTitle": "Context Siblings sibling verifiction should allow test siblings to modify shared context",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\context.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should have reset this.calls before describe",
      "fullTitle": "Context Siblings sibling verifiction should have reset this.calls before describe",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\context.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the timeout",
      "fullTitle": "methods timeout() should return the timeout",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\context.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the slow",
      "fullTitle": "methods slow() should return the slow",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\context.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the number of retries",
      "fullTitle": "methods retries should return the number of retries",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\context.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should highlight in red",
      "fullTitle": "durations when slow should highlight in red",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\duration.spec.js",
      "duration": 103,
      "currentRetry": 0,
      "speed": "slow",
      "err": {}
    },
    {
      "title": "should highlight in yellow",
      "fullTitle": "durations when reasonable should highlight in yellow",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\duration.spec.js",
      "duration": 52,
      "currentRetry": 0,
      "speed": "medium",
      "err": {}
    },
    {
      "title": "should not highlight",
      "fullTitle": "durations when fast should not highlight",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\duration.spec.js",
      "duration": 11,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include expected code in thrown reporter errors",
      "fullTitle": "Errors createInvalidReporterError() should include expected code in thrown reporter errors",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include expected code in thrown interface errors",
      "fullTitle": "Errors createInvalidInterfaceError() should include expected code in thrown interface errors",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should output a message regarding incompatibility",
      "fullTitle": "Errors createForbiddenExclusivityError() when Mocha instance is running in a worker process should output a message regarding incompatibility",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should output a message regarding --forbid-only",
      "fullTitle": "Errors createForbiddenExclusivityError() when Mocha instance is not running in a worker process should output a message regarding --forbid-only",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should coerce its parameter to a string",
      "fullTitle": "Errors deprecate() should coerce its parameter to a string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should cache the message",
      "fullTitle": "Errors deprecate() should cache the message",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should ignore falsy messages",
      "fullTitle": "Errors deprecate() should ignore falsy messages",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call process.emitWarning",
      "fullTitle": "Errors warn() should call process.emitWarning",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not cache messages",
      "fullTitle": "Errors warn() should not cache messages",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should ignore falsy messages",
      "fullTitle": "Errors warn() should ignore falsy messages",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true",
      "fullTitle": "Errors isMochaError() when provided an Error object having a known Mocha error code should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false",
      "fullTitle": "Errors isMochaError() when provided an Error object with a non-Mocha error code should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false",
      "fullTitle": "Errors isMochaError() when provided a non-error should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\errors.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should cause tests to fail",
      "fullTitle": "global leaks should cause tests to fail",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\globals.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass when accepted",
      "fullTitle": "global leaks should pass when accepted",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\globals.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass with wildcard",
      "fullTitle": "global leaks should pass with wildcard",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\globals.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass when prefixed \"mocha-\"",
      "fullTitle": "global leaks should pass when prefixed \"mocha-\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\globals.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add a RegExp to the mocha.options object",
      "fullTitle": "Mocha \"grep\" option should add a RegExp to the mocha.options object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\grep.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should convert string to a RegExp",
      "fullTitle": "Mocha \"grep\" option should convert string to a RegExp",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\grep.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should escape and convert string to a RegExp",
      "fullTitle": "Mocha \"fgrep\" option should escape and convert string to a RegExp",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\grep.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add a RegExp to the mocha.options object",
      "fullTitle": "Mocha .grep() should add a RegExp to the mocha.options object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\grep.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should convert grep string to a RegExp",
      "fullTitle": "Mocha .grep() should convert grep string to a RegExp",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\grep.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should covert grep regex-like string to a RegExp",
      "fullTitle": "Mocha .grep() should covert grep regex-like string to a RegExp",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\grep.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return its parent Mocha object for chainability",
      "fullTitle": "Mocha .grep() should return its parent Mocha object for chainability",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\grep.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add a Boolean to the mocha.options object",
      "fullTitle": "Mocha \"invert\" option should add a Boolean to the mocha.options object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\grep.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "one",
      "fullTitle": "async hooks one",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "two",
      "fullTitle": "async hooks two",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-async.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "three",
      "fullTitle": "async hooks three",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "foo",
      "fullTitle": "serial nested foo",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-sync-nested.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "bar",
      "fullTitle": "serial nested bar",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-sync-nested.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "one",
      "fullTitle": "serial nested hooks one",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-sync-nested.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "two",
      "fullTitle": "serial nested hooks two",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-sync-nested.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "one",
      "fullTitle": "serial hooks one",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-sync.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "two",
      "fullTitle": "serial hooks two",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-sync.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "three",
      "fullTitle": "serial hooks three",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-sync.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should work",
      "fullTitle": "hook timeout should work",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook-timeout.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the hook._error",
      "fullTitle": "Hook error should set the hook._error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should get the hook._error when called without arguments",
      "fullTitle": "Hook error should get the hook._error when called without arguments",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call Runnable.reset",
      "fullTitle": "Hook reset should call Runnable.reset",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reset the error state",
      "fullTitle": "Hook reset should reset the error state",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\hook.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set _cleanReferencesAfterRun to true",
      "fullTitle": "Mocha constructor should set _cleanReferencesAfterRun to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not attempt to set timeout",
      "fullTitle": "Mocha constructor when `timeout` option is `undefined` should not attempt to set timeout",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attempt to set timeout",
      "fullTitle": "Mocha constructor when `timeout` option is `false` should attempt to set timeout",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attempt to set globals",
      "fullTitle": "Mocha constructor when `global` option is an `Array` should attempt to set globals",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attempt to set retries`",
      "fullTitle": "Mocha constructor when `retries` option is present should attempt to set retries`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not attempt to set retries",
      "fullTitle": "Mocha constructor when `retries` option is not present should not attempt to set retries",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "shouid attempt to set root hooks",
      "fullTitle": "Mocha constructor when `rootHooks` option is truthy shouid attempt to set root hooks",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should enable parallel mode",
      "fullTitle": "Mocha constructor when `parallel` option is true and `jobs` option > 1 should enable parallel mode",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not enable parallel mode",
      "fullTitle": "Mocha constructor when `parallel` option is true and `jobs` option <= 1 should not enable parallel mode",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should configure global setup fixtures",
      "fullTitle": "Mocha constructor when `parallel` option is true when `globalSetup` option is present should configure global setup fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should configure global teardown fixtures",
      "fullTitle": "Mocha constructor when `parallel` option is true when `globalTeardown` option is present should configure global teardown fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should toggle global setup fixtures",
      "fullTitle": "Mocha constructor when `parallel` option is true when `enableGlobalSetup` option is present should toggle global setup fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should configure global teardown fixtures",
      "fullTitle": "Mocha constructor when `parallel` option is true when `enableGlobalTeardown` option is present should configure global teardown fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the allowUncaught option to true",
      "fullTitle": "Mocha instance method allowUncaught() should set the allowUncaught option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the allowUncaught option to false",
      "fullTitle": "Mocha instance method allowUncaught() should set the allowUncaught option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method allowUncaught() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the asyncOnly option to true",
      "fullTitle": "Mocha instance method asyncOnly() should set the asyncOnly option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the asyncOnly option to false",
      "fullTitle": "Mocha instance method asyncOnly() should set the asyncOnly option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method asyncOnly() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method bail() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the \"bail\" flag on the root suite",
      "fullTitle": "Mocha instance method bail() when provided no arguments should set the \"bail\" flag on the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should unset the \"bail\" flag on the root suite",
      "fullTitle": "Mocha instance method bail() when provided a falsy argument should unset the \"bail\" flag on the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the checkLeaks option to true",
      "fullTitle": "Mocha instance method checkLeaks() should set the checkLeaks option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the _cleanReferencesAfterRun attribute",
      "fullTitle": "Mocha instance method cleanReferencesAfterRun() should set the _cleanReferencesAfterRun attribute",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the _cleanReferencesAfterRun attribute to false",
      "fullTitle": "Mocha instance method cleanReferencesAfterRun() should set the _cleanReferencesAfterRun attribute to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method cleanReferencesAfterRun() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the color option to true",
      "fullTitle": "Mocha instance method color() should set the color option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the color option to false",
      "fullTitle": "Mocha instance method color() should set the color option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method color() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the delay option to true",
      "fullTitle": "Mocha instance method delay() should set the delay option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method delay() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the diff option to true",
      "fullTitle": "Mocha instance method diff() should set the diff option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the diff option to false",
      "fullTitle": "Mocha instance method diff() when provided `false` argument should set the diff option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should dispose the root suite",
      "fullTitle": "Mocha instance method dispose() should dispose the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should dispose previous test runner",
      "fullTitle": "Mocha instance method dispose() should dispose previous test runner",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should unload the files",
      "fullTitle": "Mocha instance method dispose() should unload the files",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the forbidOnly option to true",
      "fullTitle": "Mocha instance method forbidOnly() should set the forbidOnly option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the forbidOnly option to false",
      "fullTitle": "Mocha instance method forbidOnly() should set the forbidOnly option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method forbidOnly() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the forbidPending option to true",
      "fullTitle": "Mocha instance method forbidPending() should set the forbidPending option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the forbidPending option to false",
      "fullTitle": "Mocha instance method forbidPending() should set the forbidPending option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method forbidPending() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the fullTrace option to true",
      "fullTitle": "Mocha instance method fullTrace() should set the fullTrace option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the fullTrace option to false",
      "fullTitle": "Mocha instance method fullTrace() should set the fullTrace option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method fullTrace() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be an empty array initially",
      "fullTitle": "Mocha instance method global() should be an empty array initially",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method global() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not modify the whitelist when given empty string",
      "fullTitle": "Mocha instance method global() when argument is invalid should not modify the whitelist when given empty string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not modify the whitelist when given empty array",
      "fullTitle": "Mocha instance method global() when argument is invalid should not modify the whitelist when given empty array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add string to the whitelist",
      "fullTitle": "Mocha instance method global() when argument is valid should add string to the whitelist",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add contents of string array to the whitelist",
      "fullTitle": "Mocha instance method global() when argument is valid should add contents of string array to the whitelist",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not have duplicates",
      "fullTitle": "Mocha instance method global() when argument is valid should not have duplicates",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method growl() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 57,
      "currentRetry": 0,
      "speed": "medium",
      "err": {}
    },
    {
      "title": "should set the growl option to true",
      "fullTitle": "Mocha instance method growl() if capable of notifications should set the growl option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the growl option to false",
      "fullTitle": "Mocha instance method growl() if not capable of notifications should set the growl option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the inlineDiffs option to true",
      "fullTitle": "Mocha instance method inlineDiffs() should set the inlineDiffs option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the inlineDiffs option to false",
      "fullTitle": "Mocha instance method inlineDiffs() should set the inlineDiffs option to false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method inlineDiffs() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the invert option to true",
      "fullTitle": "Mocha instance method invert() should set the invert option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method invert() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the noHighlighting option to true",
      "fullTitle": "Mocha instance method noHighlighting() should set the noHighlighting option to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method noHighlighting() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method reporter() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should keep reporterOption on options",
      "fullTitle": "Mocha instance method reporter() should keep reporterOption on options",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should support legacy reporterOptions",
      "fullTitle": "Mocha instance method reporter() should support legacy reporterOptions",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should instantiate a reporter",
      "fullTitle": "Mocha instance method run() should instantiate a reporter",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should execute the callback when complete",
      "fullTitle": "Mocha instance method run() should execute the callback when complete",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should eagerly load files",
      "fullTitle": "Mocha instance method run() when files have been added to the Mocha instance when Mocha is set to eagerly load files should eagerly load files",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not eagerly load files",
      "fullTitle": "Mocha instance method run() when files have been added to the Mocha instance when Mocha is set to lazily load files should not eagerly load files",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should instantiate a Runner",
      "fullTitle": "Mocha instance method run() Runner initialization should instantiate a Runner",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should configure \"grep\"",
      "fullTitle": "Mocha instance method run() Runner initialization when \"grep\" option is present should configure \"grep\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should configure global vars",
      "fullTitle": "Mocha instance method run() Runner initialization when \"global\" option is present should configure global vars",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should initialize growl support",
      "fullTitle": "Mocha instance method run() when \"growl\" option is present should initialize growl support",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should configure the Base reporter",
      "fullTitle": "Mocha instance method run() Base reporter initialization should configure the Base reporter",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should configure the Base reporter",
      "fullTitle": "Mocha instance method run() Base reporter initialization when \"color\" options is set should configure the Base reporter",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call the reporter \"done\" method",
      "fullTitle": "Mocha instance method run() when a reporter instance has a \"done\" method should call the reporter \"done\" method",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Mocha instance method run() when a run is in progress should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not call `Runner#runAsync`",
      "fullTitle": "Mocha instance method run() when a run is in progress should not call `Runner#runAsync`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Mocha instance method run() when the `Mocha` instance is already disposed should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not call `Runner#runAsync`",
      "fullTitle": "Mocha instance method run() when the `Mocha` instance is already disposed should not call `Runner#runAsync`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Mocha instance method run() when a run has finished and is called again should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not call `Runner#runAsync()`",
      "fullTitle": "Mocha instance method run() when a run has finished and is called again should not call `Runner#runAsync()`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw",
      "fullTitle": "Mocha instance method run() when Mocha configured for multiple runs and multiple runs are attempted should not throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call `Runner#runAsync` for each call",
      "fullTitle": "Mocha instance method run() when Mocha configured for multiple runs and multiple runs are attempted should call `Runner#runAsync` for each call",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reset the root Suite between runs",
      "fullTitle": "Mocha instance method run() when Mocha configured for multiple runs and multiple runs are attempted should reset the root Suite between runs",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should dispose the previous runner",
      "fullTitle": "Mocha instance method run() when Mocha configured for multiple runs and multiple runs are attempted should dispose the previous runner",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not run global setup fixtures",
      "fullTitle": "Mocha instance method run() when global setup fixtures enabled when global setup fixtures not present should not run global setup fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should run global setup fixtures",
      "fullTitle": "Mocha instance method run() when global setup fixtures enabled when global setup fixtures are present should run global setup fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not run global setup fixtures",
      "fullTitle": "Mocha instance method run() when global setup fixtures disabled when global setup fixtures not present should not run global setup fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not run global setup fixtures",
      "fullTitle": "Mocha instance method run() when global setup fixtures disabled when global setup fixtures are present should not run global setup fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not run global teardown fixtures",
      "fullTitle": "Mocha instance method run() when global teardown fixtures enabled when global teardown fixtures not present should not run global teardown fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should run global teardown fixtures",
      "fullTitle": "Mocha instance method run() when global teardown fixtures enabled when global teardown fixtures are present should run global teardown fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should use the same context as returned by `runGlobalSetup`",
      "fullTitle": "Mocha instance method run() when global teardown fixtures enabled when global teardown fixtures are present when global setup fixtures are present and enabled should use the same context as returned by `runGlobalSetup`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not run global teardown fixtures",
      "fullTitle": "Mocha instance method run() when global teardown fixtures disabled when global teardown fixtures not present should not run global teardown fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not run global teardown fixtures",
      "fullTitle": "Mocha instance method run() when global teardown fixtures disabled when global teardown fixtures are present should not run global teardown fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Mocha instance method parallelMode() when `Mocha` is running in a browser should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Mocha instance method unloadFile() when run in a browser should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should execute multiple fixtures in order",
      "fullTitle": "Mocha instance method _runGlobalFixtures() should execute multiple fixtures in order",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attempt run the fixtures",
      "fullTitle": "Mocha instance method runGlobalSetup() when fixture(s) are present should attempt run the fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not attempt to run fixtures",
      "fullTitle": "Mocha instance method runGlobalSetup() when a fixture is not present should not attempt to run fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attempt to run the fixtures",
      "fullTitle": "Mocha instance method runGlobalTeardown() when fixture(s) are present should attempt to run the fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "not attempt to run the fixtures",
      "fullTitle": "Mocha instance method runGlobalTeardown() when a fixture is not present not attempt to run the fixtures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `true`",
      "fullTitle": "Mocha instance method hasGlobalSetupFixtures() when one or more global setup fixtures are present should return `true`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `false`",
      "fullTitle": "Mocha instance method hasGlobalSetupFixtures() when no global setup fixtures are present should return `false`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `true`",
      "fullTitle": "Mocha instance method hasGlobalTeardownFixtures() when one or more global teardown fixtures are present should return `true`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `false`",
      "fullTitle": "Mocha instance method hasGlobalTeardownFixtures() when no global teardown fixtures are present should return `false`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method rootHooks() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attach it to the root suite",
      "fullTitle": "Mocha instance method rootHooks() when provided a single \"before all\" hook should attach it to the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attach it to the root suite",
      "fullTitle": "Mocha instance method rootHooks() when provided a single \"before each\" hook should attach it to the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attach it to the root suite",
      "fullTitle": "Mocha instance method rootHooks() when provided a single \"after all\" hook should attach it to the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attach it to the root suite",
      "fullTitle": "Mocha instance method rootHooks() when provided a single \"after each\" hook should attach it to the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attach each to the root suite",
      "fullTitle": "Mocha instance method rootHooks() when provided multiple \"before all\" hooks should attach each to the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attach each to the root suite",
      "fullTitle": "Mocha instance method rootHooks() when provided multiple \"before each\" hooks should attach each to the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attach each to the root suite",
      "fullTitle": "Mocha instance method rootHooks() when provided multiple \"after all\" hooks should attach each to the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attach each to the root suite",
      "fullTitle": "Mocha instance method rootHooks() when provided multiple \"after each\" hooks should attach each to the root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail when multiple methods are used",
      "fullTitle": "overspecified asynchronous resolution method should fail when multiple methods are used",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\overspecified-async.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should get queryString and return key-value object",
      "fullTitle": "parseQuery() should get queryString and return key-value object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\parse-query.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should parse \"+\" as a space",
      "fullTitle": "parseQuery() should parse \"+\" as a space",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\parse-query.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should populate a registry of built-in plugins",
      "fullTitle": "plugin module class PluginLoader constructor when passed no options should populate a registry of built-in plugins",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should register the custom plugins",
      "fullTitle": "plugin module class PluginLoader constructor when passed custom plugins should register the custom plugins",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should retain a list of ignored plugins",
      "fullTitle": "plugin module class PluginLoader constructor when passed ignored plugins should retain a list of ignored plugins",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a PluginLoader instance",
      "fullTitle": "plugin module class PluginLoader static method create() should return a PluginLoader instance",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw",
      "fullTitle": "plugin module class PluginLoader instance method register() when the plugin export name is not in use should not throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "plugin module class PluginLoader instance method register() when the plugin export name is already in use should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw",
      "fullTitle": "plugin module class PluginLoader instance method register() when the plugin export name is ignored should not throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not register the plugin",
      "fullTitle": "plugin module class PluginLoader instance method register() when the plugin export name is ignored should not register the plugin",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "plugin module class PluginLoader instance method register() when passed a falsy parameter should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "plugin module class PluginLoader instance method register() when passed a non-object parameter should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "plugin module class PluginLoader instance method register() when passed a definition w/o an exportName should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false",
      "fullTitle": "plugin module class PluginLoader instance method load() when called with a falsy value should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false",
      "fullTitle": "plugin module class PluginLoader instance method load() when called with an object containing no recognized plugin should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true",
      "fullTitle": "plugin module class PluginLoader instance method load() when called with an object containing a recognized plugin should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should retain the value of any matching property in its mapping",
      "fullTitle": "plugin module class PluginLoader instance method load() when called with an object containing a recognized plugin should retain the value of any matching property in its mapping",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call the associated validator, if present",
      "fullTitle": "plugin module class PluginLoader instance method load() when called with an object containing a recognized plugin should call the associated validator, if present",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed a falsy or non-object value should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not call a validator",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed a falsy or non-object value should not call a validator",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed an object value when no keys match any known named exports should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call the associated validator",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed an object value when a key matches a known named export should call the associated validator",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not call validators whose keys were not found",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed an object value when a key matches a known named export should not call validators whose keys were not found",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed an object value when a key matches a known named export when the value passes the associated validator should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add the implementation to the internal mapping",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed an object value when a key matches a known named export when the value passes the associated validator should add the implementation to the internal mapping",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not add an implementation of plugins not present",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed an object value when a key matches a known named export when the value passes the associated validator should not add an implementation of plugins not present",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "plugin module class PluginLoader instance method load() when passed an object value when a key matches a known named export when the value does not pass the associated validator should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an empty map",
      "fullTitle": "plugin module class PluginLoader instance method finalize() when no plugins have been loaded should return an empty map",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an object map using `optionName` key for each registered plugin",
      "fullTitle": "plugin module class PluginLoader instance method finalize() when a plugin has one or more implementations should return an object map using `optionName` key for each registered plugin",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should omit unused plugins",
      "fullTitle": "plugin module class PluginLoader instance method finalize() when a plugin has one or more implementations should omit unused plugins",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an array of raw implementations",
      "fullTitle": "plugin module class PluginLoader instance method finalize() when a plugin has no \"finalize\" function should return an array of raw implementations",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail validation",
      "fullTitle": "plugin module root hooks plugin 🎣 when impl is an array should fail validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail validation",
      "fullTitle": "plugin module root hooks plugin 🎣 when impl is a primitive should fail validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass validation",
      "fullTitle": "plugin module root hooks plugin 🎣 when impl is a function should pass validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should flatten the implementations",
      "fullTitle": "plugin module root hooks plugin 🎣 when a loaded impl is finalized should flatten the implementations",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail validation",
      "fullTitle": "plugin module global fixtures plugin global setup when an implementation is a primitive should fail validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail validation",
      "fullTitle": "plugin module global fixtures plugin global setup when an implementation is an array of primitives should fail validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass validation",
      "fullTitle": "plugin module global fixtures plugin global setup when an implementation is a function should pass validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass validation",
      "fullTitle": "plugin module global fixtures plugin global setup when an implementation is an array of functions should pass validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail validation",
      "fullTitle": "plugin module global fixtures plugin global teardown when an implementation is a primitive should fail validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail validation",
      "fullTitle": "plugin module global fixtures plugin global teardown when an implementation is an array of primitives should fail validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass validation",
      "fullTitle": "plugin module global fixtures plugin global teardown when an implementation is a function should pass validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass validation",
      "fullTitle": "plugin module global fixtures plugin global teardown when an implementation is an array of functions should pass validation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\plugin-loader.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "using imported it",
      "fullTitle": "using imported describe using imported it",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\required-tokens.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be a valid suite",
      "fullTitle": "root should be a valid suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\root.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should clamp to lower bound given numeric",
      "fullTitle": "Runnable(title, fn) #timeout(ms) when value is less than lower bound should clamp to lower bound given numeric",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should clamp to lower bound given timestamp",
      "fullTitle": "Runnable(title, fn) #timeout(ms) when value is less than lower bound should clamp to lower bound given timestamp",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the timeout value to disabled",
      "fullTitle": "Runnable(title, fn) #timeout(ms) when value is equal to lower bound given numeric value should set the timeout value to disabled",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the timeout value to disabled",
      "fullTitle": "Runnable(title, fn) #timeout(ms) when value is equal to lower bound given string timestamp should set the timeout value to disabled",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the timeout value",
      "fullTitle": "Runnable(title, fn) #timeout(ms) when value is within `setTimeout` bounds given numeric value should set the timeout value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the timeout value",
      "fullTitle": "Runnable(title, fn) #timeout(ms) when value is within `setTimeout` bounds given string timestamp should set the timeout value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the disabled timeout value",
      "fullTitle": "Runnable(title, fn) #timeout(ms) when value is equal to upper bound given numeric value should set the disabled timeout value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the disabled timeout value",
      "fullTitle": "Runnable(title, fn) #timeout(ms) when value is out-of-bounds given numeric value should set the disabled timeout value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the slow threshold",
      "fullTitle": "Runnable(title, fn) #slow(ms) should set the slow threshold",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not set the slow threshold if the parameter is not passed",
      "fullTitle": "Runnable(title, fn) #slow(ms) should not set the slow threshold if the parameter is not passed",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not set the slow threshold if the parameter is undefined",
      "fullTitle": "Runnable(title, fn) #slow(ms) should not set the slow threshold if the parameter is undefined",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should convert to ms",
      "fullTitle": "Runnable(title, fn) #slow(ms) when passed a time-formatted string should convert to ms",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reset current run state",
      "fullTitle": "Runnable(title, fn) #reset should reset current run state",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be present",
      "fullTitle": "Runnable(title, fn) .title should be present",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "returns the concatenation of the parent's title path and runnable's title",
      "fullTitle": "Runnable(title, fn) .titlePath() returns the concatenation of the parent's title path and runnable's title",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be .async",
      "fullTitle": "Runnable(title, fn) when arity >= 1 should be .async",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not be .sync",
      "fullTitle": "Runnable(title, fn) when arity >= 1 should not be .sync",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not be .async",
      "fullTitle": "Runnable(title, fn) when arity == 0 should not be .async",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be .sync",
      "fullTitle": "Runnable(title, fn) when arity == 0 should be .sync",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should allow for whitelisting globals",
      "fullTitle": "Runnable(title, fn) #globals should allow for whitelisting globals",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set the number of retries",
      "fullTitle": "Runnable(title, fn) #retries(n) should set the number of retries",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when .pending should not invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when sync without error should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback with error",
      "fullTitle": "Runnable(title, fn) .run(fn) when sync when an exception is thrown should invoke the callback with error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 4,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "throws an error when it is allowed",
      "fullTitle": "Runnable(title, fn) .run(fn) when sync when an exception is thrown and is allowed to remain uncaught throws an error when it is allowed",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not error with timeout",
      "fullTitle": "Runnable(title, fn) .run(fn) when timeouts are disabled should not error with timeout",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 6,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should allow updating the timeout",
      "fullTitle": "Runnable(title, fn) .run(fn) when async should allow updating the timeout",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 51,
      "currentRetry": 0,
      "speed": "medium",
      "err": {}
    },
    {
      "title": "should allow a timeout of 0",
      "fullTitle": "Runnable(title, fn) .run(fn) when async should allow a timeout of 0",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when async without error should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit a single \"error\" event",
      "fullTitle": "Runnable(title, fn) .run(fn) when async when the callback is invoked several times without an error should emit a single \"error\" event",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit a single \"error\" event",
      "fullTitle": "Runnable(title, fn) .run(fn) when async when the callback is invoked several times with an error should emit a single \"error\" event",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when async when an exception is thrown should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw its own exception if passed a non-object",
      "fullTitle": "Runnable(title, fn) .run(fn) when async when an exception is thrown should not throw its own exception if passed a non-object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "throws an error when it is allowed",
      "fullTitle": "Runnable(title, fn) .run(fn) when async when an exception is thrown and is allowed to remain uncaught throws an error when it is allowed",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when async when an error is passed should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when async when done() is invoked with a non-Error object should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when async when done() is invoked with a string should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when fn returns a promise when the promise is fulfilled with no value should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when fn returns a promise when the promise is fulfilled with a value should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when fn returns a promise when the promise is rejected should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when fn returns a promise when the promise is rejected without a reason should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw the timeout error",
      "fullTitle": "Runnable(title, fn) .run(fn) when fn returns a promise when the promise takes too long to settle should throw the timeout error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 12,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should invoke the callback",
      "fullTitle": "Runnable(title, fn) .run(fn) when fn returns a non-promise should invoke the callback",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should ignore call to `done` and not execute callback again",
      "fullTitle": "Runnable(title, fn) .run(fn) if timed-out should ignore call to `done` and not execute callback again",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 11,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "this.skip() should set runnable to pending",
      "fullTitle": "Runnable(title, fn) .run(fn) if async this.skip() should set runnable to pending",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "this.skip() should halt synchronous execution",
      "fullTitle": "Runnable(title, fn) .run(fn) if async this.skip() should halt synchronous execution",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw an error",
      "fullTitle": "Runnable(title, fn) .run(fn) when fn is not a function should throw an error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `true` if test has not failed",
      "fullTitle": "Runnable(title, fn) #isFailed() should return `true` if test has not failed",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `true` if test has failed",
      "fullTitle": "Runnable(title, fn) #isFailed() should return `true` if test has failed",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `false` if test is pending",
      "fullTitle": "Runnable(title, fn) #isFailed() should return `false` if test is pending",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not time out if timeouts disabled after reset",
      "fullTitle": "Runnable(title, fn) #resetTimeout() should not time out if timeouts disabled after reset",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 21,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return identity if parameter is truthy",
      "fullTitle": "Runnable(title, fn) static method toValueOrError should return identity if parameter is truthy",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an Error if parameter is falsy",
      "fullTitle": "Runnable(title, fn) static method toValueOrError should return an Error if parameter is falsy",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should have a unique identifier",
      "fullTitle": "Runnable(title, fn) interesting property id should have a unique identifier",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should have a permanent identifier",
      "fullTitle": "Runnable(title, fn) interesting property id should have a permanent identifier",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runnable.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should update the runner.total with number of matched tests",
      "fullTitle": "Runner instance method grep() should update the runner.total with number of matched tests",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should update the runner.total with number of matched tests when inverted",
      "fullTitle": "Runner instance method grep() should update the runner.total with number of matched tests when inverted",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the total number of matched tests",
      "fullTitle": "Runner instance method grepTotal() should return the total number of matched tests",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the total number of matched tests when inverted",
      "fullTitle": "Runner instance method grepTotal() should return the total number of matched tests when inverted",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include common non enumerable globals",
      "fullTitle": "Runner instance method globalProps() should include common non enumerable globals",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should default to the known globals",
      "fullTitle": "Runner instance method globals() should default to the known globals",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should white-list globals",
      "fullTitle": "Runner instance method globals() should white-list globals",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should allow variables that match a wildcard",
      "fullTitle": "Runner instance method checkGlobals(test) should allow variables that match a wildcard",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit \"fail\" when a new global is introduced",
      "fullTitle": "Runner instance method checkGlobals(test) should emit \"fail\" when a new global is introduced",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit \"fail\" when a single new disallowed global is introduced after a single extra global is allowed",
      "fullTitle": "Runner instance method checkGlobals(test) should emit \"fail\" when a single new disallowed global is introduced after a single extra global is allowed",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not fail when a new common global is introduced",
      "fullTitle": "Runner instance method checkGlobals(test) should not fail when a new common global is introduced",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pluralize the error message when several are introduced",
      "fullTitle": "Runner instance method checkGlobals(test) should pluralize the error message when several are introduced",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should respect per test whitelisted globals",
      "fullTitle": "Runner instance method checkGlobals(test) should respect per test whitelisted globals",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should respect per test whitelisted globals but still detect other leaks",
      "fullTitle": "Runner instance method checkGlobals(test) should respect per test whitelisted globals but still detect other leaks",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit \"fail\" when a global beginning with \"d\" is introduced",
      "fullTitle": "Runner instance method checkGlobals(test) should emit \"fail\" when a global beginning with \"d\" is introduced",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should execute hooks after failed test if suite bail is true",
      "fullTitle": "Runner instance method hook() should execute hooks after failed test if suite bail is true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should augment hook title with current test title",
      "fullTitle": "Runner instance method hook() should augment hook title with current test title",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should increment `Runner#failures`",
      "fullTitle": "Runner instance method fail() should increment `Runner#failures`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set `Test#state` to \"failed\"",
      "fullTitle": "Runner instance method fail() should set `Test#state` to \"failed\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit \"fail\"",
      "fullTitle": "Runner instance method fail() should emit \"fail\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit a helpful message when failed with a string",
      "fullTitle": "Runner instance method fail() should emit a helpful message when failed with a string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit a the error when failed with an Error instance",
      "fullTitle": "Runner instance method fail() should emit a the error when failed with an Error instance",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit the error when failed with an Error-like object",
      "fullTitle": "Runner instance method fail() should emit the error when failed with an Error-like object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit a helpful message when failed with an Object",
      "fullTitle": "Runner instance method fail() should emit a helpful message when failed with an Object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit a helpful message when failed with an Array",
      "fullTitle": "Runner instance method fail() should emit a helpful message when failed with an Array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should recover if the error stack is not writable",
      "fullTitle": "Runner instance method fail() should recover if the error stack is not writable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return and not increment failures when test is pending",
      "fullTitle": "Runner instance method fail() should return and not increment failures when test is pending",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should increment .failures",
      "fullTitle": "Runner instance method fail() should increment .failures",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit \"fail\"",
      "fullTitle": "Runner instance method fail() should emit \"fail\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not emit \"end\" if suite bail is not true",
      "fullTitle": "Runner instance method fail() should not emit \"end\" if suite bail is not true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw the \"multiple done\" error",
      "fullTitle": "Runner instance method fail() when Runner has stopped when test is not pending when error is the \"multiple done\" variety should throw the \"multiple done\" error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw a \"fatal\" error",
      "fullTitle": "Runner instance method fail() when Runner has stopped when test is not pending when error is not of the \"multiple done\" variety should throw a \"fatal\" error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit \"retry\" when a retryable test fails",
      "fullTitle": "Runner instance method run() should emit \"retry\" when a retryable test fails",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw an exception if something emits EVENT_TEST_END with a non-Test object",
      "fullTitle": "Runner instance method run() should not throw an exception if something emits EVENT_TEST_END with a non-Test object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should clean references after a run",
      "fullTitle": "Runner instance method run() should clean references after a run",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not clean references after a run when `cleanReferencesAfterRun` is `false`",
      "fullTitle": "Runner instance method run() should not clean references after a run when `cleanReferencesAfterRun` is `false`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not leak `Process.uncaughtException` listeners",
      "fullTitle": "Runner instance method run() should not leak `Process.uncaughtException` listeners",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should prettify the stack-trace",
      "fullTitle": "Runner instance method run() stack traces short should prettify the stack-trace",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should display the full stack-trace",
      "fullTitle": "Runner instance method run() stack traces long should display the full stack-trace",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not hang if overlong error message is single line",
      "fullTitle": "Runner instance method run() stack traces ginormous should not hang if overlong error message is single line",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not hang if overlong error message is multiple lines",
      "fullTitle": "Runner instance method run() stack traces ginormous should not hang if overlong error message is multiple lines",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a Promise with a failure count",
      "fullTitle": "Runner instance method runAsync() should return a Promise with a failure count",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should pass through options to Runner#run",
      "fullTitle": "Runner instance method runAsync() should pass through options to Runner#run",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove all listeners from itself",
      "fullTitle": "Runner instance method dispose() should remove all listeners from itself",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove \"error\" listeners from a test",
      "fullTitle": "Runner instance method dispose() should remove \"error\" listeners from a test",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove \"uncaughtException\" listeners from the process",
      "fullTitle": "Runner instance method dispose() should remove \"uncaughtException\" listeners from the process",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return when no tests to run",
      "fullTitle": "Runner instance method runTest() should return when no tests to run",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should allow unhandled errors to propagate through",
      "fullTitle": "Runner instance method allowUncaught() should allow unhandled errors to propagate through",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not allow unhandled errors in sync hooks to propagate through",
      "fullTitle": "Runner instance method allowUncaught() should not allow unhandled errors in sync hooks to propagate through",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should allow unhandled errors in sync hooks to propagate through",
      "fullTitle": "Runner instance method allowUncaught() should allow unhandled errors in sync hooks to propagate through",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "async - should allow unhandled errors in hooks to propagate through",
      "fullTitle": "Runner instance method allowUncaught() async - should allow unhandled errors in hooks to propagate through",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set _abort property to true",
      "fullTitle": "Runner instance method abort() should set _abort property to true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the Runner",
      "fullTitle": "Runner instance method abort() should return the Runner",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Runner instance method _uncaught() when called with a non-Runner context should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should propagate error and throw",
      "fullTitle": "Runner instance method uncaught() when allow-uncaught is set to true should propagate error and throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail with a transient Runnable and a new Error coerced from the object",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is not an Error should fail with a transient Runnable and a new Error coerced from the object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should ignore argument and return",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is a Pending should ignore argument and return",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add the \"uncaught\" property to the Error",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error should add the \"uncaught\" property to the Error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail with a transient Runnable and the error",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when no Runnables are running should fail with a transient Runnable and the error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not emit start/end events",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when no Runnables are running when Runner is RUNNING should not emit start/end events",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit start/end events for the benefit of reporters",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when no Runnables are running when Runner is IDLE should emit start/end events for the benefit of reporters",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not emit start/end events, since this presumably would have already happened",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when no Runnables are running when Runner is STOPPED should not emit start/end events, since this presumably would have already happened",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when no Runnables are running when Runner is STOPPED should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should clear any pending timeouts",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run should clear any pending timeouts",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not attempt to fail again",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when current Runnable has already failed should not attempt to fail again",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attempt to fail",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when current Runnable has been marked pending should attempt to fail",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail with the current Runnable and the error",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when the current Runnable has already passed should fail with the current Runnable and the error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should abort the runner without emitting end event",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when the current Runnable has already passed should abort the runner without emitting end event",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should run callback(err) to handle failing and hooks",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when the current Runnable is still running when the current Runnable is a Test should run callback(err) to handle failing and hooks",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not notify test has ended",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when the current Runnable is still running when the current Runnable is a Test should not notify test has ended",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not notify run has ended",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when the current Runnable is still running when the current Runnable is a Test should not notify run has ended",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should run callback(err) to handle failing hook pattern",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when the current Runnable is still running when the current Runnable is a Hook should run callback(err) to handle failing hook pattern",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not notify test has ended",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when the current Runnable is still running when the current Runnable is a Hook should not notify test has ended",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not notify run has ended",
      "fullTitle": "Runner instance method uncaught() when provided an object argument when argument is an Error when a Runnable is running or has run when the current Runnable is still running when the current Runnable is a Hook should not notify run has ended",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the Runner",
      "fullTitle": "Runner instance method linkPartialObjects() should return the Runner",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false",
      "fullTitle": "Runner instance method isParallelMode() should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Runner instance method workerReporter() should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should clone the Suite, omitting children",
      "fullTitle": "Suite instance method clone() should clone the Suite, omitting children",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reset the `delayed` state",
      "fullTitle": "Suite instance method reset() should reset the `delayed` state",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should forward reset to suites and tests",
      "fullTitle": "Suite instance method reset() should forward reset to suites and tests",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should forward reset to all hooks",
      "fullTitle": "Suite instance method reset() should forward reset to all hooks",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the timeout value",
      "fullTitle": "Suite instance method timeout() when no argument is passed should return the timeout value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the Suite object",
      "fullTitle": "Suite instance method timeout() when argument is passed should return the Suite object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should parse it",
      "fullTitle": "Suite instance method slow() when given a string should parse it",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the slow value",
      "fullTitle": "Suite instance method slow() when no argument is passed should return the slow value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the Suite object",
      "fullTitle": "Suite instance method slow() when argument is passed should return the Suite object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the bail value",
      "fullTitle": "Suite instance method bail() when no argument is passed should return the bail value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the Suite object",
      "fullTitle": "Suite instance method bail() when argument is passed should return the Suite object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "adds it to _beforeAll",
      "fullTitle": "Suite instance method beforeAll() wraps the passed in function in a Hook adds it to _beforeAll",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "appends title to hook",
      "fullTitle": "Suite instance method beforeAll() wraps the passed in function in a Hook appends title to hook",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "uses function name if available",
      "fullTitle": "Suite instance method beforeAll() wraps the passed in function in a Hook uses function name if available",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "adds it to _afterAll",
      "fullTitle": "Suite instance method afterAll() wraps the passed in function in a Hook adds it to _afterAll",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "appends title to hook",
      "fullTitle": "Suite instance method afterAll() wraps the passed in function in a Hook appends title to hook",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "uses function name if available",
      "fullTitle": "Suite instance method afterAll() wraps the passed in function in a Hook uses function name if available",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "adds it to _beforeEach",
      "fullTitle": "Suite instance method beforeEach() wraps the passed in function in a Hook adds it to _beforeEach",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "appends title to hook",
      "fullTitle": "Suite instance method beforeEach() wraps the passed in function in a Hook appends title to hook",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "uses function name if available",
      "fullTitle": "Suite instance method beforeEach() wraps the passed in function in a Hook uses function name if available",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not create a hook",
      "fullTitle": "Suite instance method beforeEach() when the suite is pending should not create a hook",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "adds it to _afterEach",
      "fullTitle": "Suite instance method afterEach() wraps the passed in function in a Hook adds it to _afterEach",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "appends title to hook",
      "fullTitle": "Suite instance method afterEach() wraps the passed in function in a Hook appends title to hook",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "uses function name if available",
      "fullTitle": "Suite instance method afterEach() wraps the passed in function in a Hook uses function name if available",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "does not create a second root suite",
      "fullTitle": "Suite instance method create() does not create a second root suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "does not denote the root suite by being titleless",
      "fullTitle": "Suite instance method create() does not denote the root suite by being titleless",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "sets the parent on the added Suite",
      "fullTitle": "Suite instance method addSuite() sets the parent on the added Suite",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "copies the timeout value",
      "fullTitle": "Suite instance method addSuite() copies the timeout value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "copies the slow value",
      "fullTitle": "Suite instance method addSuite() copies the slow value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "adds the suite to the suites collection",
      "fullTitle": "Suite instance method addSuite() adds the suite to the suites collection",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "treats suite as pending if its parent is pending",
      "fullTitle": "Suite instance method addSuite() treats suite as pending if its parent is pending",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "sets the parent on the added test",
      "fullTitle": "Suite instance method addTest() sets the parent on the added test",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "copies the timeout value",
      "fullTitle": "Suite instance method addTest() copies the timeout value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "adds the test to the tests collection",
      "fullTitle": "Suite instance method addTest() adds the test to the tests collection",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "returns the suite title",
      "fullTitle": "Suite instance method fullTitle() when there is no parent returns the suite title",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "returns the combination of parent's and suite's title",
      "fullTitle": "Suite instance method fullTitle() when there is a parent returns the combination of parent's and suite's title",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "returns the suite title",
      "fullTitle": "Suite instance method titlePath() when there is no parent returns the suite title",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "returns the suite title",
      "fullTitle": "Suite instance method titlePath() when there is a parent the parent is the root suite returns the suite title",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "returns the concatenation of parent's and suite's title",
      "fullTitle": "Suite instance method titlePath() when there is a parent the parent is not the root suite returns the concatenation of parent's and suite's title",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return 0",
      "fullTitle": "Suite instance method total() when there are no nested suites or tests should return 0",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the number",
      "fullTitle": "Suite instance method total() when there are several tests in the suite should return the number",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return 0",
      "fullTitle": "Suite instance method eachTest(fn) when there are no nested suites or tests should return 0",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the number",
      "fullTitle": "Suite instance method eachTest(fn) when there are several tests in the suite should return the number",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the number",
      "fullTitle": "Suite instance method eachTest(fn) when there are several levels of nested suites should return the number",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw an error if the title isn't a string",
      "fullTitle": "Suite instance method constructor should throw an error if the title isn't a string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw if the title is a string",
      "fullTitle": "Suite instance method constructor should not throw if the title is a string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should report listened-for deprecated events as deprecated",
      "fullTitle": "Suite instance method constructor should report listened-for deprecated events as deprecated",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should convert a string to milliseconds",
      "fullTitle": "Suite instance method timeout() should convert a string to milliseconds",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true if a test has `only`",
      "fullTitle": "Suite instance method hasOnly() should return true if a test has `only`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true if a suite has `only`",
      "fullTitle": "Suite instance method hasOnly() should return true if a suite has `only`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true if nested suite has `only`",
      "fullTitle": "Suite instance method hasOnly() should return true if nested suite has `only`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false if no suite or test is marked `only`",
      "fullTitle": "Suite instance method hasOnly() should return false if no suite or test is marked `only`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should filter out all other tests and suites if a test has `only`",
      "fullTitle": "Suite instance method filterOnly() should filter out all other tests and suites if a test has `only`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should filter out all other tests and suites if a suite has `only`",
      "fullTitle": "Suite instance method filterOnly() should filter out all other tests and suites if a suite has `only`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call appendOnlySuite on parent",
      "fullTitle": "Suite instance method markOnly() should call appendOnlySuite on parent",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw an error if the title isn't a string",
      "fullTitle": "Test initialization should throw an error if the title isn't a string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw if the title is a string",
      "fullTitle": "Test initialization should not throw if the title is a string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\suite.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should copy the title",
      "fullTitle": "Test .clone() should copy the title",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should copy the timeout value",
      "fullTitle": "Test .clone() should copy the timeout value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should copy the slow value",
      "fullTitle": "Test .clone() should copy the slow value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should copy the retries value",
      "fullTitle": "Test .clone() should copy the retries value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should copy the currentRetry value",
      "fullTitle": "Test .clone() should copy the currentRetry value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add/keep the retriedTest value",
      "fullTitle": "Test .clone() should add/keep the retriedTest value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should copy the globals value",
      "fullTitle": "Test .clone() should copy the globals value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should copy the parent value",
      "fullTitle": "Test .clone() should copy the parent value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should copy the file value",
      "fullTitle": "Test .clone() should copy the file value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reset the run state",
      "fullTitle": "Test .reset() should reset the run state",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call Runnable.reset",
      "fullTitle": "Test .reset() should call Runnable.reset",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not be pending by default",
      "fullTitle": "Test .isPending() should not be pending by default",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be pending when marked as such",
      "fullTitle": "Test .isPending() should be pending when marked as such",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be pending when its parent is pending",
      "fullTitle": "Test .isPending() should be pending when its parent is pending",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call appendOnlyTest on parent",
      "fullTitle": "Test .markOnly() should call appendOnlyTest on parent",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\test.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing sync and test is sync",
      "fullTitle": "a test that throws non-extensible should not pass if throwing sync and test is sync",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing sync and test is async",
      "fullTitle": "a test that throws non-extensible should not pass if throwing sync and test is async",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing async and test is async",
      "fullTitle": "a test that throws non-extensible should not pass if throwing async and test is async",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing sync and test is sync",
      "fullTitle": "a test that throws undefined should not pass if throwing sync and test is sync",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing sync and test is async",
      "fullTitle": "a test that throws undefined should not pass if throwing sync and test is async",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing async and test is async",
      "fullTitle": "a test that throws undefined should not pass if throwing async and test is async",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing sync and test is sync",
      "fullTitle": "a test that throws null should not pass if throwing sync and test is sync",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing sync and test is async",
      "fullTitle": "a test that throws null should not pass if throwing sync and test is async",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not pass if throwing async and test is async",
      "fullTitle": "a test that throws null should not pass if throwing async and test is async",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\throw.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should error on timeout",
      "fullTitle": "timeouts should error on timeout",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\timeout.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should allow overriding per-test",
      "fullTitle": "timeouts should allow overriding per-test",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\timeout.spec.js",
      "duration": 50,
      "currentRetry": 0,
      "speed": "medium",
      "err": {}
    },
    {
      "title": "should work with timeout(0)",
      "fullTitle": "timeouts disabling should work with timeout(0)",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\timeout.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should work with timeout(0)",
      "fullTitle": "timeouts disabling using beforeEach should work with timeout(0)",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\timeout.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should work with timeout(0)",
      "fullTitle": "timeouts disabling using before should work with timeout(0)",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\timeout.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should suppress timeout(4)",
      "fullTitle": "timeouts disabling using timeout(0) should suppress timeout(4)",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\timeout.spec.js",
      "duration": 50,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should work with timeout(0)",
      "fullTitle": "timeouts disabling suite-level should work with timeout(0)",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\timeout.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should work with timeout(0)",
      "fullTitle": "timeouts disabling suite-level nested suite should work with timeout(0)",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\timeout.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove the wrapping function declaration",
      "fullTitle": "lib/utils clean() should remove the wrapping function declaration",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle newlines in the function declaration",
      "fullTitle": "lib/utils clean() should handle newlines in the function declaration",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove space character indentation from the function body",
      "fullTitle": "lib/utils clean() should remove space character indentation from the function body",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove tab character indentation from the function body",
      "fullTitle": "lib/utils clean() should remove tab character indentation from the function body",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle functions with tabs in their declarations",
      "fullTitle": "lib/utils clean() should handle functions with tabs in their declarations",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle named functions without space after name",
      "fullTitle": "lib/utils clean() should handle named functions without space after name",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle named functions with space after name",
      "fullTitle": "lib/utils clean() should handle named functions with space after name",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle functions with no space between the end and the closing brace",
      "fullTitle": "lib/utils clean() should handle functions with no space between the end and the closing brace",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle functions with parentheses in the same line",
      "fullTitle": "lib/utils clean() should handle functions with parentheses in the same line",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle empty functions",
      "fullTitle": "lib/utils clean() should handle empty functions",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should format a single line test function",
      "fullTitle": "lib/utils clean() should format a single line test function",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should format a multi line test indented with spaces",
      "fullTitle": "lib/utils clean() should format a multi line test indented with spaces",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should format a multi line test indented with tabs",
      "fullTitle": "lib/utils clean() should format a multi line test indented with tabs",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should format functions saved in windows style - spaces",
      "fullTitle": "lib/utils clean() should format functions saved in windows style - spaces",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should format functions saved in windows style - tabs",
      "fullTitle": "lib/utils clean() should format functions saved in windows style - tabs",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should format es6 arrow functions",
      "fullTitle": "lib/utils clean() should format es6 arrow functions",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should format es6 arrow functions with implicit return",
      "fullTitle": "lib/utils clean() should format es6 arrow functions with implicit return",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an object representation of a string created with a String constructor",
      "fullTitle": "lib/utils stringify() should return an object representation of a string created with a String constructor",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return Buffer with .toJSON representation",
      "fullTitle": "lib/utils stringify() should return Buffer with .toJSON representation",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return Date object with .toISOString() + string prefix",
      "fullTitle": "lib/utils stringify() should return Date object with .toISOString() + string prefix",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return invalid Date object with .toString() + string prefix",
      "fullTitle": "lib/utils stringify() should return invalid Date object with .toString() + string prefix",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should canonicalize the object",
      "fullTitle": "lib/utils stringify() should canonicalize the object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle circular structures in objects",
      "fullTitle": "lib/utils stringify() should handle circular structures in objects",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle circular structures in arrays",
      "fullTitle": "lib/utils stringify() should handle circular structures in arrays",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle circular structures in functions",
      "fullTitle": "lib/utils stringify() should handle circular structures in functions",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle various non-undefined, non-null, non-object, non-array, non-date, and non-function values",
      "fullTitle": "lib/utils stringify() should handle various non-undefined, non-null, non-object, non-array, non-date, and non-function values",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle arrays",
      "fullTitle": "lib/utils stringify() should handle arrays",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle functions",
      "fullTitle": "lib/utils stringify() should handle functions",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle empty objects",
      "fullTitle": "lib/utils stringify() should handle empty objects",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle empty arrays",
      "fullTitle": "lib/utils stringify() should handle empty arrays",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle non-empty arrays",
      "fullTitle": "lib/utils stringify() should handle non-empty arrays",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle empty functions (with no properties)",
      "fullTitle": "lib/utils stringify() should handle empty functions (with no properties)",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle functions w/ properties",
      "fullTitle": "lib/utils stringify() should handle functions w/ properties",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle undefined values",
      "fullTitle": "lib/utils stringify() should handle undefined values",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should recurse",
      "fullTitle": "lib/utils stringify() should recurse",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "might get confusing",
      "fullTitle": "lib/utils stringify() might get confusing",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not freak out if it sees a primitive twice",
      "fullTitle": "lib/utils stringify() should not freak out if it sees a primitive twice",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should stringify dates",
      "fullTitle": "lib/utils stringify() should stringify dates",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle object without an Object prototype",
      "fullTitle": "lib/utils stringify() should handle object without an Object prototype",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle Symbol",
      "fullTitle": "lib/utils stringify() should handle Symbol",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle length properties that cannot be coerced to a number",
      "fullTitle": "lib/utils stringify() should handle length properties that cannot be coerced to a number",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should show the handle -0 situations",
      "fullTitle": "lib/utils stringify() #Number should show the handle -0 situations",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should work well with `NaN` and `Infinity`",
      "fullTitle": "lib/utils stringify() #Number should work well with `NaN` and `Infinity`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "floats and ints",
      "fullTitle": "lib/utils stringify() #Number floats and ints",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should work with bigints when possible",
      "fullTitle": "lib/utils stringify() #Number should work with bigints when possible",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should represent the actual full result",
      "fullTitle": "lib/utils stringify() canonicalize example should represent the actual full result",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should recognize various types",
      "fullTitle": "lib/utils type() should recognize various types",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should recognize null and undefined",
      "fullTitle": "lib/utils type() when toString on null or undefined stringifies window should recognize null and undefined",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should recognize various types",
      "fullTitle": "lib/utils canonicalType() should recognize various types",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should recognize null and undefined",
      "fullTitle": "lib/utils canonicalType() when toString on null or undefined stringifies window should recognize null and undefined",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true if the value is Promise-ish",
      "fullTitle": "lib/utils isPromise() should return true if the value is Promise-ish",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false if the value is not an object",
      "fullTitle": "lib/utils isPromise() should return false if the value is not an object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false if the value is an object w/o a \"then\" function",
      "fullTitle": "lib/utils isPromise() should return false if the value is an object w/o a \"then\" function",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return false if the object is null",
      "fullTitle": "lib/utils isPromise() should return false if the object is null",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "replaces the usual xml suspects",
      "fullTitle": "lib/utils escape() replaces the usual xml suspects",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "replaces invalid xml characters",
      "fullTitle": "lib/utils escape() replaces invalid xml characters",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return its input as string wrapped in single quotes",
      "fullTitle": "lib/utils sQuote() should return its input as string wrapped in single quotes",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return its input as string wrapped in double quotes",
      "fullTitle": "lib/utils dQuote() should return its input as string wrapped in double quotes",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an object with a null prototype",
      "fullTitle": "lib/utils createMap() should return an object with a null prototype",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add props to the object",
      "fullTitle": "lib/utils createMap() should add props to the object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add props from all object parameters to the object",
      "fullTitle": "lib/utils createMap() should add props from all object parameters to the object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should convert the string to lowercase",
      "fullTitle": "lib/utils slug() should convert the string to lowercase",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should convert whitespace to dashes",
      "fullTitle": "lib/utils slug() should convert whitespace to dashes",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should strip non-alphanumeric and non-dash characters",
      "fullTitle": "lib/utils slug() should strip non-alphanumeric and non-dash characters",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should disallow consecutive dashes",
      "fullTitle": "lib/utils slug() should disallow consecutive dashes",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a copy of the array",
      "fullTitle": "lib/utils castArray() when provided an array value should return a copy of the array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an array containing the arguments",
      "fullTitle": "lib/utils castArray() when provided an \"arguments\" value should return an array containing the arguments",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an array containing the object only",
      "fullTitle": "lib/utils castArray() when provided an object should return an array containing the object only",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an empty array",
      "fullTitle": "lib/utils castArray() when provided no parameters should return an empty array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an array containing the primitive value only",
      "fullTitle": "lib/utils castArray() when provided a primitive value should return an array containing the primitive value only",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an array containing a null value only",
      "fullTitle": "lib/utils castArray() when provided null should return an array containing a null value only",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should print a deprecation message",
      "fullTitle": "lib/utils lookupFiles() when run in Node.js should print a deprecation message",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should delegate to new location of lookupFiles()",
      "fullTitle": "lib/utils lookupFiles() when run in Node.js should delegate to new location of lookupFiles()",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "lib/utils lookupFiles() when run in browser should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a non-empty string",
      "fullTitle": "lib/utils uniqueID() should return a non-empty string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a BufferedWorkerPool instance",
      "fullTitle": "class BufferedWorkerPool static method create() should return a BufferedWorkerPool instance",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw",
      "fullTitle": "class BufferedWorkerPool static method create() when passed no arguments should not throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a serialized string",
      "fullTitle": "class BufferedWorkerPool static method serializeOptions() should return a serialized string",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not throw",
      "fullTitle": "class BufferedWorkerPool static method serializeOptions() when passed no arguments should not throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not perform serialization twice",
      "fullTitle": "class BufferedWorkerPool static method serializeOptions() when called multiple times with the same object should not perform serialization twice",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the same value",
      "fullTitle": "class BufferedWorkerPool static method serializeOptions() when called multiple times with the same object should return the same value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should apply defaults",
      "fullTitle": "class BufferedWorkerPool constructor should apply defaults",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the object returned by `workerpool.Pool#stats`",
      "fullTitle": "class BufferedWorkerPool instance method stats() should return the object returned by `workerpool.Pool#stats`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should serialize the options object",
      "fullTitle": "class BufferedWorkerPool instance method run() should serialize the options object",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should deserialize the result",
      "fullTitle": "class BufferedWorkerPool instance method run() should deserialize the result",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reject",
      "fullTitle": "class BufferedWorkerPool instance method run() when passed no arguments should reject",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reject",
      "fullTitle": "class BufferedWorkerPool instance method run() when passed a non-string filepath should reject",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should delegate to the underlying pool w/ \"force\" behavior",
      "fullTitle": "class BufferedWorkerPool instance method terminate() when called with `force` should delegate to the underlying pool w/ \"force\" behavior",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should delegate to the underlying pool w/o \"force\" behavior",
      "fullTitle": "class BufferedWorkerPool instance method terminate() when called without `force` should delegate to the underlying pool w/o \"force\" behavior",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\buffered-worker-pool.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should use the YAML parser",
      "fullTitle": "cli/config loadConfig() when parsing succeeds when supplied a filepath with \".yaml\" extension should use the YAML parser",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should use the YAML parser",
      "fullTitle": "cli/config loadConfig() when parsing succeeds when supplied a filepath with \".yml\" extension should use the YAML parser",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should use the JS parser",
      "fullTitle": "cli/config loadConfig() when parsing succeeds when supplied a filepath with \".js\" extension should use the JS parser",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should use the JS parser",
      "fullTitle": "cli/config loadConfig() when parsing succeeds when supplied a filepath with \".cjs\" extension should use the JS parser",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should use the JSON parser",
      "fullTitle": "cli/config loadConfig() when parsing succeeds when supplied a filepath with \".jsonc\" extension should use the JSON parser",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should use the JSON parser",
      "fullTitle": "cli/config loadConfig() when parsing succeeds when supplied a filepath with \".json\" extension should use the JSON parser",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should use the JSON parser",
      "fullTitle": "cli/config loadConfig() when supplied a filepath with unsupported extension should use the JSON parser",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "cli/config loadConfig() when config file parsing fails should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should look for one of the config files using findup-sync",
      "fullTitle": "cli/config findConfig() should look for one of the config files using findup-sync",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should support an explicit `cwd`",
      "fullTitle": "cli/config findConfig() should support an explicit `cwd`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\config.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--icu-data-dir should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --icu-data-dir should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--title should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --title should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-import-meta-resolve should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-import-meta-resolve should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--use-largepages should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --use-largepages should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-tls should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-tls should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-event-categories should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-event-categories should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--conditions should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --conditions should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-event-file-pattern should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-event-file-pattern should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--disable-proto should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --disable-proto should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-worker should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-worker should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--diagnostic-dir should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --diagnostic-dir should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--debug-arraybuffer-allocations should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --debug-arraybuffer-allocations should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--max-http-header-size should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --max-http-header-size should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--v8-pool-size should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --v8-pool-size should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--tls-max-v1.2 should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --tls-max-v1.2 should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--zero-fill-buffers should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --zero-fill-buffers should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-sync-io should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-sync-io should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--disallow-code-generation-from-strings should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --disallow-code-generation-from-strings should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--force-context-aware should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --force-context-aware should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--report-dir should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --report-dir should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--pending-deprecation should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --pending-deprecation should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--use-bundled-ca should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --use-bundled-ca should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--report-filename should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --report-filename should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--report-compact should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --report-compact should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--report-on-fatalerror should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --report-on-fatalerror should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--perf-prof should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --perf-prof should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--report-signal should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --report-signal should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--preserve-symlinks-main should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --preserve-symlinks-main should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--openssl-config should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --openssl-config should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--tls-cipher-list should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --tls-cipher-list should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--use-openssl-ca should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --use-openssl-ca should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-sigint should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-sigint should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--no-node-snapshot should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --no-node-snapshot should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--track-heap-objects should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --track-heap-objects should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-repl-await should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-repl-await should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-json-modules should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-json-modules should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--perf-prof-unwinding-info should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --perf-prof-unwinding-info should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--abort-on-uncaught-exception should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --abort-on-uncaught-exception should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--interpreted-frames-native-stack should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --interpreted-frames-native-stack should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--perf-basic-prof-only-functions should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --perf-basic-prof-only-functions should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--max-old-space-size should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --max-old-space-size should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--perf-basic-prof should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --perf-basic-prof should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--stack-trace-limit should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --stack-trace-limit should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--jitless should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --jitless should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--huge-max-old-generation-size should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --huge-max-old-generation-size should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--report-uncaught-exception should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --report-uncaught-exception should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--report-on-signal should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --report-on-signal should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-policy should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-policy should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--enable-source-maps should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --enable-source-maps should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-loader should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-loader should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--tls-min-v1.2 should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --tls-min-v1.2 should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-modules should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-modules should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-wasm-modules should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-wasm-modules should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--policy-integrity should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --policy-integrity should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-vm-modules should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-vm-modules should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-report should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-report should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-wasi-unstable-preview1 should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-wasi-unstable-preview1 should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-uncaught should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-uncaught should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--insecure-http-parser should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --insecure-http-parser should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--frozen-intrinsics should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --frozen-intrinsics should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--tls-keylog should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --tls-keylog should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--input-type should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --input-type should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--heapsnapshot-signal should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --heapsnapshot-signal should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--tls-max-v1.3 should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --tls-max-v1.3 should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--http-parser should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --http-parser should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--http-server-default-timeout should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --http-server-default-timeout should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--experimental-specifier-resolution should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --experimental-specifier-resolution should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--no-deprecation should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --no-deprecation should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--tls-min-v1.0 should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --tls-min-v1.0 should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--no-force-async-hooks-checks should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --no-force-async-hooks-checks should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--no-warnings should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --no-warnings should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--preserve-symlinks should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --preserve-symlinks should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--tls-min-v1.1 should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --tls-min-v1.1 should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--inspect-port should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --inspect-port should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-exit should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-exit should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--redirect-warnings should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --redirect-warnings should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--tls-min-v1.3 should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --tls-min-v1.3 should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--throw-deprecation should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --throw-deprecation should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-deprecation should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-deprecation should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-warnings should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-warnings should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--unhandled-rejections should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --unhandled-rejections should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--inspect should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --inspect should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--napi-modules should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --napi-modules should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--inspect-brk should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --inspect-brk should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--inspect-publish-uid should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --inspect-publish-uid should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--debug-port should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --debug-port should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--trace-events-enabled should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --trace-events-enabled should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--report-directory should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --report-directory should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--prof-process should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --prof-process should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--es-module-specifier-resolution should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --es-module-specifier-resolution should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--loader should return true",
      "fullTitle": "node-flags isNodeFlag() for all allowed node environment flags --loader should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "--require should return false",
      "fullTitle": "node-flags isNodeFlag() for all allowed node env flags which conflict with mocha flags --require should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "-r should return false",
      "fullTitle": "node-flags isNodeFlag() for all allowed node env flags which conflict with mocha flags -r should return false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should require leading dashes",
      "fullTitle": "node-flags isNodeFlag() when expecting leading dashes should require leading dashes",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for flags starting with \"preserve-symlinks\"",
      "fullTitle": "node-flags isNodeFlag() special cases should return true for flags starting with \"preserve-symlinks\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for flags starting with \"harmony-\" or \"harmony_\"",
      "fullTitle": "node-flags isNodeFlag() special cases should return true for flags starting with \"harmony-\" or \"harmony_\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for flags starting with \"trace-\" or \"trace_\"",
      "fullTitle": "node-flags isNodeFlag() special cases should return true for flags starting with \"trace-\" or \"trace_\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for \"harmony\" itself",
      "fullTitle": "node-flags isNodeFlag() special cases should return true for \"harmony\" itself",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for \"gc-global\"",
      "fullTitle": "node-flags isNodeFlag() special cases should return true for \"gc-global\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for \"es-staging\"",
      "fullTitle": "node-flags isNodeFlag() special cases should return true for \"es-staging\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for \"use-strict\"",
      "fullTitle": "node-flags isNodeFlag() special cases should return true for \"use-strict\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for flags starting with \"--v8-\"",
      "fullTitle": "node-flags isNodeFlag() special cases should return true for flags starting with \"--v8-\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true for inspect flags",
      "fullTitle": "node-flags impliesNoTimeouts() should return true for inspect flags",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle single v8 flags",
      "fullTitle": "node-flags unparseNodeFlags() should handle single v8 flags",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle multiple v8 flags",
      "fullTitle": "node-flags unparseNodeFlags() should handle multiple v8 flags",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\node-flags.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return an object containing positional args, defaults, and anti-reloading flags",
      "fullTitle": "options loadOptions() when no parameter provided should return an object containing positional args, defaults, and anti-reloading flags",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return merged options incl. package.json opts",
      "fullTitle": "options loadOptions() when parameter provided package.json when path to package.json (`--package <path>`) is valid should return merged options incl. package.json opts",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not try to find a package.json",
      "fullTitle": "options loadOptions() when parameter provided package.json when path to package.json (`--package <path>`) is valid should not try to find a package.json",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set package = false",
      "fullTitle": "options loadOptions() when parameter provided package.json when path to package.json (`--package <path>`) is valid should set package = false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "options loadOptions() when parameter provided package.json when path to package.json (`--package <path>`) is invalid should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return merged options incl. found package.json",
      "fullTitle": "options loadOptions() when parameter provided package.json when path to package.json unspecified should return merged options incl. found package.json",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set package = false",
      "fullTitle": "options loadOptions() when parameter provided package.json when path to package.json unspecified should set package = false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return parsed args and default config",
      "fullTitle": "options loadOptions() when parameter provided package.json when called with package = false (`--no-package`) should return parsed args and default config",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not look for package.json",
      "fullTitle": "options loadOptions() when parameter provided package.json when called with package = false (`--no-package`) should not look for package.json",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set package = false",
      "fullTitle": "options loadOptions() when parameter provided package.json when called with package = false (`--no-package`) should set package = false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return parsed args, default config and package.json",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with config = false (`--no-config`) should return parsed args, default config and package.json",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not attempt to load a config file",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with config = false (`--no-config`) should not attempt to load a config file",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not attempt to find a config file",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with config = false (`--no-config`) should not attempt to find a config file",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set config = false",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with config = false (`--no-config`) should set config = false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not look for a config",
      "fullTitle": "options loadOptions() when parameter provided rc file when path to config (`--config <path>`) is invalid should not look for a config",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attempt to load file at path",
      "fullTitle": "options loadOptions() when parameter provided rc file when path to config (`--config <path>`) is invalid should attempt to load file at path",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw to warn the user",
      "fullTitle": "options loadOptions() when parameter provided rc file when path to config (`--config <path>`) is invalid should throw to warn the user",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should look for a config",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with unspecified config when an rc file would be found should look for a config",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should attempt to load file at found path",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with unspecified config when an rc file would be found should attempt to load file at found path",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set config = false",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with unspecified config when an rc file would be found should set config = false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should look for a config",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with unspecified config when an rc file would not be found should look for a config",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not attempt to load a config file",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with unspecified config when an rc file would not be found should not attempt to load a config file",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should set config = false",
      "fullTitle": "options loadOptions() when parameter provided rc file when called with unspecified config when an rc file would not be found should set config = false",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should prioritize package.json over defaults",
      "fullTitle": "options loadOptions() config priority should prioritize package.json over defaults",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 77,
      "currentRetry": 0,
      "speed": "slow",
      "err": {}
    },
    {
      "title": "should prioritize rc file over package.json",
      "fullTitle": "options loadOptions() config priority should prioritize rc file over package.json",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 75,
      "currentRetry": 0,
      "speed": "medium",
      "err": {}
    },
    {
      "title": "should prioritize args over rc file",
      "fullTitle": "options loadOptions() config priority should prioritize args over rc file",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 72,
      "currentRetry": 0,
      "speed": "medium",
      "err": {}
    },
    {
      "title": "should return basic parsed arguments and flag",
      "fullTitle": "options loadOptions() when called with a one-and-done arg \"help\" should return basic parsed arguments and flag",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return basic parsed arguments and flag",
      "fullTitle": "options loadOptions() when called with a one-and-done arg \"h\" should return basic parsed arguments and flag",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return basic parsed arguments and flag",
      "fullTitle": "options loadOptions() when called with a one-and-done arg \"version\" should return basic parsed arguments and flag",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return basic parsed arguments and flag",
      "fullTitle": "options loadOptions() when called with a one-and-done arg \"V\" should return basic parsed arguments and flag",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return basic parsed arguments and flag",
      "fullTitle": "options loadOptions() when called with a one-and-done arg \"list-interfaces\" should return basic parsed arguments and flag",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return basic parsed arguments and flag",
      "fullTitle": "options loadOptions() when called with a one-and-done arg \"list-reporters\" should return basic parsed arguments and flag",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not concatenate the default value",
      "fullTitle": "options loadOptions() \"extension\" handling when user supplies \"extension\" option should not concatenate the default value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should retain the default",
      "fullTitle": "options loadOptions() \"extension\" handling when user does not supply \"extension\" option should retain the default",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should place both - unsplitted - into the positional arguments array",
      "fullTitle": "options loadOptions() \"spec\" handling when user supplies \"spec\" in config and positional arguments should place both - unsplitted - into the positional arguments array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not split option values by comma",
      "fullTitle": "options loadOptions() \"ignore\" handling should not split option values by comma",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\options.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should disallow an array of names",
      "fullTitle": "helpers validateLegacyPlugin() when used with \"reporter\" key should disallow an array of names",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail to recognize an unknown reporter",
      "fullTitle": "helpers validateLegacyPlugin() when used with \"reporter\" key should fail to recognize an unknown reporter",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should disallow an array of names",
      "fullTitle": "helpers validateLegacyPlugin() when used with an \"interfaces\" key should disallow an array of names",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail to recognize an unknown interface",
      "fullTitle": "helpers validateLegacyPlugin() when used with an \"interfaces\" key should fail to recognize an unknown interface",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail",
      "fullTitle": "helpers validateLegacyPlugin() when used with an unknown plugin type should fail",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should fail and report the original error",
      "fullTitle": "helpers validateLegacyPlugin() when a plugin throws an exception upon load should fail and report the original error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a flat array",
      "fullTitle": "helpers list() when provided a flat array should return a flat array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a flat array",
      "fullTitle": "helpers list() when provided a nested array should return a flat array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a flat array",
      "fullTitle": "helpers list() when given a comma-delimited string should return a flat array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run-helpers.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option retries",
      "fullTitle": "command run builder number type should include option retries",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option jobs",
      "fullTitle": "command run builder number type should include option jobs",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option config",
      "fullTitle": "command run builder string type should include option config",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option fgrep",
      "fullTitle": "command run builder string type should include option fgrep",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option grep",
      "fullTitle": "command run builder string type should include option grep",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option package",
      "fullTitle": "command run builder string type should include option package",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option reporter",
      "fullTitle": "command run builder string type should include option reporter",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option ui",
      "fullTitle": "command run builder string type should include option ui",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option slow",
      "fullTitle": "command run builder string type should include option slow",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option timeout",
      "fullTitle": "command run builder string type should include option timeout",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option allow-uncaught",
      "fullTitle": "command run builder boolean type should include option allow-uncaught",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option async-only",
      "fullTitle": "command run builder boolean type should include option async-only",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option bail",
      "fullTitle": "command run builder boolean type should include option bail",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option check-leaks",
      "fullTitle": "command run builder boolean type should include option check-leaks",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option color",
      "fullTitle": "command run builder boolean type should include option color",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option delay",
      "fullTitle": "command run builder boolean type should include option delay",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option diff",
      "fullTitle": "command run builder boolean type should include option diff",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option exit",
      "fullTitle": "command run builder boolean type should include option exit",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option forbid-only",
      "fullTitle": "command run builder boolean type should include option forbid-only",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option forbid-pending",
      "fullTitle": "command run builder boolean type should include option forbid-pending",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option full-trace",
      "fullTitle": "command run builder boolean type should include option full-trace",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option growl",
      "fullTitle": "command run builder boolean type should include option growl",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option inline-diffs",
      "fullTitle": "command run builder boolean type should include option inline-diffs",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option invert",
      "fullTitle": "command run builder boolean type should include option invert",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option list-interfaces",
      "fullTitle": "command run builder boolean type should include option list-interfaces",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option list-reporters",
      "fullTitle": "command run builder boolean type should include option list-reporters",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option no-colors",
      "fullTitle": "command run builder boolean type should include option no-colors",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option parallel",
      "fullTitle": "command run builder boolean type should include option parallel",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option recursive",
      "fullTitle": "command run builder boolean type should include option recursive",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option sort",
      "fullTitle": "command run builder boolean type should include option sort",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option watch",
      "fullTitle": "command run builder boolean type should include option watch",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option extension",
      "fullTitle": "command run builder array type should include option extension",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option file",
      "fullTitle": "command run builder array type should include option file",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option global",
      "fullTitle": "command run builder array type should include option global",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option ignore",
      "fullTitle": "command run builder array type should include option ignore",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option reporter-option",
      "fullTitle": "command run builder array type should include option reporter-option",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option require",
      "fullTitle": "command run builder array type should include option require",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option spec",
      "fullTitle": "command run builder array type should include option spec",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option watch-files",
      "fullTitle": "command run builder array type should include option watch-files",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should include option watch-ignore",
      "fullTitle": "command run builder array type should include option watch-ignore",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\cli\\run.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the Mocha instance",
      "fullTitle": "Mocha instance method parallelMode() when `Mocha` is running in Node.js should return the Mocha instance",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 6,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not swap the Runner, nor change lazy loading setting",
      "fullTitle": "Mocha instance method parallelMode() when `Mocha` is running in Node.js when parallel mode is already enabled should not swap the Runner, nor change lazy loading setting",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not swap the Runner, nor change lazy loading setting",
      "fullTitle": "Mocha instance method parallelMode() when `Mocha` is running in Node.js when parallel mode is already disabled should not swap the Runner, nor change lazy loading setting",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should enable parallel mode",
      "fullTitle": "Mocha instance method parallelMode() when `Mocha` is running in Node.js when `Mocha` instance in serial mode when passed `true` value when `Mocha` instance is in `INIT` state should enable parallel mode",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "Mocha instance method parallelMode() when `Mocha` is running in Node.js when `Mocha` instance in serial mode when passed `true` value when `Mocha` instance is not in `INIT` state should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should enable serial mode",
      "fullTitle": "Mocha instance method parallelMode() when `Mocha` is running in Node.js when `Mocha` instance in serial mode when passed non-`true` value when `Mocha` instance is in `INIT` state should enable serial mode",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add the given file to the files array",
      "fullTitle": "Mocha instance method addFile() should add the given file to the files array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method addFile() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should load all files from the files array",
      "fullTitle": "Mocha instance method loadFiles() should load all files from the files array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should execute the optional callback if given",
      "fullTitle": "Mocha instance method loadFiles() should execute the optional callback if given",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should delegate Mocha.unloadFile() for each item in its list of files",
      "fullTitle": "Mocha instance method unloadFiles() should delegate Mocha.unloadFile() for each item in its list of files",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 9,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "Mocha instance method unloadFiles() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should load from current working directory",
      "fullTitle": "Mocha instance method reporter() when a reporter exists relative to the cwd should load from current working directory",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw \"invalid reporter\" exception",
      "fullTitle": "Mocha instance method reporter() when a reporter exists relative to the cwd when the reporter throws upon load should throw \"invalid reporter\" exception",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should warn about the error before throwing",
      "fullTitle": "Mocha instance method reporter() when a reporter exists relative to the cwd when the reporter throws upon load should warn about the error before throwing",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should load from module path",
      "fullTitle": "Mocha instance method reporter() when a reporter exists relative to the \"mocha\" module path should load from module path",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw \"invalid reporter\" exception",
      "fullTitle": "Mocha instance method reporter() when a reporter exists relative to the \"mocha\" module path when the reporter throws upon load should throw \"invalid reporter\" exception",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should warn about the error before throwing",
      "fullTitle": "Mocha instance method reporter() when a reporter exists relative to the \"mocha\" module path when the reporter throws upon load should warn about the error before throwing",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reset referencesCleaned and allow for next run",
      "fullTitle": "Mocha instance method unloadFiles() should reset referencesCleaned and allow for next run",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not be allowed when the current instance is already disposed",
      "fullTitle": "Mocha instance method unloadFiles() should not be allowed when the current instance is already disposed",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the `Mocha` instance",
      "fullTitle": "Mocha instance method lazyLoadFiles() should return the `Mocha` instance",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should enable eager loading",
      "fullTitle": "Mocha instance method lazyLoadFiles() when passed a non-`true` value should enable eager loading",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should enable lazy loading",
      "fullTitle": "Mocha instance method lazyLoadFiles() when passed `true` should enable lazy loading",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should unload a specific file from cache",
      "fullTitle": "Mocha static method unloadFile() should unload a specific file from cache",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\mocha.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should start in \"IDLE\" state",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner constructor should start in \"IDLE\" state",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should disallow an invalid state transition",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance property _state should disallow an invalid state transition",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should change the state to COMPLETE",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner event EVENT_RUN_END should change the state to COMPLETE",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should be chainable",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() should be chainable",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should emit `EVENT_RUN_BEGIN`",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() should emit `EVENT_RUN_BEGIN`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should create object references",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when instructed to link objects should create object references",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should result in an uncaught exception",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when instructed to link objects when event data object is missing an ID should result in an uncaught exception",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should recover",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when a worker fails should recover",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should delegate to Runner#uncaught",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when a worker fails should delegate to Runner#uncaught",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not force-terminate",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when suite should bail when no event contains an error should not force-terminate",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should cleanly terminate the thread pool",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when suite should bail when an event contains an error and has positive failures when subsequent files have not yet been run should cleanly terminate the thread pool",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should cleanly terminate the thread pool",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when suite should bail when an event contains an error and has positive failures when subsequent files already started running should cleanly terminate the thread pool",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not force-terminate",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when a suite has a bail flag when no event contains an error should not force-terminate",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should cleanly terminate the thread pool",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when a suite has a bail flag when an event contains an error and has positive failures when subsequent files have not yet been run should cleanly terminate the thread pool",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should cleanly terminate the thread pool",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when a suite has a bail flag when an event contains an error and has positive failures when subsequent files already started running should cleanly terminate the thread pool",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should cleanly terminate the thread pool",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method run() when a suite has a bail flag when an event contains an error and has positive failures when subsequent files have not yet been run should cleanly terminate the thread pool",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the runner",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method linkPartialObjects() should return the runner",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return true",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method isParallelMode() should return true",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return its context",
      "fullTitle": "parallel-buffered-runner ParallelBufferedRunner instance method workerReporter() should return its context",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\parallel-buffered-runner.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should listen for Runner events",
      "fullTitle": "ParallelBuffered constructor should listen for Runner events",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\reporters\\parallel-buffered.spec.js",
      "duration": 8,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should listen for Runner events expecting to occur once",
      "fullTitle": "ParallelBuffered constructor should listen for Runner events expecting to occur once",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\reporters\\parallel-buffered.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove all listeners",
      "fullTitle": "ParallelBuffered event on EVENT_RUN_END should remove all listeners",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\reporters\\parallel-buffered.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should populate its `events` array with SerializableEvents",
      "fullTitle": "ParallelBuffered event on any other event listened for should populate its `events` array with SerializableEvents",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\reporters\\parallel-buffered.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should execute its callback with a SerializableWorkerResult",
      "fullTitle": "ParallelBuffered instance method done should execute its callback with a SerializableWorkerResult",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\reporters\\parallel-buffered.spec.js",
      "duration": 6,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reset its `events` prop",
      "fullTitle": "ParallelBuffered instance method done should reset its `events` prop",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\reporters\\parallel-buffered.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the value",
      "fullTitle": "serializer function serialize when passed a non-object value should return the value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the value",
      "fullTitle": "serializer function serialize when passed an object value w/o a `serialize` method should return the value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the result of the `serialize` method",
      "fullTitle": "serializer function serialize when passed an object value having a `serialize` method should return the result of the `serialize` method",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `undefined`",
      "fullTitle": "serializer function serialize when not passed anything should return `undefined`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `undefined`",
      "fullTitle": "serializer function deserialize when passed nothing should return `undefined`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the value",
      "fullTitle": "serializer function deserialize when passed a non-object value should return the value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the value",
      "fullTitle": "serializer function deserialize when passed an object value which is not a SerializedWorkerResult should return the value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the result of `SerializableWorkerResult.deserialize` called on the value",
      "fullTitle": "serializer function deserialize when passed a SerializedWorkerResult object should return the result of `SerializableWorkerResult.deserialize` called on the value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw \"invalid arg value\" error",
      "fullTitle": "serializer SerializableEvent constructor when called without `eventName` should throw \"invalid arg value\" error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw \"invalid arg type\" error",
      "fullTitle": "serializer SerializableEvent constructor when called with a non-object `rawObject` should throw \"invalid arg type\" error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should mutate the instance in-place",
      "fullTitle": "serializer SerializableEvent instance method serialize should mutate the instance in-place",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should freeze the instance",
      "fullTitle": "serializer SerializableEvent instance method serialize should freeze the instance",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call the `serialize` method",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an object with a `serialize` method should call the `serialize` method",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call the `serialize` method",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an object containing an object with a `serialize` method should call the `serialize` method",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove the method",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an object containing a non-`serialize` method should remove the method",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should serialize the array",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an object containing an array should serialize the array",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should serialize the error",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an error should serialize the error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should retain own props",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an error should retain own props",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should not retain not-own props",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an error should not retain not-own props",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should serialize the Error",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an object containing a top-level prop with an Error value should serialize the Error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should serialize the Error",
      "fullTitle": "serializer SerializableEvent instance method serialize when passed an object containing a nested prop with an Error value should serialize the Error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a new object w/ null prototype",
      "fullTitle": "serializer SerializableEvent static method deserialize should return a new object w/ null prototype",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw \"invalid arg type\" error",
      "fullTitle": "serializer SerializableEvent static method deserialize when passed a falsy parameter should throw \"invalid arg type\" error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should ignore __proto__",
      "fullTitle": "serializer SerializableEvent static method deserialize when passed value contains `data` prop should ignore __proto__",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should create an Error instance from the nested serialized Error prop",
      "fullTitle": "serializer SerializableEvent static method deserialize when passed value contains `data` prop when `data` prop contains a nested serialized Error prop should create an Error instance from the nested serialized Error prop",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should create an Error instance from the prop",
      "fullTitle": "serializer SerializableEvent static method deserialize when passed value contains an `error` prop should create an Error instance from the prop",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should create a new prop having a function value",
      "fullTitle": "serializer SerializableEvent static method deserialize when passed value data contains a prop beginning with \"$$\" should create a new prop having a function value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should create a new prop returning the original value",
      "fullTitle": "serializer SerializableEvent static method deserialize when passed value data contains a prop beginning with \"$$\" should create a new prop returning the original value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove the prop with the \"$$\" prefix",
      "fullTitle": "serializer SerializableEvent static method deserialize when passed value data contains a prop beginning with \"$$\" should remove the prop with the \"$$\" prefix",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should deserialize each prop",
      "fullTitle": "serializer SerializableEvent static method deserialize when the value data contains a prop with an array value should deserialize each prop",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 18,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should instantiate a SerializableEvent",
      "fullTitle": "serializer SerializableEvent static method create should instantiate a SerializableEvent",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a new SerializableWorkerResult instance",
      "fullTitle": "serializer SerializableWorkerResult static method create should return a new SerializableWorkerResult instance",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `true`",
      "fullTitle": "serializer SerializableWorkerResult static method isSerializedWorkerResult when passed an instance should return `true`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `true`",
      "fullTitle": "serializer SerializableWorkerResult static method isSerializedWorkerResult when passed an object with an appropriate `__type` prop should return `true`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return `false`",
      "fullTitle": "serializer SerializableWorkerResult static method isSerializedWorkerResult when passed an object without an appropriate `__type` prop should return `false`",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call SerializableEvent#deserialize on each item in its `events` prop",
      "fullTitle": "serializer SerializableWorkerResult static method deserialize should call SerializableEvent#deserialize on each item in its `events` prop",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the deserialized value",
      "fullTitle": "serializer SerializableWorkerResult static method deserialize should return the deserialized value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return a read-only value",
      "fullTitle": "serializer SerializableWorkerResult instance method serialize should return a read-only value",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call `SerializableEvent#serialize` of each of its events",
      "fullTitle": "serializer SerializableWorkerResult instance method serialize should call `SerializableEvent#serialize` of each of its events",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should add a readonly `__type` prop",
      "fullTitle": "serializer SerializableWorkerResult constructor should add a readonly `__type` prop",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\serializer.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should work on Windows",
      "fullTitle": "stackTraceFilter() on node on Windows should work on Windows",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\stack-trace-filter.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "does not strip out other bower_components",
      "fullTitle": "stackTraceFilter() on browser does not strip out other bower_components",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\stack-trace-filter.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return the current working directory",
      "fullTitle": "utils function cwd() should return the current working directory",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return \"function\" if the parameter is an async function",
      "fullTitle": "utils function type() should return \"function\" if the parameter is an async function",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return \"error\" if the parameter is an Error",
      "fullTitle": "utils function type() should return \"error\" if the parameter is an Error",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\utils.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return \"buffer\" if the parameter is a Buffer",
      "fullTitle": "utils function canonicalType() should return \"buffer\" if the parameter is a Buffer",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should return \"asyncfunction\" if the parameter is an async function",
      "fullTitle": "utils function canonicalType() should return \"asyncfunction\" if the parameter is an async function",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\utils.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should throw",
      "fullTitle": "worker when run as main process should throw",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 69,
      "currentRetry": 0,
      "speed": "medium",
      "err": {}
    },
    {
      "title": "should register itself with workerpool",
      "fullTitle": "worker when run as worker process should register itself with workerpool",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reject",
      "fullTitle": "worker when run as worker process function run() when called without arguments should reject",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reject",
      "fullTitle": "worker when run as worker process function run() when passed a non-string `options` value should reject",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reject",
      "fullTitle": "worker when run as worker process function run() when passed an invalid string `options` value should reject",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reject",
      "fullTitle": "worker when run as worker process function run() when called with empty \"filepath\" argument should reject",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reject",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" argument is unloadable should reject",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle \"--require\"",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" is loadable should handle \"--require\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should handle \"--ui\"",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" is loadable should handle \"--ui\"",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should call Mocha#run",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" is loadable should call Mocha#run",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove all uncaughtException listeners",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" is loadable should remove all uncaughtException listeners",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 4,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should remove all unhandledRejection listeners",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" is loadable should remove all unhandledRejection listeners",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 4,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should resolve with a SerializedWorkerResult",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" is loadable when serialization succeeds should resolve with a SerializedWorkerResult",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should reject",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" is loadable when serialization fails should reject",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "should initialize only once",
      "fullTitle": "worker when run as worker process function run() when the file at \"filepath\" is loadable when run twice should initialize only once",
      "file": "C:\\Users\\Michal\\Workspace\\dorny\\mocha\\test\\node-unit\\worker.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    }
  ]
}