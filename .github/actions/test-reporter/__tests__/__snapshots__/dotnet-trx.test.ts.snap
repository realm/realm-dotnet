// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`dotnet-trx tests matches report snapshot 1`] = `
TestRunResult {
  "path": "fixtures/dotnet-trx.trx",
  "suites": Array [
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Custom Name",
              "result": "success",
              "time": 0.1371,
            },
            TestCaseResult {
              "error": Object {
                "details": "System.DivideByZeroException : Attempted to divide by zero.
   at DotnetTests.Unit.Calculator.Div(Int32 a, Int32 b) in C:\\\\Users\\\\Michal\\\\Workspace\\\\dorny\\\\test-reporter\\\\reports\\\\dotnet\\\\DotnetTests.Unit\\\\Calculator.cs:line 9
   at DotnetTests.XUnitTests.CalculatorTests.Exception_In_TargetTest() in C:\\\\Users\\\\Michal\\\\Workspace\\\\dorny\\\\test-reporter\\\\reports\\\\dotnet\\\\DotnetTests.XUnitTests\\\\CalculatorTests.cs:line 33",
                "line": 9,
                "message": "System.DivideByZeroException : Attempted to divide by zero.",
                "path": "DotnetTests.Unit/Calculator.cs",
              },
              "name": "Exception_In_TargetTest",
              "result": "failed",
              "time": 0.8377,
            },
            TestCaseResult {
              "error": Object {
                "details": "System.Exception : Test
   at DotnetTests.XUnitTests.CalculatorTests.Exception_In_Test() in C:\\\\Users\\\\Michal\\\\Workspace\\\\dorny\\\\test-reporter\\\\reports\\\\dotnet\\\\DotnetTests.XUnitTests\\\\CalculatorTests.cs:line 39",
                "line": 39,
                "message": "System.Exception : Test",
                "path": "DotnetTests.XUnitTests/CalculatorTests.cs",
              },
              "name": "Exception_In_Test",
              "result": "failed",
              "time": 2.5175,
            },
            TestCaseResult {
              "error": Object {
                "details": "Assert.Equal() Failure
Expected: 3
Actual:   2
   at DotnetTests.XUnitTests.CalculatorTests.Failing_Test() in C:\\\\Users\\\\Michal\\\\Workspace\\\\dorny\\\\test-reporter\\\\reports\\\\dotnet\\\\DotnetTests.XUnitTests\\\\CalculatorTests.cs:line 27",
                "line": 27,
                "message": "Assert.Equal() Failure
Expected: 3
Actual:   2",
                "path": "DotnetTests.XUnitTests/CalculatorTests.cs",
              },
              "name": "Failing_Test",
              "result": "failed",
              "time": 3.8697,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Is_Even_Number(i: 2)",
              "result": "success",
              "time": 0.0078,
            },
            TestCaseResult {
              "error": Object {
                "details": "Assert.True() Failure
Expected: True
Actual:   False
   at DotnetTests.XUnitTests.CalculatorTests.Is_Even_Number(Int32 i) in C:\\\\Users\\\\Michal\\\\Workspace\\\\dorny\\\\test-reporter\\\\reports\\\\dotnet\\\\DotnetTests.XUnitTests\\\\CalculatorTests.cs:line 59",
                "line": 59,
                "message": "Assert.True() Failure
Expected: True
Actual:   False",
                "path": "DotnetTests.XUnitTests/CalculatorTests.cs",
              },
              "name": "Is_Even_Number(i: 3)",
              "result": "failed",
              "time": 0.41409999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Passing_Test",
              "result": "success",
              "time": 0.1365,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should be even number(i: 2)",
              "result": "success",
              "time": 0.0097,
            },
            TestCaseResult {
              "error": Object {
                "details": "Assert.True() Failure
Expected: True
Actual:   False
   at DotnetTests.XUnitTests.CalculatorTests.Theory_With_Custom_Name(Int32 i) in C:\\\\Users\\\\Michal\\\\Workspace\\\\dorny\\\\test-reporter\\\\reports\\\\dotnet\\\\DotnetTests.XUnitTests\\\\CalculatorTests.cs:line 67",
                "line": 67,
                "message": "Assert.True() Failure
Expected: True
Actual:   False",
                "path": "DotnetTests.XUnitTests/CalculatorTests.cs",
              },
              "name": "Should be even number(i: 3)",
              "result": "failed",
              "time": 0.6537000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Skipped_Test",
              "result": "skipped",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Timeout_Test",
              "result": "success",
              "time": 108.42580000000001,
            },
          ],
        },
      ],
      "name": "DotnetTests.XUnitTests.CalculatorTests",
      "totalTime": undefined,
    },
  ],
  "totalTime": 1116,
}
`;

exports[`dotnet-trx tests report from FluentValidation test results matches snapshot 1`] = `
TestRunResult {
  "path": "fixtures/external/FluentValidation.Tests.trx",
  "suites": Array [
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Can_replace_default_errorcode_resolver",
              "result": "success",
              "time": 0.31579999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "CanValidateInstancesOfType_returns_false_when_comparing_against_some_other_type",
              "result": "success",
              "time": 0.0513,
            },
            TestCaseResult {
              "error": undefined,
              "name": "CanValidateInstancesOfType_returns_true_when_comparing_against_same_type",
              "result": "success",
              "time": 0.0665,
            },
            TestCaseResult {
              "error": undefined,
              "name": "CanValidateInstancesOfType_returns_true_when_comparing_against_subclass",
              "result": "success",
              "time": 0.0566,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Default_error_code_should_be_class_name",
              "result": "success",
              "time": 0.1555,
            },
            TestCaseResult {
              "error": undefined,
              "name": "OverridePropertyName_should_override_property_name",
              "result": "success",
              "time": 0.1676,
            },
            TestCaseResult {
              "error": undefined,
              "name": "OverridePropertyName_with_lambda_should_override_property_name",
              "result": "success",
              "time": 0.3832,
            },
            TestCaseResult {
              "error": undefined,
              "name": "PreValidate_bypasses_nullcheck_on_instance",
              "result": "success",
              "time": 0.2142,
            },
            TestCaseResult {
              "error": undefined,
              "name": "RuleForeach_with_null_instances",
              "result": "success",
              "time": 1.9478,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_be_valid_when_there_are_no_failures_for_single_property",
              "result": "success",
              "time": 0.1968,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_not_main_state",
              "result": "success",
              "time": 0.1976,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_throw_for_non_member_expression_when_validating_single_property",
              "result": "success",
              "time": 0.2162,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_throw_when_rule_is_null",
              "result": "success",
              "time": 0.1178,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_validate_public_Field",
              "result": "success",
              "time": 0.3435,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_validate_single_Field",
              "result": "success",
              "time": 0.24439999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_validate_single_property",
              "result": "success",
              "time": 0.27349999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_validate_single_property_where_invalid_property_as_string",
              "result": "success",
              "time": 0.216,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_validate_single_property_where_property_as_string",
              "result": "success",
              "time": 0.3409,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Uses_named_parameters_to_validate_ruleset",
              "result": "success",
              "time": 0.36160000000000003,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_single_property_by_path",
              "result": "success",
              "time": 0.4851,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_type_when_using_non_generic_validate_overload",
              "result": "success",
              "time": 0.1769,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_validators_fail_then_the_errors_Should_be_accessible_via_the_errors_property",
              "result": "success",
              "time": 0.17,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_validators_fail_then_validatorrunner_should_return_false",
              "result": "success",
              "time": 0.1522,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_Validators_pass_then_the_validatorRunner_should_return_true",
              "result": "success",
              "time": 0.1471,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WhenPreValidationReturnsFalse_ResultReturnToUserImmediatly_Validate(preValidationResult: )",
              "result": "success",
              "time": 0.9423,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WhenPreValidationReturnsFalse_ResultReturnToUserImmediatly_Validate(preValidationResult: AnotherInt Test Message)",
              "result": "success",
              "time": 0.0628,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WhenPreValidationReturnsFalse_ResultReturnToUserImmediatly_ValidateAsync(preValidationResult: )",
              "result": "success",
              "time": 0.9155,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WhenPreValidationReturnsFalse_ResultReturnToUserImmediatly_ValidateAsync(preValidationResult: AnotherInt Test Message)",
              "result": "success",
              "time": 0.057800000000000004,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WhenPreValidationReturnsTrue_ValidatorsGetHit_Validate",
              "result": "success",
              "time": 0.4371,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WhenPreValidationReturnsTrue_ValidatorsGetHit_ValidateAsync",
              "result": "success",
              "time": 1.5404,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WithErrorCode_should_override_error_code",
              "result": "success",
              "time": 0.1849,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WithMessage_and_WithErrorCode_should_override_error_message_and_error_code",
              "result": "success",
              "time": 0.1772,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WithMessage_should_override_error_message",
              "result": "success",
              "time": 0.159,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WithName_should_override_field_name",
              "result": "success",
              "time": 0.20320000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WithName_should_override_field_name_with_value_from_other_property",
              "result": "success",
              "time": 0.2316,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.AbstractValidatorTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Benchmark",
              "result": "skipped",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Equality_comparison_check",
              "result": "success",
              "time": 2.1363,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Gets_accessor",
              "result": "success",
              "time": 0.3872,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Gets_member_for_nested_property",
              "result": "success",
              "time": 0.10840000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Identifies_if_memberexp_acts_on_model_instance",
              "result": "success",
              "time": 0.2977,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.AccessorCacheTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Finds_validators_for_types",
              "result": "success",
              "time": 0.23809999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ForEach_iterates_over_types",
              "result": "success",
              "time": 1.8574,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.AssemblyScannerTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Cascade_mode_can_be_set_after_validator_instantiated",
              "result": "success",
              "time": 0.1778,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Cascade_mode_can_be_set_after_validator_instantiated_async",
              "result": "success",
              "time": 0.8338,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Cascade_mode_can_be_set_after_validator_instantiated_async_legacy",
              "result": "success",
              "time": 1.3079,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Cascade_mode_can_be_set_after_validator_instantiated_legacy",
              "result": "success",
              "time": 0.2101,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_continues_on_failure",
              "result": "success",
              "time": 0.1733,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_continues_on_failure_async",
              "result": "success",
              "time": 1.0423,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_continues_on_failure_when_set_to_Stop_globally_and_overriden_at_rule_level",
              "result": "success",
              "time": 0.223,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_continues_on_failure_when_set_to_Stop_globally_and_overriden_at_rule_level_async",
              "result": "success",
              "time": 1.1028,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_continues_on_failure_when_set_to_Stop_globally_and_overriden_at_rule_level_async_legacy",
              "result": "success",
              "time": 1.4877,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_continues_on_failure_when_set_to_Stop_globally_and_overriden_at_rule_level_legacy",
              "result": "success",
              "time": 0.5266,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_continues_on_failure_when_set_to_StopOnFirstFailure_at_validator_level_and_overriden_at_rule_level",
              "result": "success",
              "time": 0.19369999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_continues_on_failure_when_set_to_StopOnFirstFailure_at_validator_level_and_overriden_at_rule_level_async",
              "result": "success",
              "time": 1.072,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_continues_on_failure_when_set_to_StopOnFirstFailure_at_validator_level_and_overriden_at_rule_level_async_legacy",
              "result": "success",
              "time": 1.0468000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_continues_on_failure_when_set_to_StopOnFirstFailure_at_validator_level_and_overriden_at_rule_level_legacy",
              "result": "success",
              "time": 0.2332,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_continues_to_second_validator_when_first_validator_succeeds_and_cascade_set_to_stop",
              "result": "success",
              "time": 0.16670000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_continues_to_second_validator_when_first_validator_succeeds_and_cascade_set_to_stop_async",
              "result": "success",
              "time": 0.987,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_continues_to_second_validator_when_first_validator_succeeds_and_cascade_set_to_stop_async_legacy",
              "result": "success",
              "time": 1.1758,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_continues_to_second_validator_when_first_validator_succeeds_and_cascade_set_to_stop_legacy",
              "result": "success",
              "time": 0.2155,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_continues_when_set_to_Continue_at_validator_level",
              "result": "success",
              "time": 0.2021,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_continues_when_set_to_Continue_at_validator_level_async",
              "result": "success",
              "time": 1.0564,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_failure_when_set_to_Continue_and_overriden_at_rule_level",
              "result": "success",
              "time": 0.2008,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_failure_when_set_to_Continue_and_overriden_at_rule_level_async",
              "result": "success",
              "time": 0.8319,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_failure_when_set_to_Continue_and_overriden_at_rule_level_async_legacy",
              "result": "success",
              "time": 0.8677,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_failure_when_set_to_Continue_and_overriden_at_rule_level_legacy",
              "result": "success",
              "time": 0.21660000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_first_failure",
              "result": "success",
              "time": 0.1706,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_first_failure_async",
              "result": "success",
              "time": 0.7821,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_first_failure_async_legacy",
              "result": "success",
              "time": 0.8751,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_first_failure_legacy",
              "result": "success",
              "time": 0.1809,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_first_Failure_when_set_to_Continue_globally_and_overriden_at_rule_level",
              "result": "success",
              "time": 0.188,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_first_Failure_when_set_to_Continue_globally_and_overriden_at_rule_level_and_async_validator_is_invoked_synchronously",
              "result": "success",
              "time": 0.4818,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_first_Failure_when_set_to_Continue_globally_and_overriden_at_rule_level_and_async_validator_is_invoked_synchronously_legacy",
              "result": "success",
              "time": 0.5077,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_first_Failure_when_set_to_Continue_globally_and_overriden_at_rule_level_async",
              "result": "success",
              "time": 0.8130000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_first_Failure_when_set_to_Continue_globally_and_overriden_at_rule_level_async_legacy",
              "result": "success",
              "time": 0.7979,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_first_Failure_when_set_to_Continue_globally_and_overriden_at_rule_level_legacy",
              "result": "success",
              "time": 0.23,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_first_failure_when_set_to_StopOnFirstFailure_at_validator_level",
              "result": "success",
              "time": 0.2738,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_first_failure_when_set_to_StopOnFirstFailure_at_validator_level_async",
              "result": "success",
              "time": 0.909,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_first_failure_when_set_to_StopOnFirstFailure_at_validator_level_async_legacy",
              "result": "success",
              "time": 0.8011,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_stops_on_first_failure_when_set_to_StopOnFirstFailure_at_validator_level_legacy",
              "result": "success",
              "time": 0.2253,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.CascadingFailuresTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Can_validate_using_validator_for_base_type",
              "result": "success",
              "time": 1.4496,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Chained_property_should_be_excluded",
              "result": "success",
              "time": 0.1883,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Chained_validator_descriptor",
              "result": "success",
              "time": 0.29710000000000003,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Chained_validator_should_not_be_invoked_on_null_property",
              "result": "success",
              "time": 0.121,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Condition_should_work_with_chained_property",
              "result": "success",
              "time": 0.2054,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Explicitly_included_properties_should_be_propagated_to_nested_validators",
              "result": "success",
              "time": 0.2691,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Explicitly_included_properties_should_be_propagated_to_nested_validators_using_strings",
              "result": "success",
              "time": 0.1753,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Separate_validation_on_chained_property",
              "result": "success",
              "time": 1.368,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Separate_validation_on_chained_property_conditional",
              "result": "success",
              "time": 0.2104,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Separate_validation_on_chained_property_valid",
              "result": "success",
              "time": 0.20249999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_allow_normal_rules_and_chained_property_on_same_property",
              "result": "success",
              "time": 0.2278,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Uses_explicit_ruleset",
              "result": "success",
              "time": 0.5128,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_chained_property",
              "result": "success",
              "time": 1.0483,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.ChainedValidationTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Options_should_only_apply_to_current_validator",
              "result": "success",
              "time": 0.23479999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_create_multiple_validators",
              "result": "success",
              "time": 0.3311,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_execute_multiple_validators",
              "result": "success",
              "time": 0.17809999999999998,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.ChainingValidatorsTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Can_define_nested_rules_for_collection",
              "result": "success",
              "time": 1.6096000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ChildRules_works_with_RuleSet",
              "result": "success",
              "time": 5.8553,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.ChildRulesTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Async_condition_should_work_with_child_collection",
              "result": "success",
              "time": 0.7258,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_specify_condition_for_individual_collection_elements",
              "result": "success",
              "time": 0.9154,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_validate_collection_using_validator_for_base_type",
              "result": "success",
              "time": 1.0736999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Collection_should_be_excluded",
              "result": "success",
              "time": 0.525,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Collection_should_be_explicitly_included_with_expression",
              "result": "success",
              "time": 0.6578,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Collection_should_be_explicitly_included_with_string",
              "result": "success",
              "time": 0.5651999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Condition_should_work_with_child_collection",
              "result": "success",
              "time": 0.7357,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Creates_validator_using_context_from_property_value",
              "result": "success",
              "time": 1.1184,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_override_property_name",
              "result": "success",
              "time": 0.47550000000000003,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_work_with_top_level_collection_validator",
              "result": "success",
              "time": 0.7123999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_work_with_top_level_collection_validator_and_overriden_name",
              "result": "success",
              "time": 0.3943,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Skips_null_items",
              "result": "success",
              "time": 0.5809,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_collection",
              "result": "success",
              "time": 1.0225,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_collection_asynchronously",
              "result": "success",
              "time": 1.4053,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_collection_several_levels_deep",
              "result": "success",
              "time": 1.1437000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_collection_several_levels_deep_async",
              "result": "success",
              "time": 1.0832000000000002,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.CollectionValidatorWithParentTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Async_condition_should_work_with_complex_property",
              "result": "success",
              "time": 2.3119,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Async_condition_should_work_with_complex_property_when_validator_invoked_synchronously",
              "result": "success",
              "time": 0.7052,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_directly_validate_multiple_fields_of_same_type",
              "result": "success",
              "time": 3.4497,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_validate_using_validator_for_base_type",
              "result": "success",
              "time": 1.2612,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Complex_property_should_be_excluded",
              "result": "success",
              "time": 0.3153,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Complex_validator_should_not_be_invoked_on_null_property",
              "result": "success",
              "time": 0.16770000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Condition_should_work_with_complex_property",
              "result": "success",
              "time": 0.4359,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Condition_should_work_with_complex_property_when_invoked_async",
              "result": "success",
              "time": 0.8233,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Explicitly_included_properties_should_be_propagated_to_nested_validators",
              "result": "success",
              "time": 2.3437,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Explicitly_included_properties_should_be_propagated_to_nested_validators_using_strings",
              "result": "success",
              "time": 0.8307,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Multiple_rules_in_chain_with_childvalidator_shouldnt_reuse_accessor",
              "result": "success",
              "time": 0.7222,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Multiple_rules_in_chain_with_childvalidator_shouldnt_reuse_accessor_async",
              "result": "success",
              "time": 5.7314,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_allow_normal_rules_and_complex_property_on_same_property",
              "result": "success",
              "time": 0.7508,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_override_propertyName",
              "result": "success",
              "time": 0.7523,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_child_validator_asynchronously",
              "result": "success",
              "time": 3.7361999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_child_validator_synchronously",
              "result": "success",
              "time": 0.4716,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_complex_property",
              "result": "success",
              "time": 0.9825999999999999,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.ComplexValidationTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Async_condition_executed_synchronosuly_with_asynchronous_collection_rule",
              "result": "success",
              "time": 0.3309,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Async_condition_executed_synchronosuly_with_asynchronous_rule",
              "result": "success",
              "time": 0.2385,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Async_condition_executed_synchronosuly_with_synchronous_collection_role",
              "result": "success",
              "time": 0.3216,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Async_condition_executed_synchronosuly_with_synchronous_role",
              "result": "success",
              "time": 0.3076,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Async_condition_is_applied_to_all_validators_in_the_chain",
              "result": "success",
              "time": 0.8143999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Async_condition_is_applied_to_all_validators_in_the_chain_when_executed_synchronously",
              "result": "success",
              "time": 0.5363,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Async_condition_is_applied_to_single_validator_in_the_chain_when_ApplyConditionTo_set_to_CurrentValidator",
              "result": "success",
              "time": 0.8180000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Condition_is_applied_to_all_validators_in_the_chain",
              "result": "success",
              "time": 0.3098,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Condition_is_applied_to_single_validator_in_the_chain_when_ApplyConditionTo_set_to_CurrentValidator",
              "result": "success",
              "time": 0.3365,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Sync_condition_is_applied_to_async_validators",
              "result": "success",
              "time": 0.6349,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_should_fail_when_async_condition_does_not_match",
              "result": "success",
              "time": 0.4177,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_should_fail_when_async_condition_matches",
              "result": "success",
              "time": 0.7917,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_should_fail_when_condition_does_not_match",
              "result": "success",
              "time": 0.0888,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_should_fail_when_condition_matches",
              "result": "success",
              "time": 0.07550000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_should_succeed_when_async_condition_does_not_match",
              "result": "success",
              "time": 0.355,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_should_succeed_when_async_condition_matches",
              "result": "success",
              "time": 1.5482,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_should_succeed_when_condition_does_not_match",
              "result": "success",
              "time": 0.2873,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validation_should_succeed_when_condition_matches",
              "result": "success",
              "time": 0.4142,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.ConditionTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "IsValidTests",
              "result": "success",
              "time": 0.2171,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_validation_fails_the_default_error_should_be_set",
              "result": "success",
              "time": 1.7932,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.CreditCardValidatorTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Does_not_invoke_action_if_validation_success",
              "result": "success",
              "time": 0.2528,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Invokes_custom_action_on_failure",
              "result": "success",
              "time": 0.2284,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Passes_object_being_validated_to_action",
              "result": "success",
              "time": 0.852,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.CustomFailureActionTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Replaces_propertyvalue_placeholder",
              "result": "success",
              "time": 0.9778,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Replaces_propertyvalue_with_empty_string_when_null",
              "result": "success",
              "time": 0.2456,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_format_custom_message",
              "result": "success",
              "time": 0.22440000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Uses_custom_delegate_for_building_message",
              "result": "success",
              "time": 0.5952999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Uses_custom_delegate_for_building_message_only_for_specific_validator",
              "result": "success",
              "time": 0.3785,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Uses_property_value_in_message",
              "result": "success",
              "time": 0.8185,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.CustomMessageFormatTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "New_Custom_Returns_single_failure",
              "result": "success",
              "time": 0.335,
            },
            TestCaseResult {
              "error": undefined,
              "name": "New_Custom_Returns_single_failure_async",
              "result": "success",
              "time": 0.5860000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "New_custom_uses_empty_property_name_for_model_level_rule",
              "result": "success",
              "time": 0.2515,
            },
            TestCaseResult {
              "error": undefined,
              "name": "New_Custom_When_property_name_omitted_infers_property_name",
              "result": "success",
              "time": 0.23379999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "New_Custom_When_property_name_omitted_infers_property_name_nested",
              "result": "success",
              "time": 0.6317999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "New_Custom_within_ruleset",
              "result": "success",
              "time": 0.5423,
            },
            TestCaseResult {
              "error": undefined,
              "name": "New_CustomAsync_within_ruleset",
              "result": "success",
              "time": 0.8872,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Perserves_property_chain_using_custom",
              "result": "success",
              "time": 0.8351,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Runs_async_rule_synchronously_when_validator_invoked_synchronously",
              "result": "success",
              "time": 0.6956,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Runs_sync_rule_asynchronously_when_validator_invoked_asynchronously",
              "result": "success",
              "time": 0.5199,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.CustomValidatorTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Empty_should_create_EmptyValidator",
              "result": "success",
              "time": 0.2993,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Equal_should_create_EqualValidator_with_explicit_value",
              "result": "success",
              "time": 0.3343,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Equal_should_create_EqualValidator_with_lambda",
              "result": "success",
              "time": 0.6079,
            },
            TestCaseResult {
              "error": undefined,
              "name": "GreaterThan_should_create_GreaterThanValidator_with_explicit_value",
              "result": "success",
              "time": 0.2587,
            },
            TestCaseResult {
              "error": undefined,
              "name": "GreaterThan_should_create_GreaterThanValidator_with_lambda",
              "result": "success",
              "time": 0.4794,
            },
            TestCaseResult {
              "error": undefined,
              "name": "GreaterThanOrEqual_should_create_GreaterThanOrEqualValidator_with_explicit_value",
              "result": "success",
              "time": 0.2869,
            },
            TestCaseResult {
              "error": undefined,
              "name": "GreaterThanOrEqual_should_create_GreaterThanOrEqualValidator_with_lambda",
              "result": "success",
              "time": 7.8787,
            },
            TestCaseResult {
              "error": undefined,
              "name": "GreaterThanOrEqual_should_create_GreaterThanOrEqualValidator_with_lambda_with_other_Nullable",
              "result": "success",
              "time": 1.9588999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Length_should_create_ExactLengthValidator",
              "result": "success",
              "time": 0.3392,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Length_should_create_LengthValidator",
              "result": "success",
              "time": 0.2207,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Length_should_create_MaximumLengthValidator",
              "result": "success",
              "time": 0.2942,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Length_should_create_MinimumLengthValidator",
              "result": "success",
              "time": 0.26449999999999996,
            },
            TestCaseResult {
              "error": undefined,
              "name": "LessThan_should_create_LessThanValidator_with_explicit_value",
              "result": "success",
              "time": 0.2742,
            },
            TestCaseResult {
              "error": undefined,
              "name": "LessThan_should_create_LessThanValidator_with_lambda",
              "result": "success",
              "time": 0.5323,
            },
            TestCaseResult {
              "error": undefined,
              "name": "LessThanOrEqual_should_create_LessThanOrEqualValidator_with_explicit_value",
              "result": "success",
              "time": 0.6133,
            },
            TestCaseResult {
              "error": undefined,
              "name": "LessThanOrEqual_should_create_LessThanOrEqualValidator_with_lambda",
              "result": "success",
              "time": 0.5095,
            },
            TestCaseResult {
              "error": undefined,
              "name": "LessThanOrEqual_should_create_LessThanOrEqualValidator_with_lambda_with_other_Nullable",
              "result": "success",
              "time": 0.4351,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Must_should_create_PredicateValidator_with_context",
              "result": "success",
              "time": 0.8328,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Must_should_create_PredicateValidator_with_PropertyValidatorContext",
              "result": "success",
              "time": 4.2745,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Must_should_create_PredicteValidator",
              "result": "success",
              "time": 0.49379999999999996,
            },
            TestCaseResult {
              "error": undefined,
              "name": "MustAsync_should_create_AsyncPredicateValidator_with_context",
              "result": "success",
              "time": 0.1972,
            },
            TestCaseResult {
              "error": undefined,
              "name": "MustAsync_should_create_AsyncPredicateValidator_with_PropertyValidatorContext",
              "result": "success",
              "time": 1.6184999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "MustAsync_should_create_AsyncPredicteValidator",
              "result": "success",
              "time": 0.5833,
            },
            TestCaseResult {
              "error": undefined,
              "name": "MustAsync_should_not_throw_InvalidCastException",
              "result": "success",
              "time": 10.451600000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "NotEmpty_should_create_NotEmptyValidator",
              "result": "success",
              "time": 0.2803,
            },
            TestCaseResult {
              "error": undefined,
              "name": "NotEqual_should_create_NotEqualValidator_with_explicit_value",
              "result": "success",
              "time": 0.3685,
            },
            TestCaseResult {
              "error": undefined,
              "name": "NotEqual_should_create_NotEqualValidator_with_lambda",
              "result": "success",
              "time": 0.5555,
            },
            TestCaseResult {
              "error": undefined,
              "name": "NotNull_should_create_NotNullValidator",
              "result": "success",
              "time": 0.2713,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ScalePrecision_should_create_ScalePrecisionValidator",
              "result": "success",
              "time": 2.0008999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ScalePrecision_should_create_ScalePrecisionValidator_with_ignore_trailing_zeros",
              "result": "success",
              "time": 0.2146,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.DefaultValidatorExtensionTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Fails_email_validation_aspnetcore_compatible(email: \\" \\\\r \\\\t \\\\n\\")",
              "result": "success",
              "time": 0.0247,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Fails_email_validation_aspnetcore_compatible(email: \\"\\")",
              "result": "success",
              "time": 0.0314,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Fails_email_validation_aspnetcore_compatible(email: \\"@someDomain.com\\")",
              "result": "success",
              "time": 0.0248,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Fails_email_validation_aspnetcore_compatible(email: \\"@someDomain@abc.com\\")",
              "result": "success",
              "time": 0.0234,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Fails_email_validation_aspnetcore_compatible(email: \\"0\\")",
              "result": "success",
              "time": 0.2222,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Fails_email_validation_aspnetcore_compatible(email: \\"someName\\")",
              "result": "success",
              "time": 0.023,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Fails_email_validation_aspnetcore_compatible(email: \\"someName@\\")",
              "result": "success",
              "time": 0.022699999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Fails_email_validation_aspnetcore_compatible(email: \\"someName@a@b.com\\")",
              "result": "success",
              "time": 0.022699999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Invalid_email_addressex_regex(email: \\"\\")",
              "result": "success",
              "time": 0.3859,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Invalid_email_addressex_regex(email: \\"first.last@test..co.uk\\")",
              "result": "success",
              "time": 0.0334,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Invalid_email_addressex_regex(email: \\"testperso\\")",
              "result": "success",
              "time": 0.0395,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Invalid_email_addressex_regex(email: \\"thisisaverylongstringcodeplex.com\\")",
              "result": "success",
              "time": 0.0316,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_aspnetcore_compatible(email: \\" @someDomain.com\\")",
              "result": "success",
              "time": 0.0173,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_aspnetcore_compatible(email: \\"!#$%&'*+-/=?^_\`|~@someDomain.com\\")",
              "result": "success",
              "time": 0.0174,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_aspnetcore_compatible(email: \\"\\\\\\"firstName.lastName\\\\\\"@someDomain.com\\")",
              "result": "success",
              "time": 0.0167,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_aspnetcore_compatible(email: \\"1234@someDomain.com\\")",
              "result": "success",
              "time": 0.0307,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_aspnetcore_compatible(email: \\"firstName.lastName@someDomain.com\\")",
              "result": "success",
              "time": 0.0191,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_aspnetcore_compatible(email: \\"someName@1234.com\\")",
              "result": "success",
              "time": 0.0158,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_aspnetcore_compatible(email: \\"someName@some_domain.com\\")",
              "result": "success",
              "time": 0.0162,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_aspnetcore_compatible(email: \\"someName@some~domain.com\\")",
              "result": "success",
              "time": 0.0166,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_aspnetcore_compatible(email: \\"someName@someDomain.com\\")",
              "result": "success",
              "time": 0.0167,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_aspnetcore_compatible(email: \\"someName@someDomain￯.com\\")",
              "result": "success",
              "time": 0.0157,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_aspnetcore_compatible(email: null)",
              "result": "success",
              "time": 0.2029,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_regex(email: \\"__somename@example.com\\")",
              "result": "success",
              "time": 0.0219,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_regex(email: \\"!def!xyz%abc@example.com\\")",
              "result": "success",
              "time": 0.022,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_regex(email: \\"\\\\\\"Abc@def\\\\\\"@example.com\\")",
              "result": "success",
              "time": 0.0245,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_regex(email: \\"\\\\\\"Abc\\\\\\\\@def\\\\\\"@example.com\\")",
              "result": "success",
              "time": 0.026,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_regex(email: \\"\\\\\\"Fred Bloggs\\\\\\"@example.com\\")",
              "result": "success",
              "time": 0.0258,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_regex(email: \\"\\\\\\"Joe\\\\\\\\Blow\\\\\\"@example.com\\")",
              "result": "success",
              "time": 0.0244,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_regex(email: \\"$A12345@example.com\\")",
              "result": "success",
              "time": 0.022600000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_regex(email: \\"customer/department=shipping@example.com\\")",
              "result": "success",
              "time": 0.0234,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_regex(email: \\"first.last@test.co.uk\\")",
              "result": "success",
              "time": 0.022600000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_regex(email: \\"testperson@gmail.com\\")",
              "result": "success",
              "time": 16.3384,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_regex(email: \\"TestPerson@gmail.com\\")",
              "result": "success",
              "time": 0.0805,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_regex(email: \\"testperson+label@gmail.com\\")",
              "result": "success",
              "time": 0.0275,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Valid_email_addresses_regex(email: null)",
              "result": "success",
              "time": 0.4724,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.EmailValidatorTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Passes_for_ienumerable_that_doesnt_implement_ICollection",
              "result": "success",
              "time": 3.0376000000000003,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Passes_when_collection_empty",
              "result": "success",
              "time": 0.27,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_there_is_a_value_then_the_validator_should_fail",
              "result": "success",
              "time": 0.19890000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_validation_fails_error_should_be_set",
              "result": "success",
              "time": 0.2342,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_value_is_Default_for_type_validator_should_pass_datetime",
              "result": "success",
              "time": 0.3325,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_value_is_Default_for_type_validator_should_pass_int",
              "result": "success",
              "time": 0.3963,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_value_is_empty_string_validator_should_pass",
              "result": "success",
              "time": 0.2019,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_value_is_null_validator_should_pass",
              "result": "success",
              "time": 0.2377,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_value_is_whitespace_validation_should_pass",
              "result": "success",
              "time": 0.1968,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.EmptyTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Flags_enum_invalid_when_using_outofrange_negative_value",
              "result": "success",
              "time": 0.756,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Flags_enum_invalid_when_using_outofrange_positive_value",
              "result": "success",
              "time": 0.7806,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Flags_enum_valid_when_using_bitwise_value",
              "result": "success",
              "time": 19.2413,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Flags_enum_validates_correctly_when_using_zero_value",
              "result": "success",
              "time": 0.38539999999999996,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Flags_enum_with_overlapping_flags_valid_when_using_bitwise_value",
              "result": "success",
              "time": 0.299,
            },
            TestCaseResult {
              "error": undefined,
              "name": "IsValidTests",
              "result": "success",
              "time": 0.1215,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Nullable_enum_invalid_when_bad_value_specified",
              "result": "success",
              "time": 0.38470000000000004,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Nullable_enum_valid_when_property_value_is_null",
              "result": "success",
              "time": 0.1594,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Nullable_enum_valid_when_value_specified",
              "result": "success",
              "time": 1.8848,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_enum_is_initialized_with_invalid_value_then_the_validator_should_fail",
              "result": "success",
              "time": 0.2553,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_enum_is_not_initialized_with_valid_value_then_the_validator_should_fail",
              "result": "success",
              "time": 0.0819,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_validation_fails_the_default_error_should_be_set",
              "result": "success",
              "time": 0.1061,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.EnumValidatorTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Comparison_property_uses_custom_resolver",
              "result": "success",
              "time": 0.38289999999999996,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_store_comparison_type",
              "result": "success",
              "time": 0.3359,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_store_property_to_compare",
              "result": "success",
              "time": 0.32830000000000004,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_succeed_on_case_insensitive_comparison",
              "result": "success",
              "time": 0.2418,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_succeed_on_case_insensitive_comparison_using_expression",
              "result": "success",
              "time": 0.25379999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_use_ordinal_comparison_by_default",
              "result": "success",
              "time": 0.1642,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_against_property",
              "result": "success",
              "time": 0.29329999999999995,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_objects_are_equal_validation_should_succeed",
              "result": "success",
              "time": 0.3395,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_objects_are_not_equal_validation_should_fail",
              "result": "success",
              "time": 0.21919999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_validation_fails_the_error_should_be_set",
              "result": "success",
              "time": 0.23,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.EqualValidatorTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Min_and_max_properties_should_be_set",
              "result": "success",
              "time": 0.0707,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_exact_length_rule_failes_error_should_have_exact_length_error_errorcode",
              "result": "success",
              "time": 0.6217,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_is_an_exact_length_the_validator_should_pass",
              "result": "success",
              "time": 0.2146,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_length_is_larger_the_validator_should_fail",
              "result": "success",
              "time": 0.2571,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_length_is_smaller_the_validator_should_fail",
              "result": "success",
              "time": 0.46890000000000004,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_validator_fails_the_error_message_should_be_set",
              "result": "success",
              "time": 0.2836,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.ExactLengthValidatorTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "To_and_from_properties_should_be_set",
              "result": "success",
              "time": 0.0668,
            },
            TestCaseResult {
              "error": undefined,
              "name": "To_and_from_properties_should_be_set_for_dates",
              "result": "success",
              "time": 0.09179999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "To_and_from_properties_should_be_set_for_strings",
              "result": "success",
              "time": 0.067,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_is_null",
              "result": "success",
              "time": 0.2242,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_not_null",
              "result": "success",
              "time": 0.6361,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_is_larger_than_the_range_then_the_validator_should_fail",
              "result": "success",
              "time": 0.5079,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_is_larger_than_the_range_then_the_validator_should_fail_for_strings",
              "result": "success",
              "time": 0.2392,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_to_is_smaller_than_the_from_then_the_validator_should_throw",
              "result": "success",
              "time": 0.3029,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_to_is_smaller_than_the_from_then_the_validator_should_throw_for_strings",
              "result": "success",
              "time": 0.1562,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_validator_fails_the_error_message_should_be_set",
              "result": "success",
              "time": 0.2535,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_validator_fails_the_error_message_should_be_set_for_strings",
              "result": "success",
              "time": 0.2668,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_value_is_between_the_range_specified_then_the_validator_should_pass",
              "result": "success",
              "time": 1.1727,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_value_is_between_the_range_specified_then_the_validator_should_pass_for_strings",
              "result": "success",
              "time": 0.2261,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_value_is_exactly_the_size_of_the_lower_bound_then_the_validator_should_fail",
              "result": "success",
              "time": 0.28390000000000004,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_value_is_exactly_the_size_of_the_lower_bound_then_the_validator_should_fail_for_strings",
              "result": "success",
              "time": 0.9095000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_value_is_exactly_the_size_of_the_upper_bound_then_the_validator_should_fail",
              "result": "success",
              "time": 0.2263,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_value_is_exactly_the_size_of_the_upper_bound_then_the_validator_should_fail_for_strings",
              "result": "success",
              "time": 0.23399999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_value_is_smaller_than_the_range_then_the_validator_should_fail",
              "result": "success",
              "time": 0.24689999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_value_is_smaller_than_the_range_then_the_validator_should_fail_for_strings",
              "result": "success",
              "time": 0.2367,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.ExclusiveBetweenValidatorTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Should_extract_member_from_member_expression",
              "result": "success",
              "time": 0.11299999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_return_null_for_non_member_expressions",
              "result": "success",
              "time": 0.1368,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_split_pascal_cased_member_name",
              "result": "success",
              "time": 0.6315000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SplitPascalCase_should_return_null_when_input_is_null",
              "result": "success",
              "time": 0.0314,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.ExtensionTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Async_condition_should_work_with_child_collection",
              "result": "success",
              "time": 0.7127,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_access_colletion_index",
              "result": "success",
              "time": 0.28659999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_access_colletion_index_async",
              "result": "success",
              "time": 0.7781,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_access_parent_index",
              "result": "success",
              "time": 1.6135,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_access_parent_index_async",
              "result": "success",
              "time": 1.1019,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_specify_condition_for_individual_collection_elements",
              "result": "success",
              "time": 0.4461,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_use_cascade_with_RuleForEach",
              "result": "success",
              "time": 0.6943,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_validate_collection_using_validator_for_base_type",
              "result": "success",
              "time": 0.4768,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Collection_should_be_excluded",
              "result": "success",
              "time": 0.544,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Collection_should_be_explicitly_included_with_expression",
              "result": "success",
              "time": 0.7823,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Collection_should_be_explicitly_included_with_string",
              "result": "success",
              "time": 0.5339,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Condition_should_work_with_child_collection",
              "result": "success",
              "time": 0.3728,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Correctly_gets_collection_indices",
              "result": "success",
              "time": 0.3199,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Correctly_gets_collection_indices_async",
              "result": "success",
              "time": 0.699,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Executes_rule_for_each_item_in_collection",
              "result": "success",
              "time": 0.3186,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Executes_rule_for_each_item_in_collection_async",
              "result": "success",
              "time": 0.7972,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Nested_collection_for_null_property_should_not_throw_null_reference",
              "result": "success",
              "time": 0.4414,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Nested_conditions_Rule_For",
              "result": "success",
              "time": 0.9052,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Nested_conditions_Rule_For_Each",
              "result": "success",
              "time": 0.9411,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Overrides_indexer",
              "result": "success",
              "time": 1.2315,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Overrides_indexer_async",
              "result": "success",
              "time": 1.1100999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Regular_rules_can_drop_into_RuleForEach",
              "result": "success",
              "time": 0.8814,
            },
            TestCaseResult {
              "error": undefined,
              "name": "RuleForEach_async_RunsTasksSynchronously",
              "result": "success",
              "time": 23.6497,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_not_scramble_property_name_when_using_collection_validators_several_levels_deep",
              "result": "success",
              "time": 0.3437,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_not_scramble_property_name_when_using_collection_validators_several_levels_deep_with_ValidateAsync",
              "result": "success",
              "time": 2.1348000000000003,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_override_property_name",
              "result": "success",
              "time": 0.3821,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Skips_null_items",
              "result": "success",
              "time": 0.47859999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Top_level_collection",
              "result": "success",
              "time": 0.3379,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Uses_useful_error_message_when_used_on_non_property",
              "result": "success",
              "time": 0.43560000000000004,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_child_validator_asynchronously",
              "result": "success",
              "time": 0.7232000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_child_validator_synchronously",
              "result": "success",
              "time": 0.356,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_collection",
              "result": "success",
              "time": 0.5174,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_runs_outside_RuleForEach_loop",
              "result": "success",
              "time": 0.4935,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_runs_outside_RuleForEach_loop_async",
              "result": "success",
              "time": 1.2558,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.ForEachRuleTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Comparison_property_uses_custom_resolver",
              "result": "success",
              "time": 0.5497,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Comparison_type",
              "result": "success",
              "time": 0.20120000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_fail_when_less_than_input",
              "result": "success",
              "time": 0.3948,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_localize_value",
              "result": "success",
              "time": 0.8092,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_set_default_error_when_validation_fails",
              "result": "success",
              "time": 0.1125,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_succeed_when_equal_to_input",
              "result": "success",
              "time": 0.078,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_succeed_when_greater_than_input",
              "result": "success",
              "time": 0.08,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_nullable_with_nullable_property",
              "result": "success",
              "time": 0.38539999999999996,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_property",
              "result": "success",
              "time": 0.5735,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_is_null",
              "result": "success",
              "time": 0.2299,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_is_null_cross_property",
              "result": "success",
              "time": 0.46599999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_not_null",
              "result": "success",
              "time": 0.24649999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_not_null_cross_property",
              "result": "success",
              "time": 0.2763,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_property",
              "result": "success",
              "time": 0.2879,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.GreaterThanOrEqualToValidatorTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Comparison_property_uses_custom_resolver",
              "result": "success",
              "time": 0.4008,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Comparison_Type",
              "result": "success",
              "time": 0.2061,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_fail_when_equal_to_input",
              "result": "success",
              "time": 0.07289999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_fail_when_less_than_input",
              "result": "success",
              "time": 0.0764,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_set_default_error_when_validation_fails",
              "result": "success",
              "time": 0.1047,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_succeed_when_greater_than_input",
              "result": "success",
              "time": 0.08600000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_nullable_with_nullable_property",
              "result": "success",
              "time": 0.6029,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_property",
              "result": "success",
              "time": 0.5936,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_is_null",
              "result": "success",
              "time": 0.5006999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_is_null_cross_property",
              "result": "success",
              "time": 0.26689999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_not_null",
              "result": "success",
              "time": 0.2583,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_not_null_cross_property",
              "result": "success",
              "time": 0.5453,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_property",
              "result": "success",
              "time": 0.4626,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.GreaterThanValidatorTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "To_and_from_properties_should_be_set",
              "result": "success",
              "time": 0.131,
            },
            TestCaseResult {
              "error": undefined,
              "name": "To_and_from_properties_should_be_set_for_strings",
              "result": "success",
              "time": 0.0602,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_is_null",
              "result": "success",
              "time": 0.2167,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_not_null",
              "result": "success",
              "time": 0.4472,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_is_larger_than_the_range_then_the_validator_should_fail",
              "result": "success",
              "time": 0.2468,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_is_larger_than_the_range_then_the_validator_should_fail_for_strings",
              "result": "success",
              "time": 0.2377,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_to_is_smaller_than_the_from_then_the_validator_should_throw",
              "result": "success",
              "time": 0.6235999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_to_is_smaller_than_the_from_then_the_validator_should_throw_for_strings",
              "result": "success",
              "time": 0.13290000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_validator_fails_the_error_message_should_be_set",
              "result": "success",
              "time": 0.2354,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_validator_fails_the_error_message_should_be_set_for_strings",
              "result": "success",
              "time": 0.2385,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_value_is_between_the_range_specified_then_the_validator_should_pass",
              "result": "success",
              "time": 0.3572,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_value_is_between_the_range_specified_then_the_validator_should_pass_for_strings",
              "result": "success",
              "time": 0.22,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_value_is_exactly_the_size_of_the_lower_bound_then_the_validator_should_pass",
              "result": "success",
              "time": 0.1963,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_value_is_exactly_the_size_of_the_lower_bound_then_the_validator_should_pass_for_strings",
              "result": "success",
              "time": 0.3005,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_value_is_exactly_the_size_of_the_upper_bound_then_the_validator_should_pass",
              "result": "success",
              "time": 0.2097,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_value_is_exactly_the_size_of_the_upper_bound_then_the_validator_should_pass_for_strings",
              "result": "success",
              "time": 0.19560000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_value_is_smaller_than_the_range_then_the_validator_should_fail",
              "result": "success",
              "time": 0.2294,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_value_is_smaller_than_the_range_then_the_validator_should_fail_for_strings",
              "result": "success",
              "time": 0.2161,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.InclusiveBetweenValidatorTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Can_use_custom_subclass_with_nongeneric_overload",
              "result": "success",
              "time": 0.6978000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_collection",
              "result": "success",
              "time": 0.6633,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_collection_async",
              "result": "success",
              "time": 4.0405,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_inheritance_async",
              "result": "success",
              "time": 1.2651999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_inheritance_hierarchy",
              "result": "success",
              "time": 0.5062000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_ruleset",
              "result": "success",
              "time": 0.9577,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_ruleset_async",
              "result": "success",
              "time": 1.6248,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_callback",
              "result": "success",
              "time": 1.2889,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_callback_accepting_derived",
              "result": "success",
              "time": 0.6007,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_callback_accepting_derived_async",
              "result": "success",
              "time": 4.8985,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_callback_async",
              "result": "success",
              "time": 1.1747999999999998,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.InheritanceValidatorTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Uses_inline_validator_to_build_rules",
              "result": "success",
              "time": 1.6789999999999998,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.InlineValidatorTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "All_languages_should_be_loaded",
              "result": "success",
              "time": 1.3878,
            },
            TestCaseResult {
              "error": undefined,
              "name": "All_localizations_have_same_parameters_as_English",
              "result": "success",
              "time": 21.761,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Always_use_specific_language",
              "result": "success",
              "time": 0.0666,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Always_use_specific_language_with_string_source",
              "result": "success",
              "time": 0.3219,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_replace_message",
              "result": "success",
              "time": 0.24509999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_replace_message_without_overriding_all_languages",
              "result": "success",
              "time": 0.1258,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Disables_localization",
              "result": "success",
              "time": 0.16369999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Falls_back_to_default_localization_key_when_error_code_key_not_found",
              "result": "success",
              "time": 0.28150000000000003,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Falls_back_to_english_when_culture_not_registered",
              "result": "success",
              "time": 0.2145,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Falls_back_to_english_when_translation_missing",
              "result": "success",
              "time": 0.523,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Falls_back_to_parent_culture",
              "result": "success",
              "time": 0.4487,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Gets_translation_for_bosnian_latin_culture(cultureName: \\"bs-Latn-BA\\")",
              "result": "success",
              "time": 0.011,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Gets_translation_for_bosnian_latin_culture(cultureName: \\"bs-Latn\\")",
              "result": "success",
              "time": 0.0627,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Gets_translation_for_bosnian_latin_culture(cultureName: \\"bs\\")",
              "result": "success",
              "time": 0.661,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Gets_translation_for_croatian_culture",
              "result": "success",
              "time": 0.45990000000000003,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Gets_translation_for_culture",
              "result": "success",
              "time": 0.0741,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Gets_translation_for_serbian_culture(cultureName: \\"sr-Latn-RS\\")",
              "result": "success",
              "time": 0.01,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Gets_translation_for_serbian_culture(cultureName: \\"sr-Latn\\")",
              "result": "success",
              "time": 0.0484,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Gets_translation_for_serbian_culture(cultureName: \\"sr\\")",
              "result": "success",
              "time": 0.4456,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Gets_translation_for_specific_culture",
              "result": "success",
              "time": 0.0989,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Uses_error_code_as_localization_key",
              "result": "success",
              "time": 0.3393,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.LanguageManagerTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Min_and_max_properties_should_be_set",
              "result": "success",
              "time": 0.1047,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_input_is_null_then_the_validator_should_pass",
              "result": "success",
              "time": 0.352,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_max_is_smaller_than_the_min_then_the_validator_should_throw",
              "result": "success",
              "time": 0.4785,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_maxlength_validator_fails_the_error_message_should_be_set",
              "result": "success",
              "time": 0.356,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_minlength_validator_fails_the_error_message_should_be_set",
              "result": "success",
              "time": 0.3529,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_is_between_the_lambda_range_specified_then_the_validator_should_pass",
              "result": "success",
              "time": 0.92,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_is_between_the_range_specified_then_the_validator_should_pass",
              "result": "success",
              "time": 0.2179,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_is_exactly_the_size_of_the_lambda_lower_bound_then_the_validator_should_pass",
              "result": "success",
              "time": 0.3377,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_is_exactly_the_size_of_the_lambda_upper_bound_then_the_validator_should_pass",
              "result": "success",
              "time": 0.3149,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_is_exactly_the_size_of_the_lower_bound_then_the_validator_should_pass",
              "result": "success",
              "time": 0.21910000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_is_exactly_the_size_of_the_upper_bound_then_the_validator_should_pass",
              "result": "success",
              "time": 0.32899999999999996,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_is_larger_than_the_lambda_range_then_the_validator_should_fail",
              "result": "success",
              "time": 0.3557,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_is_larger_than_the_range_then_the_validator_should_fail",
              "result": "success",
              "time": 0.2796,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_is_smaller_than_the_lambda_range_then_the_validator_should_fail",
              "result": "success",
              "time": 0.3612,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_is_smaller_than_the_range_then_the_validator_should_fail",
              "result": "success",
              "time": 0.4057,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_validator_fails_the_error_message_should_be_set",
              "result": "success",
              "time": 11.340599999999998,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.LengthValidatorTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Comparison_property_uses_custom_resolver",
              "result": "success",
              "time": 1.0333,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Comparison_type",
              "result": "success",
              "time": 0.1094,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_fail_when_greater_than_input",
              "result": "success",
              "time": 0.0853,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_set_default_error_when_validation_fails",
              "result": "success",
              "time": 0.1044,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_succeed_when_equal_to_input",
              "result": "success",
              "time": 0.0726,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_succeed_when_less_than_input",
              "result": "success",
              "time": 0.082,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_nullable_with_nullable_property",
              "result": "success",
              "time": 0.4362,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_property",
              "result": "success",
              "time": 0.5804,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_is_null",
              "result": "success",
              "time": 0.36719999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_is_null_cross_property",
              "result": "success",
              "time": 0.4822,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_not_null",
              "result": "success",
              "time": 0.2607,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_not_null_cross_property",
              "result": "success",
              "time": 0.283,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_property",
              "result": "success",
              "time": 0.321,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.LessThanOrEqualToValidatorTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Comparison_property_uses_custom_resolver",
              "result": "success",
              "time": 0.3967,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Comparison_type",
              "result": "success",
              "time": 0.08940000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Extracts_property_from_constant_using_expression",
              "result": "success",
              "time": 0.0678,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Extracts_property_from_expression",
              "result": "success",
              "time": 0.5257000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_fail_when_equal_to_input",
              "result": "success",
              "time": 0.2,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_fail_when_greater_than_input",
              "result": "success",
              "time": 0.19249999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_set_default_validation_message_when_validation_fails",
              "result": "success",
              "time": 0.352,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_succeed_when_less_than_input",
              "result": "success",
              "time": 0.1783,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_throw_when_value_to_compare_is_null",
              "result": "success",
              "time": 0.28909999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_against_property",
              "result": "success",
              "time": 1.2022000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_nullable_with_nullable_property",
              "result": "success",
              "time": 0.773,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_property",
              "result": "success",
              "time": 0.5793,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_is_null",
              "result": "success",
              "time": 0.34259999999999996,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_not_null",
              "result": "success",
              "time": 0.2586,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_not_null_cross_property",
              "result": "success",
              "time": 0.27080000000000004,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_with_nullable_when_property_null_cross_property",
              "result": "success",
              "time": 0.46349999999999997,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.LessThanValidatorTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Correctly_assigns_default_localized_error_message",
              "result": "success",
              "time": 1.1647,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Does_not_throw_InvalidCastException_when_using_RuleForEach",
              "result": "success",
              "time": 0.4547,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Formats_string_with_placeholders",
              "result": "success",
              "time": 0.2342,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Formats_string_with_placeholders_when_you_cant_edit_the_string",
              "result": "success",
              "time": 0.2285,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Uses_func_to_get_message",
              "result": "success",
              "time": 0.23829999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Uses_string_format_with_property_value",
              "result": "success",
              "time": 0.7191,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.LocalisedMessagesTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Uses_localized_name",
              "result": "success",
              "time": 0.3024,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Uses_localized_name_expression",
              "result": "success",
              "time": 0.8903,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.LocalisedNameTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "ComplexPropertyGet",
              "result": "success",
              "time": 0.9033,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ComplexPropertySet",
              "result": "success",
              "time": 0.44129999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Equality",
              "result": "success",
              "time": 1.0753,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ImplicitCast",
              "result": "success",
              "time": 0.8765999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Name",
              "result": "success",
              "time": 0.4323,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SimpleFieldGet",
              "result": "success",
              "time": 0.4109,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SimpleFieldSet",
              "result": "success",
              "time": 0.4092,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SimplePropertyGet",
              "result": "success",
              "time": 0.4082,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SimplePropertySet",
              "result": "success",
              "time": 0.4415,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.MemberAccessorTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Adds_argument_and_custom_arguments",
              "result": "success",
              "time": 0.0699,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Adds_formatted_argument_and_custom_arguments",
              "result": "success",
              "time": 0.0808,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Adds_formatted_argument_and_formatted_custom_arguments",
              "result": "success",
              "time": 0.2678,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Adds_PropertyName_to_message",
              "result": "success",
              "time": 0.0779,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Adds_value_to_message",
              "result": "success",
              "time": 0.0583,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Format_property_value",
              "result": "success",
              "time": 0.2165,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_ignore_unknown_numbered_parameters",
              "result": "success",
              "time": 0.1013,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_ignore_unknown_parameters",
              "result": "success",
              "time": 0.8556,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Understands_date_formats",
              "result": "success",
              "time": 0.17479999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Understands_numeric_formats",
              "result": "success",
              "time": 0.1847,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.MessageFormatterTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Can_use_child_validator_at_model_level",
              "result": "success",
              "time": 0.4502,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_at_model_level",
              "result": "success",
              "time": 0.3216,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.ModelLevelValidatorTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Resolves_nested_properties",
              "result": "success",
              "time": 0.5703,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_Should_support_custom_propertynameresolver",
              "result": "success",
              "time": 0.7316,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Uses_custom_property_name",
              "result": "success",
              "time": 0.2739,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.NameResolutionPluggabilityTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Fails_for_array",
              "result": "success",
              "time": 0.465,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Fails_for_ienumerable_that_doesnt_implement_ICollection",
              "result": "success",
              "time": 1.2461,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Fails_when_collection_empty",
              "result": "success",
              "time": 0.5821,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_there_is_a_value_then_the_validator_should_pass",
              "result": "success",
              "time": 0.2293,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_validation_fails_error_should_be_set",
              "result": "success",
              "time": 0.27769999999999995,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_value_is_Default_for_type_validator_should_fail_datetime",
              "result": "success",
              "time": 1.9899000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_value_is_Default_for_type_validator_should_fail_int",
              "result": "success",
              "time": 1.8552,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_value_is_empty_string_validator_should_fail",
              "result": "success",
              "time": 0.2511,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_value_is_null_validator_should_fail",
              "result": "success",
              "time": 0.2923,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_value_is_whitespace_validation_should_fail",
              "result": "success",
              "time": 0.21780000000000002,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.NotEmptyTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Comparison_property_uses_custom_resolver",
              "result": "success",
              "time": 0.4998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_handle_custom_value_types_correctly",
              "result": "success",
              "time": 2.2529,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_not_be_valid_for_case_insensitve_comparison",
              "result": "success",
              "time": 0.4358,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_not_be_valid_for_case_insensitve_comparison_with_expression",
              "result": "success",
              "time": 0.2824,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_store_comparison_type",
              "result": "success",
              "time": 0.4205,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_store_property_to_compare",
              "result": "success",
              "time": 1.8339999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_use_ordinal_comparison_by_default",
              "result": "success",
              "time": 0.2273,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_across_properties",
              "result": "success",
              "time": 0.31720000000000004,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_objects_are_equal_then_the_validator_should_fail",
              "result": "success",
              "time": 0.2655,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_objects_are_not_equal_then_the_validator_should_pass",
              "result": "success",
              "time": 0.2334,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_validator_fails_the_error_message_should_be_set",
              "result": "success",
              "time": 0.2574,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.NotEqualValidatorTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Fails_when_nullable_value_type_is_null",
              "result": "success",
              "time": 0.39080000000000004,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Not_null_validator_should_not_crash_with_non_nullable_value_type",
              "result": "success",
              "time": 0.27349999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "NotNullValidator_should_fail_if_value_is_null",
              "result": "success",
              "time": 0.2029,
            },
            TestCaseResult {
              "error": undefined,
              "name": "NotNullValidator_should_pass_if_value_has_value",
              "result": "success",
              "time": 0.2119,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_validator_fails_the_error_message_should_be_set",
              "result": "success",
              "time": 0.22460000000000002,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.NotNullTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Not_null_validator_should_not_crash_with_non_nullable_value_type",
              "result": "success",
              "time": 0.5603,
            },
            TestCaseResult {
              "error": undefined,
              "name": "NullValidator_should_fail_if_value_has_value",
              "result": "success",
              "time": 0.2075,
            },
            TestCaseResult {
              "error": undefined,
              "name": "NullValidator_should_pass_if_value_is_null",
              "result": "success",
              "time": 0.3543,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Passes_when_nullable_value_type_is_null",
              "result": "success",
              "time": 0.2748,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_validator_passes_the_error_message_should_be_set",
              "result": "success",
              "time": 0.2424,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.NullTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "OnFailure_called_for_each_failed_rule",
              "result": "success",
              "time": 0.5670000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "OnFailure_called_for_each_failed_rule_asyncAsync",
              "result": "success",
              "time": 1.8854,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_be_able_to_access_error_message_in_OnFailure",
              "result": "success",
              "time": 0.5239,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveChildValidator_should_be_true",
              "result": "success",
              "time": 1.2439,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveChildValidator_works_with_Include",
              "result": "success",
              "time": 0.2922,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WhenAsyncWithOnFailure_should_invoke_condition_on_async_inner_validator",
              "result": "success",
              "time": 0.6154,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WhenAsyncWithOnFailure_should_invoke_condition_on_inner_validator",
              "result": "success",
              "time": 1.4785,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WhenAsyncWithOnFailure_should_invoke_condition_on_inner_validator_invoked_synchronously",
              "result": "success",
              "time": 0.3084,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WhenWithOnFailure_should_invoke_condition_on_async_inner_validator",
              "result": "success",
              "time": 0.634,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WhenWithOnFailure_should_invoke_condition_on_inner_validator",
              "result": "success",
              "time": 0.2855,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.OnFailureTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Should_fail_when_predicate_returns_false",
              "result": "success",
              "time": 0.0917,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_succeed_when_predicate_returns_true",
              "result": "success",
              "time": 0.0766,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_throw_when_predicate_is_null",
              "result": "success",
              "time": 0.3168,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_validation_fails_metadata_should_be_set_on_failure",
              "result": "success",
              "time": 1.2067,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_validation_fails_the_default_error_should_be_set",
              "result": "success",
              "time": 0.4204,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.PredicateValidatorTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "AddIndexer_throws_when_nothing_added",
              "result": "success",
              "time": 0.171,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Calling_ToString_should_construct_string_representation_of_chain",
              "result": "success",
              "time": 0.0748,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Calling_ToString_should_construct_string_representation_of_chain_with_indexers",
              "result": "success",
              "time": 0.2382,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Creates_from_expression",
              "result": "success",
              "time": 0.12760000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_be_subchain",
              "result": "success",
              "time": 0.12029999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_ignore_blanks",
              "result": "success",
              "time": 0.0472,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_not_be_subchain",
              "result": "success",
              "time": 0.050300000000000004,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.PropertyChainTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Can_access_expression_in_message",
              "result": "success",
              "time": 0.2264,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_access_expression_in_message_lambda",
              "result": "success",
              "time": 0.28009999999999996,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_access_expression_in_message_lambda_regex",
              "result": "success",
              "time": 0.2767,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Uses_lazily_loaded_expression",
              "result": "success",
              "time": 0.31760000000000005,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Uses_lazily_loaded_expression_with_options",
              "result": "success",
              "time": 1.451,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Uses_regex_object",
              "result": "success",
              "time": 0.49510000000000004,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_does_not_match_the_lambda_regex_regular_expression_then_the_validator_should_fail",
              "result": "success",
              "time": 0.3653,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_does_not_match_the_lambda_regular_expression_then_the_validator_should_fail",
              "result": "success",
              "time": 0.1392,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_does_not_match_the_regular_expression_then_the_validator_should_fail",
              "result": "success",
              "time": 0.16440000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_is_empty_then_the_validator_should_fail",
              "result": "success",
              "time": 0.10490000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_is_null_then_the_validator_should_pass",
              "result": "success",
              "time": 0.09280000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_matches_the_lambda_regex_regular_expression_then_the_validator_should_pass",
              "result": "success",
              "time": 0.1215,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_matches_the_lambda_regular_expression_then_the_validator_should_pass",
              "result": "success",
              "time": 0.3275,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_text_matches_the_regular_expression_then_the_validator_should_pass",
              "result": "success",
              "time": 1.805,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_validation_fails_the_default_error_should_be_set",
              "result": "success",
              "time": 0.1265,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.RegularExpressionValidatorTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Adding_a_validator_should_return_builder",
              "result": "success",
              "time": 0.0714,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Adding_a_validator_should_store_validator",
              "result": "success",
              "time": 0.0807,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Calling_validate_should_delegate_to_underlying_validator",
              "result": "success",
              "time": 1.4739,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Calling_ValidateAsync_should_delegate_to_underlying_async_validator",
              "result": "success",
              "time": 13.4579,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Calling_ValidateAsync_should_delegate_to_underlying_sync_validator",
              "result": "success",
              "time": 73.5933,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Conditional_child_validator_should_register_with_validator_type_not_property",
              "result": "success",
              "time": 0.3936,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Nullable_object_with_async_condition_should_not_throw",
              "result": "success",
              "time": 0.5033000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Nullable_object_with_condition_should_not_throw",
              "result": "success",
              "time": 1.088,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Property_should_return_null_when_it_is_not_a_property_being_validated",
              "result": "success",
              "time": 0.3637,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Property_should_return_property_being_validated",
              "result": "success",
              "time": 0.0816,
            },
            TestCaseResult {
              "error": undefined,
              "name": "PropertyDescription_should_return_custom_property_name",
              "result": "success",
              "time": 0.6558,
            },
            TestCaseResult {
              "error": undefined,
              "name": "PropertyDescription_should_return_property_name_split",
              "result": "success",
              "time": 0.4031,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Result_should_use_custom_property_name_when_no_property_name_can_be_determined",
              "result": "success",
              "time": 0.5762,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Rule_for_a_non_memberexpression_should_not_generate_property_name",
              "result": "success",
              "time": 0.3533,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_build_property_name",
              "result": "success",
              "time": 0.0559,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_compile_expression",
              "result": "success",
              "time": 0.1225,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_set_custom_error",
              "result": "success",
              "time": 0.1428,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_set_custom_property_name",
              "result": "success",
              "time": 0.3705,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_throw_if_message_is_null",
              "result": "success",
              "time": 0.1371,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_throw_if_overriding_validator_is_null",
              "result": "success",
              "time": 0.14880000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_throw_if_overriding_validator_provider_is_null",
              "result": "success",
              "time": 0.1555,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_throw_if_property_name_is_null",
              "result": "success",
              "time": 0.2522,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_throw_if_validator_is_null",
              "result": "success",
              "time": 0.14579999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_throw_when_async_inverse_predicate_is_null",
              "result": "success",
              "time": 0.354,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_throw_when_async_predicate_is_null",
              "result": "success",
              "time": 0.1555,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_throw_when_context_predicate_is_null",
              "result": "success",
              "time": 0.1421,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_throw_when_inverse_context_predicate_is_null",
              "result": "success",
              "time": 0.33540000000000003,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_throw_when_inverse_predicate_is_null",
              "result": "success",
              "time": 0.3373,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_throw_when_predicate_is_null",
              "result": "success",
              "time": 0.1542,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.RuleBuilderTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Async_inside_dependent_rules",
              "result": "success",
              "time": 1505.6573,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Async_inside_dependent_rules_when_parent_rule_not_async",
              "result": "success",
              "time": 992.5303,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Dependent_rules_inside_ruleset",
              "result": "success",
              "time": 0.4097,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Dependent_rules_inside_when",
              "result": "success",
              "time": 1.14,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Does_not_invoke_dependent_rule_if_parent_rule_does_not_pass",
              "result": "success",
              "time": 0.328,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Invokes_dependent_rule_if_parent_rule_passes",
              "result": "success",
              "time": 0.3376,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Nested_dependent_rules",
              "result": "success",
              "time": 0.5419,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Nested_dependent_rules_inside_ruleset",
              "result": "success",
              "time": 0.5315,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Nested_dependent_rules_inside_ruleset_inside_method",
              "result": "success",
              "time": 0.7514000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Nested_dependent_rules_inside_ruleset_no_result_when_second_level_fails",
              "result": "success",
              "time": 0.5888,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Nested_dependent_rules_inside_ruleset_no_result_when_top_level_fails",
              "result": "success",
              "time": 1.6869,
            },
            TestCaseResult {
              "error": undefined,
              "name": "TestAsyncWithDependentRules_AsyncEntry",
              "result": "success",
              "time": 5.0739,
            },
            TestCaseResult {
              "error": undefined,
              "name": "TestAsyncWithDependentRules_SyncEntry",
              "result": "success",
              "time": 1.3845999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Treats_root_level_RuleFor_call_as_dependent_rule_if_user_forgets_to_use_DependentRulesBuilder",
              "result": "success",
              "time": 0.3687,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.RuleDependencyTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Applies_multiple_rulesets_to_rule",
              "result": "success",
              "time": 0.4398,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Combines_rulesets_and_explicit_properties",
              "result": "success",
              "time": 0.9970000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Combines_rulesets_and_explicit_properties_async",
              "result": "success",
              "time": 1.092,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Executes_all_rules",
              "result": "success",
              "time": 0.7106,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Executes_in_rule_in_default_and_none",
              "result": "success",
              "time": 0.354,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Executes_in_rule_in_ruleset_and_default",
              "result": "success",
              "time": 0.38020000000000004,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Executes_multiple_rulesets",
              "result": "success",
              "time": 1.7933000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Executes_rules_in_default_ruleset_and_specific_ruleset",
              "result": "success",
              "time": 0.4761,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Executes_rules_in_specified_ruleset",
              "result": "success",
              "time": 0.1594,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Executes_rules_not_specified_in_ruleset",
              "result": "success",
              "time": 0.1365,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Includes_all_rulesets",
              "result": "success",
              "time": 0.8384,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Includes_all_rulesets_async",
              "result": "success",
              "time": 1.0633000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Includes_combination_of_rulesets",
              "result": "success",
              "time": 0.6445,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Includes_combination_of_rulesets_async",
              "result": "success",
              "time": 1.0528,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Ruleset_cascades_to_child_collection_validator",
              "result": "success",
              "time": 0.8193,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Ruleset_cascades_to_child_validator",
              "result": "success",
              "time": 0.5176000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Ruleset_selection_should_cascade_downwards_with_when_setting_child_validator_using_include_statement",
              "result": "success",
              "time": 0.1585,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Ruleset_selection_should_cascade_downwards_with_when_setting_child_validator_using_include_statement_with_lambda",
              "result": "success",
              "time": 0.8220000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Ruleset_selection_should_not_cascade_downwards_when_set_on_property",
              "result": "success",
              "time": 0.9641,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Trims_spaces",
              "result": "success",
              "time": 0.4086,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WithMessage_works_inside_rulesets",
              "result": "success",
              "time": 0.1237,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.RulesetTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Scale_precision_should_be_valid",
              "result": "success",
              "time": 0.3178,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Scale_precision_should_be_valid_when_ignoring_trailing_zeroes",
              "result": "success",
              "time": 1.5273,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Scale_precision_should_be_valid_when_they_are_equal",
              "result": "success",
              "time": 0.383,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Scale_precision_should_not_be_valid",
              "result": "success",
              "time": 0.6978000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Scale_precision_should_not_be_valid_when_ignoring_trailing_zeroes",
              "result": "success",
              "time": 0.4372,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Scale_precision_should_not_be_valid_when_they_are_equal",
              "result": "success",
              "time": 0.4406,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.ScalePrecisionValidatorTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Async_condition_can_be_used_inside_ruleset",
              "result": "success",
              "time": 1.8948,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Condition_can_be_used_inside_ruleset",
              "result": "success",
              "time": 0.5963999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Does_not_execute_custom_Rule_when_async_condition_false",
              "result": "success",
              "time": 0.9039999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Does_not_execute_custom_Rule_when_condition_false",
              "result": "success",
              "time": 0.8838,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Does_not_execute_customasync_Rule_when_async_condition_false",
              "result": "success",
              "time": 0.8363,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Does_not_execute_customasync_Rule_when_condition_false",
              "result": "success",
              "time": 0.34909999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Doesnt_throw_NullReferenceException_when_instance_not_null",
              "result": "success",
              "time": 0.1771,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Doesnt_throw_NullReferenceException_when_instance_not_null_async",
              "result": "success",
              "time": 1.4607999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Executes_custom_rule_when_async_condition_true",
              "result": "success",
              "time": 0.7245,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Executes_custom_rule_when_condition_true",
              "result": "success",
              "time": 1.0053,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Executes_customasync_rule_when_async_condition_true",
              "result": "success",
              "time": 1.1516,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Executes_customasync_rule_when_condition_true",
              "result": "success",
              "time": 1.4208,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Nested_async_conditions_with_Custom_rule",
              "result": "success",
              "time": 0.7695,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Nested_async_conditions_with_CustomAsync_rule",
              "result": "success",
              "time": 0.9986,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Nested_conditions_with_Custom_rule",
              "result": "success",
              "time": 0.4756,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Nested_conditions_with_CustomAsync_rule",
              "result": "success",
              "time": 2.7533000000000003,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Outer_async_Unless_clause_will_trump_an_inner_Unless_clause_when_inner_fails_but_the_outer_is_satisfied",
              "result": "success",
              "time": 0.4874,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Outer_Unless_clause_will_trump_an_inner_Unless_clause_when_inner_fails_but_the_outer_is_satisfied",
              "result": "success",
              "time": 0.1804,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Rules_invoke_when_inverse_shared_async_condition_matches",
              "result": "success",
              "time": 0.9430000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Rules_invoke_when_inverse_shared_condition_matches",
              "result": "success",
              "time": 0.1103,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Rules_not_invoked_when_inverse_shared_async_condition_does_not_match",
              "result": "success",
              "time": 2.8571,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Rules_not_invoked_when_inverse_shared_condition_does_not_match",
              "result": "success",
              "time": 0.9261999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "RuleSet_can_be_used_inside_async_condition",
              "result": "success",
              "time": 1.1754,
            },
            TestCaseResult {
              "error": undefined,
              "name": "RuleSet_can_be_used_inside_condition",
              "result": "success",
              "time": 0.8270000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Runs_otherwise_conditions_for_UnlessAsync",
              "result": "success",
              "time": 4.1051,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Runs_otherwise_conditions_for_When",
              "result": "success",
              "time": 0.5630000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Runs_otherwise_conditions_for_WhenAsync",
              "result": "success",
              "time": 1.1260000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Runs_otherwise_conditons_for_Unless",
              "result": "success",
              "time": 0.8404,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Shared_async_When_is_applied_to_groupd_rules_when_initial_predicate_is_true_and_all_individual_rules_are_satisfied",
              "result": "success",
              "time": 0.4461,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Shared_async_When_is_applied_to_grouped_rules_when_initial_predicate_is_true",
              "result": "success",
              "time": 0.9460000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Shared_async_When_is_not_applied_to_grouped_rules_when_initial_predicate_is_false",
              "result": "success",
              "time": 0.40890000000000004,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Shared_async_When_respects_the_smaller_scope_of_a_inner_Unless_when_the_inner_Unless_predicate_fails",
              "result": "success",
              "time": 2.9811,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Shared_async_When_respects_the_smaller_scope_of_an_inner_Unless_when_the_inner_Unless_predicate_is_satisfied",
              "result": "success",
              "time": 0.4845,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Shared_When_is_applied_to_groupd_rules_when_initial_predicate_is_true_and_all_individual_rules_are_satisfied",
              "result": "success",
              "time": 0.455,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Shared_When_is_applied_to_grouped_rules_when_initial_predicate_is_true",
              "result": "success",
              "time": 0.15239999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Shared_When_is_not_applied_to_grouped_rules_when_initial_predicate_is_false",
              "result": "success",
              "time": 0.1183,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Shared_When_respects_the_smaller_scope_of_a_inner_Unless_when_the_inner_Unless_predicate_fails",
              "result": "success",
              "time": 0.1544,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Shared_When_respects_the_smaller_scope_of_an_inner_Unless_when_the_inner_Unless_predicate_is_satisfied",
              "result": "success",
              "time": 1.9156,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_async_condition_executed_for_each_instance_of_RuleForEach_condition_should_not_be_cached",
              "result": "success",
              "time": 1.2985,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_condition_executed_for_each_instance_of_RuleForEach_condition_should_not_be_cached",
              "result": "success",
              "time": 0.6033,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_condition_only_executed_once",
              "result": "success",
              "time": 0.4167,
            },
            TestCaseResult {
              "error": undefined,
              "name": "WhenAsync_condition_only_executed_once",
              "result": "success",
              "time": 0.92,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.SharedConditionTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Should_validate_property_value_without_instance",
              "result": "success",
              "time": 0.37579999999999997,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.StandalonePropertyValidationTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "IsValidTests_CaseInsensitive_CaseCorrect",
              "result": "success",
              "time": 0.10959999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "IsValidTests_CaseInsensitive_CaseIncorrect",
              "result": "success",
              "time": 0.2316,
            },
            TestCaseResult {
              "error": undefined,
              "name": "IsValidTests_CaseSensitive_CaseCorrect",
              "result": "success",
              "time": 1.2556,
            },
            TestCaseResult {
              "error": undefined,
              "name": "IsValidTests_CaseSensitive_CaseIncorrect",
              "result": "success",
              "time": 0.1363,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_enumType_is_not_an_enum_it_should_throw",
              "result": "success",
              "time": 0.4576,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_enumType_is_null_it_should_throw",
              "result": "success",
              "time": 2.1549,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_property_is_initialized_with_empty_string_then_the_validator_should_fail",
              "result": "success",
              "time": 0.1593,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_property_is_initialized_with_invalid_string_then_the_validator_should_fail",
              "result": "success",
              "time": 0.0987,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_the_property_is_initialized_with_null_then_the_validator_should_be_valid",
              "result": "success",
              "time": 0.087,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_validation_fails_the_default_error_should_be_set",
              "result": "success",
              "time": 0.1968,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.StringEnumValidatorTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Add_AddsItem",
              "result": "success",
              "time": 0.6937,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_not_raise_event_once_handler_detached",
              "result": "success",
              "time": 0.16090000000000002,
            },
            TestCaseResult {
              "error": undefined,
              "name": "When_Item_Added_Raises_ItemAdded",
              "result": "success",
              "time": 0.8476,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.TrackingCollectionTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Transforms_collection_element",
              "result": "success",
              "time": 0.8965000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Transforms_collection_element_async",
              "result": "success",
              "time": 1.2982,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Transforms_property_value",
              "result": "success",
              "time": 0.3746,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Transforms_property_value_to_another_type",
              "result": "success",
              "time": 0.4268,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.TransformTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Can_Provide_conditional_severity",
              "result": "success",
              "time": 0.28909999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_Provide_severity_for_item_in_collection",
              "result": "success",
              "time": 0.7448,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Correctly_provides_object_being_validated",
              "result": "success",
              "time": 0.3232,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Defaults_user_severity_to_error",
              "result": "success",
              "time": 0.1704,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_use_last_supplied_severity",
              "result": "success",
              "time": 0.6834,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Stores_user_severity_against_validation_failure",
              "result": "success",
              "time": 0.2021,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Throws_when_provider_is_null",
              "result": "success",
              "time": 0.1945,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.UserSeverityTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Can_Provide_state_for_item_in_collection",
              "result": "success",
              "time": 1.113,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Correctly_provides_object_being_validated",
              "result": "success",
              "time": 0.3223,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Stores_user_state_against_validation_failure",
              "result": "success",
              "time": 1.1142,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Throws_when_provider_is_null",
              "result": "success",
              "time": 0.2016,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.UserStateTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Does_not_throw_when_valid",
              "result": "success",
              "time": 0.2097,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Does_not_throw_when_valid_and_a_ruleset",
              "result": "success",
              "time": 0.3775,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Does_not_throw_when_valid_and_a_ruleset_async",
              "result": "success",
              "time": 0.3892,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Does_not_throw_when_valid_async",
              "result": "success",
              "time": 1.014,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Only_root_validator_throws",
              "result": "success",
              "time": 0.7993,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Populates_errors",
              "result": "success",
              "time": 0.3478,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Serializes_exception",
              "result": "success",
              "time": 7.024,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Throws_exception",
              "result": "success",
              "time": 0.4234,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Throws_exception_async",
              "result": "success",
              "time": 0.4271,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Throws_exception_with_a_ruleset",
              "result": "success",
              "time": 0.7043,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Throws_exception_with_a_ruleset_async",
              "result": "success",
              "time": 1.1925,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ToString_provides_error_details",
              "result": "success",
              "time": 11.7391,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ValidationException_provides_correct_message_when_appendDefaultMessage_false",
              "result": "success",
              "time": 0.1514,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ValidationException_provides_correct_message_when_appendDefaultMessage_true",
              "result": "success",
              "time": 0.0992,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.ValidateAndThrowTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Can_serialize_failure",
              "result": "success",
              "time": 0.0995,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_serialize_result",
              "result": "success",
              "time": 7.1021,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_add_errors",
              "result": "success",
              "time": 0.0917,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_be_valid_when_there_are_no_errors",
              "result": "success",
              "time": 0.0335,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_not_be_valid_when_there_are_errors",
              "result": "success",
              "time": 0.0549,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ToString_return_empty_string_when_there_is_no_error",
              "result": "success",
              "time": 0.1348,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ToString_return_error_messages_with_given_separator",
              "result": "success",
              "time": 0.0727,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ToString_return_error_messages_with_newline_as_separator",
              "result": "success",
              "time": 0.3538,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.ValidationResultTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Does_not_throw_when_rule_declared_without_property",
              "result": "success",
              "time": 0.1726,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Gets_validators_for_property",
              "result": "success",
              "time": 0.1789,
            },
            TestCaseResult {
              "error": undefined,
              "name": "GetValidatorsForMember_and_GetRulesForMember_can_both_retrieve_for_model_level_rule",
              "result": "success",
              "time": 0.3935,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Returns_empty_collection_for_property_with_no_validators",
              "result": "success",
              "time": 0.0885,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should_retrieve_name_given_to_it_pass_property_as_string",
              "result": "success",
              "time": 0.5729,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.ValidatorDescriptorTester",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Can_use_property_with_include",
              "result": "success",
              "time": 0.9319000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Does_not_validate_other_property",
              "result": "success",
              "time": 0.4189,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Does_not_validate_other_property_using_expression",
              "result": "success",
              "time": 0.3211,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Executes_correct_rule_when_using_property_with_include",
              "result": "success",
              "time": 1.118,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Executes_correct_rule_when_using_property_with_include_async",
              "result": "success",
              "time": 1.7451999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Includes_nested_property",
              "result": "success",
              "time": 0.6524,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Includes_nested_property_using_expression",
              "result": "success",
              "time": 0.5054000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "MemberNameValidatorSelector_returns_true_when_property_name_matches",
              "result": "success",
              "time": 0.29750000000000004,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_nullable_property_with_overriden_name_when_selected",
              "result": "success",
              "time": 1.9594999999999998,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Validates_property_using_expression",
              "result": "success",
              "time": 1.3178,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.ValidatorSelectorTests",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "Allows_only_one_failure_to_match",
              "result": "success",
              "time": 0.7083,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_use_indexer_in_string_message",
              "result": "success",
              "time": 0.562,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Can_use_indexer_in_string_message_inverse",
              "result": "success",
              "time": 0.553,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Expected_error_code_check",
              "result": "success",
              "time": 0.5873999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Expected_message_argument_check",
              "result": "success",
              "time": 0.9659,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Expected_message_check",
              "result": "success",
              "time": 0.6922,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Expected_severity_check",
              "result": "success",
              "time": 4.6721,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Expected_state_check",
              "result": "success",
              "time": 0.8907999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Matches_any_failure",
              "result": "success",
              "time": 0.6901,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Matches_model_level_rule",
              "result": "success",
              "time": 0.6478999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Model_level_check_fails_if_no_model_level_failures",
              "result": "success",
              "time": 0.5599,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveChildValidator_should_not_throw_when_property_Does_have_child_validator",
              "result": "success",
              "time": 2.2892,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveChildValidator_should_not_throw_when_property_Does_have_child_validator_and_expecting_a_basetype",
              "result": "success",
              "time": 0.4634,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveChildValidator_should_not_throw_when_property_has_collection_validators",
              "result": "success",
              "time": 0.5756,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveChildValidator_should_throw_when_property_has_a_different_child_validator",
              "result": "success",
              "time": 0.5867,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveChildValidator_should_work_with_DependentRules",
              "result": "success",
              "time": 1.2294,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveChildvalidator_throws_when_collection_property_Does_not_have_child_validator",
              "result": "success",
              "time": 0.3538,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveChildValidator_throws_when_property_does_not_have_child_validator",
              "result": "success",
              "time": 0.34450000000000003,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveChildValidator_works_on_model_level_rules",
              "result": "success",
              "time": 1.3494,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_async",
              "result": "success",
              "time": 2.7288,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_async_throws",
              "result": "success",
              "time": 1.366,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_model_async",
              "result": "success",
              "time": 1.3614,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_model_async_throws",
              "result": "success",
              "time": 1.1585,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_preconstructed_object_does_not_throw_for_unwritable_property",
              "result": "success",
              "time": 0.8894000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_should_not_throw_when_there_are_errors_with_preconstructed_object",
              "result": "success",
              "time": 0.6462,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_should_not_throw_when_there_are_validation_errors",
              "result": "success",
              "time": 0.7782,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_should_not_throw_when_there_are_validation_errors__WhenAsyn_is_used(age: 42, cardNumber: \\"\\")",
              "result": "success",
              "time": 0.6089,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_should_not_throw_when_there_are_validation_errors__WhenAsyn_is_used(age: 42, cardNumber: null)",
              "result": "success",
              "time": 0.746,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_should_not_throw_when_there_are_validation_errors_ruleforeach",
              "result": "success",
              "time": 0.8097,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_Should_support_nested_properties",
              "result": "success",
              "time": 0.8523,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_Should_throw_when_there_are_no_validation_errors",
              "result": "success",
              "time": 0.8389,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_should_throw_when_there_are_no_validation_errors_with_preconstructed_object",
              "result": "success",
              "time": 0.8107,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_should_throw_when_there_are_not_validation_errors__WhenAsyn_Is_Used(age: 17, cardNumber: \\"\\")",
              "result": "success",
              "time": 1.7937,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_should_throw_when_there_are_not_validation_errors__WhenAsyn_Is_Used(age: 17, cardNumber: \\"cardNumber\\")",
              "result": "success",
              "time": 0.6412,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_should_throw_when_there_are_not_validation_errors__WhenAsyn_Is_Used(age: 17, cardNumber: null)",
              "result": "success",
              "time": 0.5484,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_should_throw_when_there_are_not_validation_errors__WhenAsyn_Is_Used(age: 42, cardNumber: \\"cardNumber\\")",
              "result": "success",
              "time": 0.8127,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_should_throw_when_there_are_not_validation_errors_ruleforeach",
              "result": "success",
              "time": 2.2201999999999997,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_with_an_unmatched_rule_and_a_single_error_should_throw_an_exception",
              "result": "success",
              "time": 0.6954,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationError_with_an_unmatched_rule_and_multiple_errors_should_throw_an_exception",
              "result": "success",
              "time": 1.7809,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationErrorFor_takes_account_of_rulesets",
              "result": "success",
              "time": 0.7521,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldHaveValidationErrorFor_takes_account_of_rulesets_fluent_approach",
              "result": "success",
              "time": 0.7776000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_async",
              "result": "success",
              "time": 1.5238,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_async_model_throws",
              "result": "success",
              "time": 1.1796,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_async_throws",
              "result": "success",
              "time": 2.2945,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_model_async",
              "result": "success",
              "time": 1.2782,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_should_correctly_handle_explicitly_providing_object_to_validate",
              "result": "success",
              "time": 3.1438,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_should_correctly_handle_explicitly_providing_object_to_validate_and_other_property_fails_validation",
              "result": "success",
              "time": 1.4272,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_should_have_validation_error_details_when_thrown_ruleforeach",
              "result": "success",
              "time": 1.2661,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_should_not_throw_when_there_are_no_errors",
              "result": "success",
              "time": 0.8220999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHAveValidationError_should_not_throw_When_there_are_no_errors_with_preconstructed_object",
              "result": "success",
              "time": 0.721,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_should_not_throw_when_there_are_not_validation_errors_ruleforeach",
              "result": "success",
              "time": 0.8011999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_Should_support_nested_properties",
              "result": "success",
              "time": 0.9315,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_should_throw_when_there_are_errors",
              "result": "success",
              "time": 0.8857999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_should_throw_when_there_are_errors_with_preconstructed_object",
              "result": "success",
              "time": 2.3915,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_should_throw_when_there_are_not_validation_errors__WhenAsyn_is_used(age: 17, cardNumber: \\"\\")",
              "result": "success",
              "time": 0.5719,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_should_throw_when_there_are_not_validation_errors__WhenAsyn_is_used(age: 17, cardNumber: \\"cardNumber\\")",
              "result": "success",
              "time": 0.5838,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_should_throw_when_there_are_not_validation_errors__WhenAsyn_is_used(age: 17, cardNumber: null)",
              "result": "success",
              "time": 0.5804,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_should_throw_when_there_are_not_validation_errors__WhenAsyn_is_used(age: 42, cardNumber: \\"cardNumber\\")",
              "result": "success",
              "time": 0.897,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_should_throw_when_there_are_validation_errors__WhenAsyn_is_used(age: 42, cardNumber: \\"\\")",
              "result": "success",
              "time": 0.6807,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_should_throw_when_there_are_validation_errors__WhenAsyn_is_used(age: 42, cardNumber: null)",
              "result": "success",
              "time": 0.8635,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ShouldNotHaveValidationError_should_throw_when_there_are_validation_errors_ruleforeach",
              "result": "success",
              "time": 0.9397,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Tests_nested_property",
              "result": "success",
              "time": 0.4914,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Tests_nested_property_reverse",
              "result": "success",
              "time": 0.4663,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Tests_nested_property_using_obsolete_method",
              "result": "success",
              "time": 0.46759999999999996,
            },
            TestCaseResult {
              "error": undefined,
              "name": "TestValidate_runs_async",
              "result": "success",
              "time": 0.7477,
            },
            TestCaseResult {
              "error": undefined,
              "name": "TestValidate_runs_async_throws",
              "result": "success",
              "time": 0.8540000000000001,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Unexpected_error_code_check",
              "result": "success",
              "time": 1.6124,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Unexpected_message_check(withoutErrMsg: \\"bar\\", errMessages: [\\"bar\\"])",
              "result": "success",
              "time": 0.1548,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Unexpected_message_check(withoutErrMsg: \\"bar\\", errMessages: [\\"foo\\", \\"bar\\"])",
              "result": "success",
              "time": 0.1797,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Unexpected_message_check(withoutErrMsg: \\"bar\\", errMessages: [\\"foo\\"])",
              "result": "success",
              "time": 0.3297,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Unexpected_message_check(withoutErrMsg: \\"bar\\", errMessages: [])",
              "result": "success",
              "time": 0.7345999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Unexpected_severity_check",
              "result": "success",
              "time": 0.9091,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Unexpected_state_check",
              "result": "success",
              "time": 0.9751,
            },
          ],
        },
      ],
      "name": "FluentValidation.Tests.ValidatorTesterTester",
      "totalTime": undefined,
    },
  ],
  "totalTime": 4480,
}
`;

exports[`dotnet-trx tests report from SilentNotes test results matches snapshot 1`] = `
TestRunResult {
  "path": "fixtures/external/SilentNotes.trx",
  "suites": Array [
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "AreEqualWorksWithDifferentPassword",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "AreEqualWorksWithSameContent",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "CorrectlyConvertsSecureStringToString",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "CorrectlyConvertsStringToSecureString",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ValidateAcceptsValidCredentials",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ValidateRejectsInvalidCredentials",
              "result": "success",
              "time": 6,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.CloudStorageCredentialsTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "FileLifecycleWorks",
              "result": "success",
              "time": 95,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoFetchToken",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoOpenAuthorizationPageInBrowser",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoRefreshToken",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ThrowsAccessDeniedExceptionWithInvalidToken",
              "result": "success",
              "time": 6,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.CloudStorageProviders.DropboxCloudStorageClientTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "FileLifecycleWorks",
              "result": "success",
              "time": 161,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SanitizeCredentials_ChangesInvalidPrefix",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SecureSslConnectionWorks",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ThrowsWithHttpInsteadOfFtp",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ThrowsWithInvalidPassword",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ThrowsWithInvalidUrl",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ThrowsWithInvalidUsername",
              "result": "skipped",
              "time": 0,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.CloudStorageProviders.FtpCloudStorageClientTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "ChoosesCorrectUrlForGmxComEmail",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ChoosesCorrectUrlForGmxNetEmail",
              "result": "success",
              "time": 1,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.CloudStorageProviders.GmxCloudStorageClientTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "FileLifecycleWorks",
              "result": "success",
              "time": 40,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoFetchToken",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoOpenAuthorizationPageInBrowser",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoRefreshToken",
              "result": "skipped",
              "time": 0,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.CloudStorageProviders.GoogleCloudStorageClientTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "FileLifecycleWorks",
              "result": "success",
              "time": 15,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoFetchToken",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoOpenAuthorizationPageInBrowser",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoRefreshToken",
              "result": "skipped",
              "time": 0,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.CloudStorageProviders.OnedriveCloudStorageClientTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "FileLifecycleWorks",
              "result": "success",
              "time": 14,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ParseGmxWebdavResponseCorrectly",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ParseStratoWebdavResponseCorrectly",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ThrowsWithInvalidPath",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ThrowsWithInvalidUsername",
              "result": "success",
              "time": 0.00009999999999999999,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.CloudStorageProviders.WebdavCloudStorageClientTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "AreEqualWorksWithNullDate",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "AreEqualWorksWithSameContent",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "NeedsRefreshReturnsFalseForTokenFlow",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "NeedsRefreshReturnsFalseIfNotExpired",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "NeedsRefreshReturnsTrueIfExpired",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "NeedsRefreshReturnsTrueIfNoExpirationDate",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SetExpiryDateBySecondsWorks",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SetExpiryDateBySecondsWorksWithNull",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SetExpiryDateBySecondsWorksWithVeryShortPeriod",
              "result": "success",
              "time": 0.00009999999999999999,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.CloudStorageTokenTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "ParsesAllErrorCodesCorrectly",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ParsesNullErrorCodeCorrectly",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ParsesUnknownErrorCodeCorrectly",
              "result": "success",
              "time": 0.00009999999999999999,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.OAuth2.AuthorizationResponseErrorTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "BuildAuthorizationRequestUrlEscapesParameters",
              "result": "success",
              "time": 2,
            },
            TestCaseResult {
              "error": undefined,
              "name": "BuildAuthorizationRequestUrlLeavesOutOptionalParameters",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "BuildAuthorizationRequestUrlThrowsWithMissingRedirectUrlForTokenFlow",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "BuildAuthorizationRequestUrlUsesAllParameters",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "BuildAuthorizationRequestUrlUsesCodeVerifier",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ParseRealWorldDropboxRejectResponse",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ParseRealWorldDropboxSuccessResponse",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ParseRealWorldGoogleRejectResponse",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ParseRealWorldGoogleSuccessResponse",
              "result": "success",
              "time": 0.00009999999999999999,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.OAuth2.OAuth2UtilsTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "BuildOAuth2AuthorizationRequestUrlWorks",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "FetchTokenCanInterpretGoogleResponse",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "FetchTokenReturnsNullForDeniedAccess",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "FetchTokenThrowsWithWrongState",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "RefreshTokenCanInterpretGoogleResponse",
              "result": "success",
              "time": 3,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.OAuth2CloudStorageClientTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "AreEqualsWorksCorrectly",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "CorrectlyConvertsSecureStringToString",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "CorrectlyConvertsSecureStringToUnicodeBytes",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "CorrectlyConvertsSecureStringToUtf8Bytes",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "CorrectlyConvertsStringToSecureString",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "CorrectlyConvertsUnicodeBytesToSecureString",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "CorrectlyConvertsUtf8BytesToSecureString",
              "result": "success",
              "time": 0.00009999999999999999,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.SecureStringExtensionsTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": Array [
        TestGroupResult {
          "name": null,
          "tests": Array [
            TestCaseResult {
              "error": undefined,
              "name": "DecryptAfterDesrializationCanReadAllPropertiesBack",
              "result": "success",
              "time": 2,
            },
            TestCaseResult {
              "error": undefined,
              "name": "DecryptAfterDesrializationRespectsNullProperties",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "EncryptBeforeSerializationProtectsAllNecessaryProperties",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "EncryptBeforeSerializationRespectsNullProperties",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SerializedDatacontractCanBeReadBack",
              "result": "success",
              "time": 16,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SerializedDatacontractDoesNotContainNullProperties",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SerializedDatacontractDoesNotContainPlaintextData",
              "result": "success",
              "time": 2,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SerializedJsonCanBeReadBack",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SerializedJsonDoesNotContainNullProperties",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SerializedJsonDoesNotContainPlaintextData",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SerializedXmlCanBeReadBack",
              "result": "success",
              "time": 16,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SerializedXmlDoesNotContainNullProperties",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SerializedXmlDoesNotContainPlaintextData",
              "result": "success",
              "time": 0.00009999999999999999,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.SerializeableCloudStorageCredentialsTest",
      "totalTime": undefined,
    },
  ],
  "totalTime": 1257,
}
`;
