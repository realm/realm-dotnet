<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <UnityBuild>false</UnityBuild>
    <!--
    The Visual Studio Run Tests context menu command (Ctrl+R, T) always picks the first target framework
    in the project file, but the NUnit test adapter doesn't support .NET Standard 2.0, so it should never be
    first in the list.
    -->
    <TargetFrameworks Condition="'$(MSBuildVersion)' &gt;= '17.0'">$(TargetFrameworks);net6.0;net7.0</TargetFrameworks>
    <TargetFrameworks Condition="'$(OS)' == 'Windows_NT'">$(TargetFrameworks);net461</TargetFrameworks>
    <TargetFrameworks>$(TargetFrameworks);netstandard2.0</TargetFrameworks>
    <LangVersion>9.0</LangVersion>
    <RootNamespace>Realms.Tests</RootNamespace>
    <IsTestProject>true</IsTestProject>
    <GenerateProgramFile>false</GenerateProgramFile>
    <CodeAnalysisRuleSet>../../global.ruleset</CodeAnalysisRuleSet>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <DisableImplicitNamespaceImports>true</DisableImplicitNamespaceImports>
    <NoWarn>MSB4011</NoWarn>
    <OutputType Condition="'$(RealmTestsStandaloneExe)' == 'true'">Exe</OutputType>
    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
    <CompilerGeneratedFilesOutputPath>Generated</CompilerGeneratedFilesOutputPath>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <PropertyGroup Condition="'$(UnityBuild)' == 'true'">
    <TargetFrameworks>netstandard2.0</TargetFrameworks>
    <PackageId>Realm.Tests</PackageId>
    <IsPackable>true</IsPackable>
    <DefineConstants>$(DefineConstants);UNITY</DefineConstants>
    <RealmDllPath Condition="'$(RealmDllPath)' == ''">..\..\Realm\Realm.Unity\Runtime\Realm.dll</RealmDllPath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TestWeavedClasses)' == 'true'">
    <DefineConstants>$(DefineConstants);TEST_WEAVER</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition="'$(UnityBuild)' != 'true'">
    <PackageReference Include="NUnit" Version="3.13.2" />
    <PackageReference Include="NUnitLite" Version="3.13.2" />
    <PackageReference Include="NUnit3TestAdapter" Version="4.2.1" Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework' OR '$(TargetFrameworkIdentifier)' == '.NETCoreApp'" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.2" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.3.1" />
  </ItemGroup>

  <ItemGroup Condition="'$(UnityBuild)' == 'true'">
    <Reference Include="nunit.framework">
      <HintPath>..\..\dependencies\com.unity.ext.nunit@1.0.6\nunit.framework.dll</HintPath>
    </Reference>

    <!--
    In the Unity Tests project, we're referincing Realm.dll that has bundled dependencies in it. We should reference
    the same dll here, otherwise when we try to ilrepack the test dependencies, we won't find MongoDB.Bson and friends.
    -->
    <Reference Include="Realm">
      <HintPath>$(RealmDllPath)</HintPath>
    </Reference>

    <!--
    Since this is a compiled binary, the Unity weaver will not pick it up, which means we need to pre-weave it using the
    Fody Weaver.
    -->
    <PackageReference Include="Fody" Version="6.*" PrivateAssets="None" />
    <ProjectReference Include="..\..\Realm\Realm.Fody\Realm.Fody.csproj" PrivateAssets="None" />
    <ProjectReference Include="..\..\Realm\Realm.SourceGenerator\Realm.SourceGenerator.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />

    <Compile Remove="Program.cs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="7.0.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.CSharp" Version="4.5.0" />
    <PackageReference Include="Nito.AsyncEx.Context" Version="5.1.0" />
    <PackageReference Include="StyleCop.Analyzers" Version="1.2.0-beta.205">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <!-- Removing the generated files from compilation, adding them back as non-content files. -->
    <Compile Remove="$(CompilerGeneratedFilesOutputPath)/**/*.cs" />
    <None Include="$(CompilerGeneratedFilesOutputPath)/**/*.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(UseRealmNupkgsWithVersion)' == '' AND '$(UnityBuild)' != 'true'">
    <ProjectReference Include="..\..\Realm\Realm\Realm.csproj" PrivateAssets="None" />
    <ProjectReference Include="..\..\Realm\Realm.SourceGenerator\Realm.SourceGenerator.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
  </ItemGroup>
  <Import Project="..\..\Realm\Realm.Fody\InSolutionWeaver.props" Condition="'$(UseRealmNupkgsWithVersion)' == ''" />
  <ItemGroup Condition="'$(UseRealmNupkgsWithVersion)' != ''">
    <PackageReference Include="Realm" Version="$(UseRealmNupkgsWithVersion)" PrivateAssets="None" />
    <PackageReference Include="Realm.SourceGenerator" Version="$(UseRealmNupkgsWithVersion)" PrivateAssets="None" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework' AND '$(UseRealmNupkgsWithVersion)' == ''">
    <None Include="..\..\wrappers\build\Windows\$(Configuration)-Win32\realm-wrappers.dll" Condition="Exists('..\..\wrappers\build\Windows\$(Configuration)-Win32\realm-wrappers.dll')">
      <Link>lib\win32\x86\realm-wrappers.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\..\wrappers\build\Windows\$(Configuration)-x64\realm-wrappers.dll" Condition="Exists('..\..\wrappers\build\Windows\$(Configuration)-x64\realm-wrappers.dll')">
      <Link>lib\win32\x64\realm-wrappers.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\..\wrappers\build\Windows\$(Configuration)-arm64\realm-wrappers.dll" Condition="Exists('..\..\wrappers\build\Windows\$(Configuration)-arm64\realm-wrappers.dll')">
      <Link>lib\win32\arm64\realm-wrappers.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp' AND '$(UseRealmNupkgsWithVersion)' == ''">
    <None Include="..\..\wrappers\build\Darwin\$(Configuration)\librealm-wrappers.dylib" Condition="$([MSBuild]::IsOsPlatform('OSX')) AND Exists('..\..\wrappers\build\Darwin\$(Configuration)\librealm-wrappers.dylib')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\..\wrappers\build\Linux\$(Configuration)-x86_64\librealm-wrappers.so" Condition="$([MSBuild]::IsOsPlatform('Linux')) AND '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64' ">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\..\wrappers\build\Linux\$(Configuration)-aarch64\librealm-wrappers.so" Condition="$([MSBuild]::IsOsPlatform('Linux')) AND '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'Arm64' ">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\..\wrappers\build\Windows\$(Configuration)-x64\realm-wrappers.dll" Condition="$([MSBuild]::IsOsPlatform('Windows')) AND '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64' ">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\..\wrappers\build\Windows\$(Configuration)-arm64\realm-wrappers.dll" Condition="$([MSBuild]::IsOsPlatform('Windows')) AND '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'Arm64' ">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="EmbeddedResources\ForMigrationsToCopyAndMigrate.realm" />
    <EmbeddedResource Include="EmbeddedResources\guids.realm" />
    <EmbeddedResource Include="EmbeddedResources\sync-guids.realm" />
    <EmbeddedResource Include="EmbeddedResources\bad-guids.realm" />
    <EmbeddedResource Include="EmbeddedResources\mixed-guids.realm" />
    <EmbeddedResource Include="EmbeddedResources\nunit3-junit.xslt">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <AdditionalFiles Include="..\..\stylecop.json" />
    <None Include="..\App.config" Link="App.config" />
    <Content Include="..\App.Local.config" Link="App.Local.config" Condition="Exists('..\App.Local.config')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="EmbeddedResources\v6db.realm">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\Tools\DeployApps\BaasClient.cs">
      <Link>Sync\BaasClient.cs</Link>
      <SubType></SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Generated\Realm.SourceGenerator\Realms.SourceGenerator.RealmGenerator\" />
  </ItemGroup>
</Project>