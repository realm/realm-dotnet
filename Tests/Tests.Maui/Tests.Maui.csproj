<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net8.0-android;net8.0-ios;net8.0-maccatalyst</TargetFrameworks>
    <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows')) and '$(MSBuildRuntimeType)' == 'Full'">$(TargetFrameworks);net8.0-windows10.0.19041</TargetFrameworks>
    <OutputType>Exe</OutputType>
    <RootNamespace>Tests.Maui</RootNamespace>
    <SingleProject>true</SingleProject>
    <ImplicitUsings>enable</ImplicitUsings>
    <DisableFody>true</DisableFody>
    <Nullable>enable</Nullable>
    <UseMaui>true</UseMaui>

    <!-- Display name -->
    <ApplicationTitle>Tests.Maui</ApplicationTitle>

    <!-- App Identifier -->
    <ApplicationId>io.realm.mauitests</ApplicationId>
    <ApplicationIdGuid>2C2642F2-AA05-4016-985D-211F026B08B8</ApplicationIdGuid>

    <!-- Versions -->
    <ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
    <ApplicationVersion>1</ApplicationVersion>

    <!-- Required for C# Hot Reload -->
    <UseInterpreter Condition="'$(Configuration)' == 'Debug'">True</UseInterpreter>

    <SupportedOSPlatformVersion Condition="$(TargetFramework.Contains('-ios'))">11.0</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="$(TargetFramework.Contains('-maccatalyst'))">13.2</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="$(TargetFramework.Contains('-android'))">21.0</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="$(TargetFramework.Contains('-windows'))">10.0.17763.0</SupportedOSPlatformVersion>
    <TargetPlatformMinVersion Condition="$(TargetFramework.Contains('-windows'))">10.0.17763.0</TargetPlatformMinVersion>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\Realm.Tests\Realm.Tests.csproj" />
    <PackageReference Include="Microsoft.Maui.Controls" Version="8.0.7" />
  </ItemGroup>

  <ItemGroup Condition="'$(UseRealmNupkgsWithVersion)' != ''">
    <PackageReference Include="Realm" Version="$(UseRealmNupkgsWithVersion)" PrivateAssets="None" />
  </ItemGroup>

  <ItemGroup Condition="'$(UseRealmNupkgsWithVersion)' == ''">
    <ProjectReference Include="..\..\Realm\Realm\Realm.csproj" PrivateAssets="None" />
  </ItemGroup>

  <ItemGroup>
    <!-- App Icon -->
    <MauiIcon Include="Resources\appicon.svg" ForegroundFile="Resources\appiconfg.svg" Color="#512BD4" />

    <!-- Splash Screen -->
    <MauiSplashScreen Include="Resources\appiconfg.svg" Color="#512BD4" BaseSize="128,128" />

    <!-- Images -->
    <MauiImage Include="Resources\Images\*" />
    <MauiFont Include="Resources\Fonts\*" />

    <!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
    <MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
  </ItemGroup>

  <ItemGroup Condition="$(TargetFramework.Contains('-ios')) AND '$(UseRealmNupkgsWithVersion)' == ''">
    <NativeReference Include="..\..\wrappers\build\iphoneos\$(Configuration)\realm-wrappers.framework" Condition="$(RuntimeIdentifier.StartsWith('ios-'))">
      <Kind>Framework</Kind>
      <SmartLink>False</SmartLink>
    </NativeReference>
    <NativeReference Include="..\..\wrappers\build\iphonesimulator\$(Configuration)\realm-wrappers.framework" Condition="!$(RuntimeIdentifier.StartsWith('ios-'))">
      <Kind>Framework</Kind>
      <SmartLink>False</SmartLink>
    </NativeReference>
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.Contains('-maccatalyst')) AND '$(UseRealmNupkgsWithVersion)' == ''">
    <NativeReference Include="..\..\wrappers\build\macosx\$(Configuration)\realm-wrappers.framework">
      <Kind>Framework</Kind>
      <SmartLink>False</SmartLink>
    </NativeReference>
  </ItemGroup>

  <ItemGroup Condition="$(TargetFramework.Contains('-windows')) AND '$(UseRealmNupkgsWithVersion)' == ''">
    <None Include="..\..\wrappers\build\Windows\$(Configuration)-x64\realm-wrappers.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup Condition="$(TargetFramework.Contains('-android')) AND '$(UseRealmNupkgsWithVersion)' == ''">
    <AndroidNativeLibrary Include="..\..\wrappers\build\android\$(Configuration)-x86\librealm-wrappers.so">
      <Link>lib\x86\librealm-wrappers.so</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </AndroidNativeLibrary>
    <AndroidNativeLibrary Include="..\..\wrappers\build\android\$(Configuration)-x86_64\librealm-wrappers.so">
      <Link>lib\x86_64\librealm-wrappers.so</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </AndroidNativeLibrary>
    <AndroidNativeLibrary Include="..\..\wrappers\build\android\$(Configuration)-arm64-v8a\librealm-wrappers.so">
      <Link>lib\arm64-v8a\librealm-wrappers.so</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </AndroidNativeLibrary>
    <AndroidNativeLibrary Include="..\..\wrappers\build\android\$(Configuration)-armeabi-v7a\librealm-wrappers.so">
      <Link>lib\armeabi-v7a\librealm-wrappers.so</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </AndroidNativeLibrary>
  </ItemGroup>

  <PropertyGroup Condition="$(TargetFramework.Contains('-windows'))">
    <OutputType>WinExe</OutputType>
    <RuntimeIdentifier>win10-x64</RuntimeIdentifier>
  </PropertyGroup>

</Project>
